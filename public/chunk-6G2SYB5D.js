import{a as F,b as _e,c as Ne}from"./chunk-O6TRO537.js";import{H as ye,J as Te,M as R,N as $,P as we,Q as he,U as j,W as ge,X as Pe,Y as H,Z as Ie,_ as Me,a as q,b as z,ba as Oe,c as Z,ca as ke,d as M,da as Fe,e as k,ea as De,f as ee,fa as Ve,g as v,ga as Ae,h as _,j as me,k as l,l as E,la as ze,m as C,n as u,na as B,o as a,p as n,q as Q,qa as G,r as x,s as h,sa as be,t as m,u as fe,ua as ve,va as T,w as s,wa as J,x as f,xa as W,y as N,z as y}from"./chunk-4V5TMZET.js";import{a as O,b as Se,d as Y,f as p}from"./chunk-YYD2Q6U2.js";var L=Y(J());var D=class o{constructor(t){this.firestore=t}getEspecialistasPorEspecialidad(t){return p(this,null,function*(){let e=B(this.firestore,"users"),r=(yield G(e)).docs.map(c=>O({id:c.id},c.data())).filter(c=>this.especialistaValido(c,t));return console.log("Especialistas filtrados:",r),r})}getEspecialistas(){return p(this,null,function*(){let t=B(this.firestore,"users"),e=be(t,ve("role","==","especialista")),r=(yield G(e)).docs.map(c=>O({id:c.id},c.data()));return console.log("Especialistas filtrados:",r),r})}especialistaValido(t,e){return t.role==="especialista"&&t.especialidades.includes(e)}getPacientesUnicosPorEspecialidad(t,e){return p(this,null,function*(){let i=B(this.firestore,"Turnos"),r=yield G(i),c=new Set,d=[],b=r.docs.map(I=>{let X=I.data();return O({id:I.id},X)}).filter(I=>{let X=I.especialista_id===t,Ce=I.especialidad===e;return X&&Ce&&c.add(I.pacienteId),X&&Ce});console.log("Turnos solicitados:",b);let A=Array.from(c);return yield this.getPacientesPorIds(A)})}getPacientesUnicosPorEspecialista(t){return p(this,null,function*(){let e=B(this.firestore,"Turnos"),i=yield G(e),r=new Set,c=[],d=i.docs.map(P=>{let I=P.data();return O({id:P.id},I)}).filter(P=>{let I=P.especialista_id===t;return I&&P.pacienteId&&r.add(P.pacienteId),I});console.log("Turnos solicitados:",d);let b=Array.from(r);return yield this.getPacientesPorIds(b)})}getPacientesPorIds(t){return p(this,null,function*(){let e=B(this.firestore,"users"),i=[];for(let r of t)if(r){let c=be(e,ve("uid","==",r));(yield G(c)).forEach(b=>{let A=b.data();i.push(O({id:b.id},A))})}else console.warn("ID de paciente es undefined, omitiendo este ID.");return i})}getHorariosPorEspecialista(t){return p(this,null,function*(){let e=B(this.firestore,"horarios"),i=yield G(e),r=yield this.getTurnosPorEspecialista(t);return i.docs.map(c=>{let d=c.data();return O({id:c.id},d)}).filter(c=>c.especialistaId===t&&this.isWithinNext15Days(c.fecha)&&!this.isHorarioOcupado(c,r))})}getTurnosPorEspecialista(t){return p(this,null,function*(){let e=B(this.firestore,"turnos");return(yield G(e)).docs.map(r=>{let c=r.data();return O({id:r.id},c)}).filter(r=>r.especialistaId===t)})}isHorarioOcupado(t,e){let i=new Date(t.fecha),r=new Date(i);return r.setMinutes(r.getMinutes()+30),e.some(c=>{let d=new Date(c.fecha),b=new Date(d);return b.setMinutes(b.getMinutes()+30),d<r&&b>i})}isWithinNext15Days(t){let e=new Date(t),i=new Date,r=new Date;return r.setDate(i.getDate()+15),e>=i&&e<=r}static \u0275fac=function(e){return new(e||o)(M(ze))};static \u0275prov=z({token:o,factory:o.\u0275fac,providedIn:"root"})};function je(o,t){if(o&1){let e=x();a(0,"div",12),h("click",function(){let r=v(e).$implicit,c=m();return _(c.onEspecialistaChange(r))}),Q(1,"img",13),a(2,"span",14),s(3),n()()}if(o&2){let e=t.$implicit;l(),fe("alt",e.nombre),u("src",e.imageUrl||"default-image.jpg",me),l(2),y("",e.nombre," ",e.apellido,"")}}function He(o,t){if(o&1){let e=x();a(0,"div",15),h("click",function(){let r=v(e).$implicit,c=m();return _(c.onEspecialidadChange(r.nombre))}),Q(1,"img",16),a(2,"span",17),s(3),n()()}if(o&2){let e=t.$implicit;l(),fe("alt",e.nombre),u("src",e.imageUrl||"default-image.jpg",me),l(2),f(e.nombre)}}function Be(o,t){if(o&1){let e=x();a(0,"div",18),h("click",function(){let r=v(e).$implicit,c=m();return _(c.onDiaSeleccionado(r))}),a(1,"span"),s(2),ye(3,"date"),n()()}if(o&2){let e=t.$implicit;l(2),f(Te(3,1,e,"yyyy/MM/dd"))}}function Ge(o,t){if(o&1){let e=x();a(0,"div",18),h("click",function(){let r=v(e).$implicit,c=m();return _(c.onHorarioSeleccionado(r))}),a(1,"button",19),s(2),n()()}if(o&2){let e=t.$implicit;l(2),y("",e.horaInicio," - ",e.horaFin,"")}}function Le(o,t){o&1&&(a(0,"div")(1,"label",20),s(2,"Paciente:"),n(),Q(3,"input",21),a(4,"label",22),s(5,"DNI:"),n(),Q(6,"input",23),a(7,"label",24),s(8,"Obra Social:"),n(),Q(9,"input",25),n())}var ie=class o{constructor(t,e,i,r,c,d){this.especialidadService=t;this.especialistaService=e;this.turnoService=i;this.authService=r;this.fb=c;this.router=d;this.turnoForm=this.fb.group({especialidad:["",H.required],especialista:["",H.required],horario:["",H.required],paciente:["",H.required],dni:["",[H.required,H.pattern(/^[0-9]{8,}$/)]],obraSocial:["",H.required]})}especialistas=[];horarios=[];turnoForm;isAdmin=!1;isPaciente=!1;usuarioSeleccionado;obtenerIdPaciente;nombreEspecialista;especialiadaSeleccionada;idEspecialista;especialidadesDelEspecialista=[];diasDisponibles=[];horariosPorDia=[];selectedTurno;ngOnInit(){this.cargarEspecialistas(),this.checkUserRole()}cargarEspecialistas(){return p(this,null,function*(){try{this.especialistas=yield this.especialistaService.getEspecialistas(),console.log("Especialistas cargados:",this.especialistas)}catch(t){console.error("Error al cargar los especialistas:",t),L.default.fire("Error","No se pudieron cargar los especialistas","error")}})}getUser(){return p(this,null,function*(){return new Promise(t=>{this.authService.getUser().subscribe(t)})})}checkUserRole(){return p(this,null,function*(){this.authService.getUser().subscribe(t=>{t&&(this.isAdmin=t.role==="administrador",this.isPaciente=t.role==="paciente")})})}setPacienteData(t){return p(this,null,function*(){this.usuarioSeleccionado=t,t&&this.turnoForm.patchValue({paciente:t.nombre,dni:t.dni,obraSocial:t.obraSocial,especialista:""})})}onEspecialistaChange(t){return p(this,null,function*(){if(this.idEspecialista=t.uid,console.log("ID del especialista seleccionado:",this.idEspecialista),this.idEspecialista)try{this.especialidadesDelEspecialista=yield this.especialidadService.getEspecialidadesPorEspecialista(t),this.nombreEspecialista=`${t.nombre} ${t.apellido}`,console.log("Especialidades del especialista:",this.especialidadesDelEspecialista)}catch(e){console.error("Error al cargar las especialidades:",e),L.default.fire("Error","No se pudieron cargar las especialidades","error")}else this.especialidadesDelEspecialista=[]})}onEspecialidadChange(t){return p(this,null,function*(){if(this.especialiadaSeleccionada=t,this.turnoForm.patchValue({horario:""}),this.horarios=[],this.diasDisponibles=[],t)try{let e=yield this.turnoService.obtenerTurnosDisponibles(this.idEspecialista,t),i=new Date,r=e.filter(c=>new Date(c.fecha)>=i);this.diasDisponibles=[...new Set(r.map(c=>c.fecha))],this.diasDisponibles.sort((c,d)=>new Date(c).getTime()-new Date(d).getTime()),this.horariosPorDia=r}catch{L.default.fire("Error","No se pudieron cargar los horarios","error")}})}onDiaSeleccionado(t){return p(this,null,function*(){this.horarios=this.horariosPorDia.filter(e=>e.fecha===t).map(e=>({horaInicio:e.hora_inicio,horaFin:e.hora_fin,id:e.id}))})}onHorarioSeleccionado(t){this.selectedTurno=t,console.log("Turno seleccionado:",this.selectedTurno),this.turnoForm.patchValue({horario:`${t.horaInicio} - ${t.horaFin}`})}solicitarTurno(){return p(this,null,function*(){if(!this.selectedTurno){L.default.fire("Error","Debe seleccionar un turno.","error");return}try{let t=yield this.getUser();this.obtenerIdPaciente=t.role==="paciente"?t.uid:this.usuarioSeleccionado.uid;let e=Se(O({},this.turnoForm.value),{turnoId:this.selectedTurno.id,fecha:this.selectedTurno.fecha,horaInicio:this.selectedTurno.horaInicio,horaFin:this.selectedTurno.horaFin,paciente:t.nombre||this.turnoForm.value.pacienteNombre,dni:t.dni||this.turnoForm.value.dni,obraSocial:t.obraSocial||this.turnoForm.value.obraSocial});yield this.turnoService.solicitarTurno(e,this.obtenerIdPaciente),L.default.fire("Registro exitoso","El turno ha sido solicitado correctamente.","success"),this.router.navigate(["/bienvenida"])}catch(t){console.error("Error al solicitar el turno:",t),L.default.fire("Error","No se pudo solicitar el turno. Int\xE9ntalo nuevamente.","error")}})}static \u0275fac=function(e){return new(e||o)(E(W),E(D),E(F),E(T),E(De),E(j))};static \u0275cmp=k({type:o,selectors:[["app-solicitar-turno"]],decls:19,vars:6,consts:[[3,"ngSubmit","formGroup"],["for","especialista"],[1,"profesionales-container"],["class","profesional",3,"click",4,"ngFor","ngForOf"],["for","especialidad"],[1,"especialidades-container"],["class","especialidad-btn",3,"click",4,"ngFor","ngForOf"],["for","horario"],[1,"dias-container"],[3,"click",4,"ngFor","ngForOf"],[4,"ngIf"],["type","submit"],[1,"profesional",3,"click"],[1,"profesional-img",3,"src","alt"],[1,"profesional-nombre"],[1,"especialidad-btn",3,"click"],[1,"especialidad-img",3,"src","alt"],[1,"especialidad-nombre"],[3,"click"],["type","button"],["for","paciente"],["formControlName","paciente","type","text","readonly",""],["for","dni"],["formControlName","dni","type","text","readonly",""],["for","obraSocial"],["formControlName","obraSocial","type","text","readonly",""]],template:function(e,i){e&1&&(a(0,"form",0),h("ngSubmit",function(){return i.solicitarTurno()}),a(1,"label",1),s(2,"Especialista:"),n(),a(3,"div",2),C(4,je,4,4,"div",3),n(),a(5,"label",4),s(6,"Especialidad:"),n(),a(7,"div",5),C(8,He,4,3,"div",6),n(),a(9,"label",7),s(10,"D\xEDa:"),n(),a(11,"div",8),C(12,Be,4,4,"div",9),n(),a(13,"label",7),s(14,"Horario:"),n(),C(15,Ge,3,2,"div",9)(16,Le,10,0,"div",10),a(17,"button",11),s(18,"Solicitar turno"),n()()),e&2&&(u("formGroup",i.turnoForm),l(4),u("ngForOf",i.especialistas),l(4),u("ngForOf",i.especialidadesDelEspecialista),l(4),u("ngForOf",i.diasDisponibles),l(3),u("ngForOf",i.horarios),l(),u("ngIf",i.isAdmin))},dependencies:[R,$,Oe,Pe,Ie,Me,ke,Fe,we],styles:["form[_ngcontent-%COMP%]{max-width:800px;margin:20px auto;padding:30px;border:2px solid #007bff;border-radius:15px;background-color:#e0f7fa;box-shadow:0 4px 20px #0003}label[_ngcontent-%COMP%]{font-weight:700;margin-bottom:5px;display:block;color:#007bff}input[type=text][_ngcontent-%COMP%], select[_ngcontent-%COMP%]{width:100%;padding:12px;border:1px solid #007bff;border-radius:6px;font-size:16px;margin-bottom:15px;background-color:#f1f1f1;transition:border-color .3s,background-color .3s}input[type=text][_ngcontent-%COMP%]:focus, select[_ngcontent-%COMP%]:focus{border-color:#0056b3;background-color:#fff}button[type=submit][_ngcontent-%COMP%]{background-color:#007bff;color:#fff;padding:12px 15px;border:none;border-radius:6px;cursor:pointer;width:100%;font-size:1em;transition:background-color .3s,transform .2s}button[type=submit][_ngcontent-%COMP%]:hover{background-color:#0056b3;transform:translateY(-2px)}.profesionales-container[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:15px;margin-bottom:20px}.profesional[_ngcontent-%COMP%]{cursor:pointer;text-align:center;transition:transform .3s;border-radius:50%;padding:15px;background-color:#f1f1f1;box-shadow:0 4px 10px #0003}.profesional[_ngcontent-%COMP%]:hover{transform:scale(1.1)}.profesional-img[_ngcontent-%COMP%]{width:60px;height:60px;border-radius:50%;object-fit:cover}.profesional-nombre[_ngcontent-%COMP%]{margin-top:5px;font-size:14px;font-weight:700;color:#007bff}.especialidades-container[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:15px;margin-bottom:20px}.especialidad-btn[_ngcontent-%COMP%]{cursor:pointer;text-align:center;border-radius:12px;padding:20px;background-color:#f1f1f1;box-shadow:0 4px 10px #0003;transition:transform .3s}.especialidad-btn[_ngcontent-%COMP%]:hover{transform:scale(1.05)}.especialidad-img[_ngcontent-%COMP%]{width:60px;height:60px;object-fit:cover;border-radius:8px}.especialidad-nombre[_ngcontent-%COMP%]{margin-top:5px;font-size:14px;font-weight:700;color:#007bff}.dias-container[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:15px;margin-bottom:20px}.dia-btn[_ngcontent-%COMP%]{cursor:pointer;text-align:center;border-radius:6px;padding:15px;background-color:#f1f1f1;box-shadow:0 4px 10px #0003;width:120px;transition:transform .3s}.dia-btn[_ngcontent-%COMP%]:hover{transform:scale(1.05)}.dia-btn[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:14px;font-weight:700;color:#007bff}.horarios-container[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:10px}.horario-btn[_ngcontent-%COMP%]{padding:10px;border-radius:8px;background-color:#4caf50;color:#fff;cursor:pointer;font-size:14px;text-align:center;min-width:80px;display:flex;justify-content:center;align-items:center}.horario-btn[_ngcontent-%COMP%]:hover{background-color:#45a049}div[ngIf][_ngcontent-%COMP%]{margin-bottom:20px;background-color:#f9f9f9;padding:15px;border-radius:8px;box-shadow:0 4px 10px #0000001a}input[readonly][_ngcontent-%COMP%]{background-color:#e0e0e0;cursor:not-allowed}"]})};var re=class o{constructor(t,e){this.authService=t;this.router=e}canActivate(t,e){return this.authService.getUser().pipe(q(i=>i&&(i.role==="administrador"||i.role==="paciente")?!0:(this.router.navigate(["/bienvenida"]),console.log("Acceso denegado: no es administrador ni paciente"),!1)))}static \u0275fac=function(e){return new(e||o)(M(T),M(j))};static \u0275prov=z({token:o,factory:o.\u0275fac,providedIn:"root"})};var w=Y(J());var oe=class o{constructor(t){this.turnoService=t}usuarioSeleccionado=null;disponibilidadSemana={lunes:{horaInicio:"",horaFin:""},martes:{horaInicio:"",horaFin:""},mi\u00E9rcoles:{horaInicio:"",horaFin:""},jueves:{horaInicio:"",horaFin:""},viernes:{horaInicio:"",horaFin:""},s\u00E1bado:{horaInicio:"",horaFin:""},domingo:{horaInicio:"",horaFin:""}};horariosClinica={lunes:{apertura:"08:00",cierre:"19:00"},martes:{apertura:"08:00",cierre:"19:00"},mi\u00E9rcoles:{apertura:"08:00",cierre:"19:00"},jueves:{apertura:"08:00",cierre:"19:00"},viernes:{apertura:"08:00",cierre:"19:00"},s\u00E1bado:{apertura:"08:00",cierre:"14:00"},domingo:{apertura:null,cierre:null}};mostrarUsuario(t){this.usuarioSeleccionado=t}esHorarioValido(t){let e=parseInt(t.split(":")[1],10);return e===0||e===30}guardarDisponibilidad(){return p(this,null,function*(){if(!this.usuarioSeleccionado){w.default.fire("Error","Por favor, selecciona un especialista.","error");return}for(let t in this.disponibilidadSemana){let e=this.disponibilidadSemana[t],i=this.horariosClinica[t];if(e.horaInicio&&!this.esHorarioValido(e.horaInicio)||e.horaFin&&!this.esHorarioValido(e.horaFin)){w.default.fire("Error",`Los horarios de ${t} deben ser en intervalos de media hora (ej. 08:00 o 08:30).`,"error");return}if(i.apertura&&i.cierre){if(e.horaInicio<i.apertura||e.horaInicio>i.cierre||e.horaFin<i.apertura||e.horaFin>i.cierre){w.default.fire("Error",`El horario de ${t} debe estar entre ${i.apertura} y ${i.cierre}.`,"error");return}if(e.horaInicio>=e.horaFin){w.default.fire("Error",`En ${t}, la hora de inicio debe ser anterior a la hora de fin.`,"error");return}}else if(e.horaInicio||e.horaFin){w.default.fire("Error",`El d\xEDa ${t} est\xE1 cerrado, no debe haber horarios de disponibilidad.`,"error");return}}try{yield this.turnoService.guardarDisponibilidad(this.usuarioSeleccionado.uid,this.disponibilidadSemana),this.generarTurnosProximos15Dias(),w.default.fire("\xC9xito","Disponibilidad guardada correctamente.","success")}catch(t){console.error("Error al guardar la disponibilidad:",t),w.default.fire("Error","No se pudo guardar la disponibilidad.","error")}})}generarTurnosProximos15Dias(){return p(this,null,function*(){if(console.log("entramos a la creacion de turnos"),!this.usuarioSeleccionado){w.default.fire("Error","Por favor, selecciona un especialista.","error");return}let t=yield this.turnoService.obtenerDisponibilidad(this.usuarioSeleccionado.uid);if(!t){w.default.fire("Error","No se encontr\xF3 disponibilidad para el especialista seleccionado.","error");return}let e=[],i=new Date;for(let r=0;r<15;r++){let c=new Date(i);c.setDate(i.getDate()+r);let d=this.obtenerNombreDia(c);if(t[d]){let b=t[d];if(b.horaInicio&&b.horaFin){let A=b.horaInicio;for(;A<b.horaFin;){let P=this.sumarMinutos(A,30);P<=b.horaFin&&e.push({especialista_id:this.usuarioSeleccionado.uid,fecha:c.toISOString().split("T")[0],hora_inicio:A,hora_fin:P,estado:"disponible"}),A=P}}}}try{yield this.turnoService.guardarTurnos(e),w.default.fire("\xC9xito","Turnos generados para los pr\xF3ximos 15 d\xEDas.","success")}catch(r){console.error("Error al generar los turnos:",r),w.default.fire("Error","No se pudieron generar los turnos.","error")}})}obtenerNombreDia(t){return["domingo","lunes","martes","mi\xE9rcoles","jueves","viernes","s\xE1bado"][t.getDay()]}sumarMinutos(t,e){let[i,r]=t.split(":").map(Number),c=new Date;c.setHours(i,r+e);let d=String(c.getHours()).padStart(2,"0"),b=String(c.getMinutes()).padStart(2,"0");return`${d}:${b}`}static \u0275fac=function(e){return new(e||o)(E(F))};static \u0275cmp=k({type:o,selectors:[["app-gestion-horarios"]],decls:0,vars:0,template:function(e,i){},styles:['@charset "UTF-8";form[_ngcontent-%COMP%]{max-width:800px;margin:20px auto;padding:30px;border:2px solid #007bff;border-radius:15px;background-color:#e0f7fa;box-shadow:0 4px 20px #0003}label[_ngcontent-%COMP%]{font-weight:700;margin-bottom:5px;display:block;color:#007bff}.horarios[_ngcontent-%COMP%]{display:flex;gap:15px}input[type=time][_ngcontent-%COMP%]{width:48%;padding:12px;border:1px solid #007bff;border-radius:6px;font-size:16px;box-sizing:border-box;background-color:#f1f1f1;transition:border-color .3s,background-color .3s}input[type=time][_ngcontent-%COMP%]:focus{border-color:#0056b3;outline:none;background-color:#fff}button[type=submit][_ngcontent-%COMP%]{background-color:#007bff;color:#fff;padding:12px 15px;border:none;border-radius:6px;cursor:pointer;transition:background-color .3s,transform .2s;width:100%;font-size:1em}button[type=submit][_ngcontent-%COMP%]:hover{background-color:#0056b3;transform:translateY(-2px)}div[_ngcontent-%COMP%]{margin-bottom:20px}']})};var U=Y(J());function Ue(o,t){if(o&1){let e=x();a(0,"div")(1,"input",1),h("change",function(r){v(e);let c=m();return _(c.onEspecialidadChange(r))}),n(),s(2),n()}if(o&2){let e=t.$implicit;l(),u("value",e.nombre),l(),N(" ",e.nombre,`
`)}}function qe(o,t){if(o&1){let e=x();a(0,"div")(1,"input",2),h("change",function(r){let c=v(e).$implicit,d=m();return _(d.onEspecialistaChange(r,c))}),n(),s(2),n()}if(o&2){let e=t.$implicit;l(),u("value",e.uid),l(),y(" ",e.nombre," ",e.apellido,`
`)}}function Qe(o,t){if(o&1){let e=x();a(0,"button",5),h("click",function(){v(e);let r=m().$implicit,c=m();return _(c.cancelarTurno(r))}),s(1," Cancelar Turno "),n()}}function We(o,t){o&1&&(a(0,"button",6),s(1," no acciones "),n())}function Ye(o,t){if(o&1&&(a(0,"tr")(1,"td"),s(2),n(),a(3,"td"),s(4),n(),a(5,"td"),s(6),n(),a(7,"td"),s(8),n(),a(9,"td"),s(10),n(),a(11,"td"),s(12),n(),a(13,"td"),s(14),n(),a(15,"td"),s(16),n(),a(17,"td"),C(18,Qe,2,0,"button",3)(19,We,2,0,"button",4),n()()),o&2){let e=t.$implicit,i=m();l(2),f(e.dni),l(2),f(e.paciente),l(2),f(e.obraSocial),l(2),f(i.nombreEspecialista),l(2),f(e.especialidad),l(2),f(e.fecha),l(2),y("",e.hora_inicio," - ",e.hora_fin,""),l(2),f(e.estado),l(2),u("ngIf",e.estado==="solicitado"),l(),u("ngIf",e.estado!=="solicitado")}}var se=class o{constructor(t,e,i){this.turnoService=t;this.especialidadService=e;this.especialistaService=i}especialidades=[];especialistas=[];horarios=[];nombreEspecialista;especialidadSeleccionada="";ngOnInit(){this.cargarEspecialidades()}cargarEspecialidades(){return p(this,null,function*(){this.especialidades=yield this.especialidadService.getEspecialidades()})}onEspecialidadChange(t){return p(this,null,function*(){let e=t.target;if(this.especialidadSeleccionada=e.value,this.especialidadSeleccionada)try{this.especialistas=yield this.especialistaService.getEspecialistasPorEspecialidad(this.especialidadSeleccionada),this.horarios=[]}catch{U.default.fire("Error","No se pudieron cargar los especialistas","error")}else this.especialistas=[],this.horarios=[]})}onEspecialistaChange(t,e){return p(this,null,function*(){let r=t.target.value;if(r){this.nombreEspecialista=`${e.nombre} ${e.apellido}`;try{let c=yield this.turnoService.obtenerTurnosDisponiblesEspecialista(r);this.horarios=c.filter(d=>d.especialidad===this.especialidadSeleccionada),this.horarios.sort((d,b)=>new Date(d.fecha).getTime()-new Date(b.fecha).getTime())}catch{U.default.fire("Error","No se pudieron cargar los turnos","error")}}else this.horarios=[]})}cancelarTurno(t){return p(this,null,function*(){if(["Aceptado","Realizado","Rechazado"].includes(t.estado)){U.default.fire("Aviso","No se puede cancelar un turno aceptado, realizado o rechazado","info");return}let{isConfirmed:e,value:i}=yield U.default.fire({title:"\xBFEst\xE1s seguro de cancelar el turno?",text:"Por favor, ingresa el motivo de la cancelaci\xF3n",input:"textarea",inputPlaceholder:"Escribe aqu\xED el motivo...",inputAttributes:{"aria-label":"Motivo de cancelaci\xF3n"},confirmButtonText:"Cancelar turno",showCancelButton:!0,cancelButtonText:"Volver",inputValidator:r=>r?null:"El motivo es requerido para cancelar el turno"});if(e&&i)try{yield this.turnoService.cancelarTurno(t.id,i),U.default.fire("Cancelado","El turno ha sido cancelado con \xE9xito","success"),yield this.onEspecialistaChange({target:{value:t.especialistaId}},{nombre:t.nombreEspecialista,apellido:t.apellidoEspecialista})}catch{U.default.fire("Error","No se pudo cancelar el turno","error")}})}static \u0275fac=function(e){return new(e||o)(E(F),E(W),E(D))};static \u0275cmp=k({type:o,selectors:[["app-gestionar-turnos"]],decls:31,vars:3,consts:[[4,"ngFor","ngForOf"],["type","radio","name","especialidad",3,"change","value"],["type","radio","name","especialista",3,"change","value"],["class","cancelar",3,"click",4,"ngIf"],["class","no-accion","disabled","",4,"ngIf"],[1,"cancelar",3,"click"],["disabled","",1,"no-accion"]],template:function(e,i){e&1&&(a(0,"h2"),s(1,"Listado de Turnos"),n(),a(2,"label"),s(3,"Especialidad:"),n(),C(4,Ue,3,2,"div",0),a(5,"label"),s(6,"Especialista:"),n(),C(7,qe,3,3,"div",0),a(8,"table")(9,"thead")(10,"tr")(11,"th"),s(12,"DNI"),n(),a(13,"th"),s(14,"Paciente"),n(),a(15,"th"),s(16,"Obra Social"),n(),a(17,"th"),s(18,"Especialista"),n(),a(19,"th"),s(20,"Especialidad"),n(),a(21,"th"),s(22,"Fecha"),n(),a(23,"th"),s(24,"Horario"),n(),a(25,"th"),s(26,"Estado"),n(),a(27,"th"),s(28,"Acciones"),n()()(),a(29,"tbody"),C(30,Ye,20,11,"tr",0),n()()),e&2&&(l(4),u("ngForOf",i.especialidades),l(3),u("ngForOf",i.especialistas),l(23),u("ngForOf",i.horarios))},dependencies:[R,$],styles:['@charset "UTF-8";h2[_ngcontent-%COMP%]{color:#154360;text-align:center;margin-bottom:1rem;font-weight:700;font-size:1.5rem}label[_ngcontent-%COMP%]{font-weight:700;color:#154360;margin-right:.5rem}select[_ngcontent-%COMP%]{padding:.5rem;border-radius:4px;border:1px solid #D5D8DC;margin-bottom:1rem;margin-right:1rem;outline:none;transition:border-color .3s ease}select[_ngcontent-%COMP%]:focus{border-color:#154360}table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;background-color:#fff;box-shadow:0 4px 8px #0000001a;margin:0 auto;border-radius:8px;overflow:hidden}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{padding:1rem;text-align:left}thead[_ngcontent-%COMP%]{background-color:#154360;color:#fff}thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-weight:700;text-transform:uppercase;letter-spacing:.05em}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{transition:background-color .3s ease,transform .2s ease}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#f2f3f4}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#d5e8e8;transform:scale(1.01)}tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-bottom:1px solid #F2F3F4}button[_ngcontent-%COMP%]{padding:.5rem 1rem;font-size:.9rem;border:none;border-radius:4px;color:#fff;cursor:pointer;transition:background-color .3s ease,transform .2s ease;width:100%}button.no-accion[_ngcontent-%COMP%]{background-color:#b0e915}button.cancelar[_ngcontent-%COMP%]{background-color:#c0392b}button.cancelar[_ngcontent-%COMP%]:hover{background-color:#a93226;transform:scale(1.05)}td.estado[_ngcontent-%COMP%]{font-weight:700;color:#1e8449}td.estado.inhabilitado[_ngcontent-%COMP%]{color:#c0392b}']})};var g=Y(J());function Je(o,t){if(o&1){let e=x();a(0,"div")(1,"input",1),h("change",function(r){v(e);let c=m();return _(c.onEspecialidadChange(r))}),n(),s(2),n()}if(o&2){let e=t.$implicit;l(),u("value",e),l(),N(" ",e,`
`)}}function Ke(o,t){if(o&1){let e=x();a(0,"div")(1,"input",2),h("change",function(r){let c=v(e).$implicit,d=m();return _(d.onPacienteChange(r,c))}),n(),s(2),n()}if(o&2){let e=t.$implicit;l(),u("value",e.uid),l(),y(" ",e.nombre," ",e.apellido,`
`)}}function Xe(o,t){if(o&1){let e=x();a(0,"button",7),h("click",function(){v(e);let r=m().$implicit,c=m();return _(c.cancelarTurno(r))}),s(1," Cancelar Turno "),n()}}function Ze(o,t){if(o&1){let e=x();a(0,"button",8),h("click",function(){v(e);let r=m().$implicit,c=m();return _(c.aceptarTurno(r))}),s(1," aceptar turno "),n()}}function et(o,t){if(o&1){let e=x();a(0,"button",9),h("click",function(){v(e);let r=m().$implicit,c=m();return _(c.finalizarTurno(r))}),s(1," finalizar turno "),n()}}function tt(o,t){if(o&1){let e=x();a(0,"button",10),h("click",function(){v(e);let r=m().$implicit,c=m();return _(c.verResenaTurno(r))}),s(1," ver rese\xF1a "),n()}}function it(o,t){if(o&1&&(a(0,"tr")(1,"td"),s(2),n(),a(3,"td"),s(4),n(),a(5,"td"),s(6),n(),a(7,"td"),s(8),n(),a(9,"td"),s(10),n(),a(11,"td"),s(12),n(),a(13,"td"),s(14),n(),a(15,"td"),s(16),n(),a(17,"td"),C(18,Xe,2,0,"button",3)(19,Ze,2,0,"button",4)(20,et,2,0,"button",5)(21,tt,2,0,"button",6),n()()),o&2){let e=t.$implicit,i=m();l(2),f(e.dni),l(2),f(i.nombrePaciente),l(2),f(e.obraSocial),l(2),f(e.especialista),l(2),f(i.especialidadSeleccionada),l(2),f(e.fecha),l(2),y("",e.hora_inicio," - ",e.hora_fin,""),l(2),f(e.estado),l(2),u("ngIf",e.estado==="solicitado"),l(),u("ngIf",e.estado==="solicitado"),l(),u("ngIf",e.estado==="aceptado"),l(),u("ngIf",e.estado==="realizado")}}var ce=class o{constructor(t,e,i){this.turnoService=t;this.especialistaService=e;this.authenticationService=i}especialidades=[];pacientes=[];horarios=[];nombrePaciente="";especialidadSeleccionada="";especialistaIniciado;pacienteSeleccionadoId="";ngOnInit(){this.authenticationService.getUser().subscribe(t=>{t?(this.especialistaIniciado=t,this.cargarPacientes(t.uid),this.cargarEspecialidades()):g.default.fire("Error","No se encontr\xF3 el usuario","error")})}cargarPacientes(t){return p(this,null,function*(){try{this.pacientes=yield this.especialistaService.getPacientesUnicosPorEspecialista(t),console.log("Pacientes cargados:",this.pacientes)}catch(e){console.error("Error cargando pacientes:",e),g.default.fire("Error","No se pudieron cargar los pacientes","error")}})}cargarEspecialidades(){return p(this,null,function*(){this.especialistaIniciado&&this.especialistaIniciado.especialidades?(this.especialidades=this.especialistaIniciado.especialidades,console.log("Especialidades cargadas:",this.especialidades)):(this.especialidades=[],g.default.fire("Error","No se encontraron especialidades para este especialista","error"))})}onEspecialidadChange(t){return p(this,null,function*(){let e=t.target;if(this.especialidadSeleccionada=e.value,this.especialidadSeleccionada)try{this.pacientes=yield this.especialistaService.getPacientesUnicosPorEspecialidad(this.especialistaIniciado.uid,this.especialidadSeleccionada),this.horarios=[]}catch{g.default.fire("Error","No se pudieron cargar los pacientes","error")}else this.pacientes=[],this.horarios=[]})}onPacienteChange(t,e){return p(this,null,function*(){let i=t.target;if(this.pacienteSeleccionadoId=i.value,this.pacienteSeleccionadoId){this.nombrePaciente=`${e.nombre} ${e.apellido}`;try{let r=yield this.turnoService.obtenerTurnosDisponiblesPaciente(this.pacienteSeleccionadoId);this.horarios=r.filter(c=>c.especialidad===this.especialidadSeleccionada),this.horarios.sort((c,d)=>new Date(c.fecha).getTime()-new Date(d.fecha).getTime())}catch{g.default.fire("Error","No se pudieron cargar los turnos","error")}}else this.horarios=[]})}cancelarTurno(t){return p(this,null,function*(){if(["Aceptado","Realizado","Rechazado"].includes(t.estado)){g.default.fire("Aviso","No se puede cancelar un turno aceptado, realizado o rechazado","info");return}let{isConfirmed:e,value:i}=yield g.default.fire({title:"\xBFEst\xE1s seguro de cancelar el turno?",text:"Por favor, ingresa el motivo de la cancelaci\xF3n",input:"textarea",inputPlaceholder:"Escribe aqu\xED el motivo...",inputAttributes:{"aria-label":"Motivo de cancelaci\xF3n"},confirmButtonText:"Cancelar turno",showCancelButton:!0,cancelButtonText:"Volver",inputValidator:r=>r?null:"El motivo es requerido para cancelar el turno"});if(e&&i)try{yield this.turnoService.cancelarTurno(t.id,i),g.default.fire("Cancelado","El turno ha sido cancelado con \xE9xito","success"),this.onPacienteChange({target:{value:this.pacienteSeleccionadoId}},{nombre:this.nombrePaciente})}catch{g.default.fire("Error","No se pudo cancelar el turno","error")}})}aceptarTurno(t){return p(this,null,function*(){if(["Aceptado","Realizado","Rechazado"].includes(t.estado)){g.default.fire("Aviso","No se puede cancelar un turno aceptado, realizado o rechazado","info");return}let{isConfirmed:e}=yield g.default.fire({title:"\xBFEst\xE1s seguro de aceptar el turno?",confirmButtonText:"aceptar turno",showCancelButton:!0,cancelButtonText:"Volver"});if(e)try{yield this.turnoService.aceptarTurno(t.id),g.default.fire("aceptado","El turno ha sido aceptado con \xE9xito","success")}catch{g.default.fire("Error","No se pudo aceptar el turno","error")}})}finalizarTurno(t){return p(this,null,function*(){if(t.estado!=="aceptado"){g.default.fire("Aviso","Solo puedes finalizar un turno aceptado","info");return}let{isConfirmed:e,value:i}=yield g.default.fire({title:"Finalizar Turno y Registrar Historia Cl\xEDnica",html:`
        <label for="diagnostico">Diagn\xF3stico:</label>
        <textarea id="diagnostico" rows="2" style="width: 100%;" placeholder="Escribe aqu\xED el diagn\xF3stico..."></textarea>
        
        <label for="rese\xF1a">Rese\xF1a:</label>
        <textarea id="rese\xF1a" rows="2" style="width: 100%;" placeholder="Escribe aqu\xED la rese\xF1a..."></textarea>
        
        <label for="altura">Altura (cm):</label>
        <input type="number" id="altura" style="width: 100%;" placeholder="Altura en cm" />
        
        <label for="peso">Peso (kg):</label>
        <input type="number" id="peso" style="width: 100%;" placeholder="Peso en kg" />
        
        <label for="temperatura">Temperatura (\xB0C):</label>
        <input type="number" id="temperatura" style="width: 100%;" placeholder="Temperatura en \xB0C" />
        
        <label for="presion">Presi\xF3n:</label>
        <input type="text" id="presion" style="width: 100%;" placeholder="Ej. 120/80" />
        
        <label>Datos Din\xE1micos:</label>
        <div id="datosDinamicos">
          <input type="text" placeholder="Clave" style="width: 48%; display: inline-block;" id="clave1" />
          <input type="text" placeholder="Valor" style="width: 48%; display: inline-block;" id="valor1" />
          <br />
          <input type="text" placeholder="Clave" style="width: 48%; display: inline-block;" id="clave2" />
          <input type="text" placeholder="Valor" style="width: 48%; display: inline-block;" id="valor2" />
          <br />
          <input type="text" placeholder="Clave" style="width: 48%; display: inline-block;" id="clave3" />
          <input type="text" placeholder="Valor" style="width: 48%; display: inline-block;" id="valor3" />
        </div>
      `,focusConfirm:!1,preConfirm:()=>({diagnostico:document.getElementById("diagnostico").value,rese\u00F1a:document.getElementById("rese\xF1a").value,historiaClinica:{altura:+document.getElementById("altura").value,peso:+document.getElementById("peso").value,temperatura:+document.getElementById("temperatura").value,presion:document.getElementById("presion").value,datosDinamicos:[{clave:document.getElementById("clave1").value,valor:document.getElementById("valor1").value},{clave:document.getElementById("clave2").value,valor:document.getElementById("valor2").value},{clave:document.getElementById("clave3").value,valor:document.getElementById("valor3").value}].filter(r=>r.clave&&r.valor)}}),confirmButtonText:"Finalizar Turno",showCancelButton:!0,cancelButtonText:"Cancelar"});if(e){let{diagnostico:r,rese\u00F1a:c,historiaClinica:d}=i;if(!r||!c||!d.altura||!d.peso||!d.temperatura||!d.presion){g.default.fire("Error","Todos los campos son obligatorios","error");return}if(d.temperatura<30||d.temperatura>45){g.default.fire("Error","La temperatura debe estar entre 30\xB0C y 45\xB0C","error");return}if(d.altura<30||d.altura>250){g.default.fire("Error","La altura debe estar entre 30 cm y 250 cm","error");return}if(d.peso<3||d.peso>500){g.default.fire("Error","El peso debe estar entre 3 kg y 500 kg","error");return}try{yield this.turnoService.finalizarTurno(t.id,{diagnostico:r,rese\u00F1a:c}),yield this.turnoService.finalizarTurnoHistoriaClinica(t,{historiaClinica:d}),g.default.fire("Finalizado","El turno ha sido finalizado con \xE9xito","success"),this.onPacienteChange({target:{value:this.pacienteSeleccionadoId}},{nombre:this.nombrePaciente})}catch{g.default.fire("Error","No se pudo finalizar el turno","error")}}})}verResenaTurno(t){return p(this,null,function*(){if(t.estado!=="realizado"){g.default.fire("Aviso","Solo puedes ver la rese\xF1a de un turno realizado","info");return}try{yield this.turnoService.obtenerRese\u00F1aTurno(t.id)}catch(e){console.error("Error al obtener rese\xF1a:",e),g.default.fire("Error","No se pudo obtener la rese\xF1a","error")}})}static \u0275fac=function(e){return new(e||o)(E(F),E(D),E(T))};static \u0275cmp=k({type:o,selectors:[["app-turnos-especialista"]],decls:31,vars:3,consts:[[4,"ngFor","ngForOf"],["type","radio","name","especialidad",3,"change","value"],["type","radio","name","paciente",3,"change","value"],["class","cancelar",3,"click",4,"ngIf"],["class","aceptar",3,"click",4,"ngIf"],["class","finalizar",3,"click",4,"ngIf"],["class","realizado",3,"click",4,"ngIf"],[1,"cancelar",3,"click"],[1,"aceptar",3,"click"],[1,"finalizar",3,"click"],[1,"realizado",3,"click"]],template:function(e,i){e&1&&(a(0,"h2"),s(1,"Listado de Turnos"),n(),a(2,"label"),s(3,"Especialidad:"),n(),C(4,Je,3,2,"div",0),a(5,"label"),s(6,"Pacientes:"),n(),C(7,Ke,3,3,"div",0),a(8,"table")(9,"thead")(10,"tr")(11,"th"),s(12,"DNI"),n(),a(13,"th"),s(14,"Paciente"),n(),a(15,"th"),s(16,"Obra Social"),n(),a(17,"th"),s(18,"Especialista"),n(),a(19,"th"),s(20,"Especialidad"),n(),a(21,"th"),s(22,"Fecha"),n(),a(23,"th"),s(24,"Horario"),n(),a(25,"th"),s(26,"Estado"),n(),a(27,"th"),s(28,"Acciones"),n()()(),a(29,"tbody"),C(30,it,22,13,"tr",0),n()()),e&2&&(l(4),u("ngForOf",i.especialidades),l(3),u("ngForOf",i.pacientes),l(23),u("ngForOf",i.horarios))},dependencies:[R,$],styles:['@charset "UTF-8";h2[_ngcontent-%COMP%]{color:#154360;text-align:center;margin-bottom:1rem;font-weight:700;font-size:1.5rem}label[_ngcontent-%COMP%]{font-weight:700;color:#154360;margin-right:.5rem}select[_ngcontent-%COMP%]{padding:.5rem;border-radius:4px;border:1px solid #D5D8DC;margin-bottom:1rem;margin-right:1rem;outline:none;transition:border-color .3s ease}select[_ngcontent-%COMP%]:focus{border-color:#154360}table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;background-color:#fff;box-shadow:0 4px 8px #0000001a;margin:0 auto;border-radius:8px;overflow:hidden}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{padding:1rem;text-align:left}thead[_ngcontent-%COMP%]{background-color:#154360;color:#fff}thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-weight:700;text-transform:uppercase;letter-spacing:.05em}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{transition:background-color .3s ease,transform .2s ease}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#f2f3f4}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#d5e8e8;transform:scale(1.01)}tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-bottom:1px solid #F2F3F4}button[_ngcontent-%COMP%]{padding:.5rem 1rem;font-size:.9rem;border:none;border-radius:4px;color:#fff;cursor:pointer;transition:background-color .3s ease,transform .2s ease;width:100%}button.aceptar[_ngcontent-%COMP%], button.finalizar[_ngcontent-%COMP%], button.realizado[_ngcontent-%COMP%]{background-color:#b0e915}button.aceptar[_ngcontent-%COMP%]:hover, button.finalizar[_ngcontent-%COMP%]:hover, button.realizado[_ngcontent-%COMP%]:hover{background-color:#82b825;transform:scale(1.05)}button.cancelar[_ngcontent-%COMP%]{background-color:#c0392b}button.cancelar[_ngcontent-%COMP%]:hover{background-color:#a93226;transform:scale(1.05)}td.estado[_ngcontent-%COMP%]{font-weight:700;color:#1e8449}td.estado.inhabilitado[_ngcontent-%COMP%]{color:#c0392b}']})};var le=class o{constructor(t,e){this.authService=t;this.router=e}canActivate(t,e){return this.authService.getUser().pipe(q(i=>i&&i.role==="especialista"?!0:(this.router.navigate(["/bienvenida"]),console.log("no es especialista verifica las cosas bien"),!1)))}static \u0275fac=function(e){return new(e||o)(M(T),M(j))};static \u0275prov=z({token:o,factory:o.\u0275fac,providedIn:"root"})};var S=Y(J());function nt(o,t){if(o&1){let e=x();a(0,"div")(1,"input",1),h("change",function(r){v(e);let c=m();return _(c.onEspecialidadChange(r))}),n(),s(2),n()}if(o&2){let e=t.$implicit;l(),u("value",e.nombre),l(),N(" ",e.nombre,`
`)}}function at(o,t){if(o&1){let e=x();a(0,"div")(1,"input",2),h("change",function(r){let c=v(e).$implicit,d=m();return _(d.onEspecialistaChange(r,c))}),n(),s(2),n()}if(o&2){let e=t.$implicit;l(),u("value",e.uid),l(),y(" ",e.nombre," ",e.apellido,`
`)}}function rt(o,t){if(o&1){let e=x();a(0,"button",7),h("click",function(){v(e);let r=m().$implicit,c=m();return _(c.cancelarTurno(r))}),s(1," Cancelar Turno "),n()}}function ot(o,t){if(o&1){let e=x();a(0,"button",8),h("click",function(){v(e);let r=m().$implicit,c=m();return _(c.verResenaTurno(r))}),s(1," ver rese\xF1a "),n()}}function st(o,t){if(o&1){let e=x();a(0,"button",9),h("click",function(){v(e);let r=m().$implicit,c=m();return _(c.mostrarEncuesta(r))}),s(1),n()}if(o&2){let e=m().$implicit;u("disabled",e.encuesta),l(),N(" ",e.encuesta?"Encuesta Realizada":"Realizar Encuesta"," ")}}function ct(o,t){if(o&1){let e=x();a(0,"button",10),h("click",function(){v(e);let r=m().$implicit,c=m();return _(c.calificarAtencion(r))}),s(1),n()}if(o&2){let e=m().$implicit;u("disabled",e.calificacionTurno),l(),N(" ",e.calificacionTurno?"Calificaci\xF3n Realizada":"Calificar Atenci\xF3n"," ")}}function lt(o,t){if(o&1&&(a(0,"tr")(1,"td"),s(2),n(),a(3,"td"),s(4),n(),a(5,"td"),s(6),n(),a(7,"td"),s(8),n(),a(9,"td"),s(10),n(),a(11,"td"),s(12),n(),a(13,"td"),s(14),n(),a(15,"td"),s(16),n(),a(17,"td"),C(18,rt,2,0,"button",3)(19,ot,2,0,"button",4)(20,st,2,2,"button",5)(21,ct,2,2,"button",6),n()()),o&2){let e=t.$implicit,i=m();l(2),f(e.dni),l(2),f(e.paciente),l(2),f(e.obraSocial),l(2),f(i.nombreEspecialista),l(2),f(e.especialidad),l(2),f(e.fecha),l(2),y("",e.hora_inicio," - ",e.hora_fin,""),l(2),f(e.estado),l(2),u("ngIf",e.estado==="solicitado"),l(),u("ngIf",e.estado==="realizado"),l(),u("ngIf",e.estado==="realizado"),l(),u("ngIf",e.estado==="realizado")}}var de=class o{constructor(t,e,i,r){this.turnoService=t;this.especialidadService=e;this.especialistaService=i;this.authenticationService=r}especialidades=[];especialistas=[];horarios=[];nombreEspecialista;especialidadSeleccionada="";encuesta={};pacienteActual="";ngOnInit(){this.cargarEspecialidades(),this.authenticationService.getUser().subscribe(t=>{t?this.pacienteActual=t:S.default.fire("Error","No se encontr\xF3 el usuario","error")})}cargarEspecialidades(){return p(this,null,function*(){this.especialidades=yield this.especialidadService.getEspecialidades()})}onEspecialidadChange(t){return p(this,null,function*(){let e=t.target;if(this.especialidadSeleccionada=e.value,this.especialidadSeleccionada)try{this.especialistas=yield this.especialistaService.getEspecialistasPorEspecialidad(this.especialidadSeleccionada),this.horarios=[]}catch{S.default.fire("Error","No se pudieron cargar los especialistas","error")}else this.especialistas=[],this.horarios=[]})}onEspecialistaChange(t,e){return p(this,null,function*(){let r=t.target.value;if(r){this.nombreEspecialista=`${e.nombre} ${e.apellido}`;try{let c=yield this.turnoService.obtenerTurnosDisponiblesPacienteEspecialista(this.pacienteActual.uid,r);this.horarios=c.filter(d=>d.especialidad===this.especialidadSeleccionada),this.horarios.sort((d,b)=>new Date(d.fecha).getTime()-new Date(b.fecha).getTime())}catch{S.default.fire("Error","No se pudieron cargar los turnos","error")}}else this.horarios=[]})}cancelarTurno(t){return p(this,null,function*(){if(["Aceptado","Realizado","Rechazado"].includes(t.estado)){S.default.fire("Aviso","No se puede cancelar un turno aceptado, realizado o rechazado","info");return}let{isConfirmed:e,value:i}=yield S.default.fire({title:"\xBFEst\xE1s seguro de cancelar el turno?",text:"Por favor, ingresa el motivo de la cancelaci\xF3n",input:"textarea",inputPlaceholder:"Escribe aqu\xED el motivo...",inputAttributes:{"aria-label":"Motivo de cancelaci\xF3n"},confirmButtonText:"Cancelar turno",showCancelButton:!0,cancelButtonText:"Volver",inputValidator:r=>r?null:"El motivo es requerido para cancelar el turno"});if(e&&i)try{yield this.turnoService.cancelarTurno(t.id,i),S.default.fire("Cancelado","El turno ha sido cancelado con \xE9xito","success"),yield this.onEspecialistaChange({target:{value:t.especialistaId}},{nombre:t.nombreEspecialista,apellido:t.apellidoEspecialista})}catch{S.default.fire("Error","No se pudo cancelar el turno","error")}})}verResenaTurno(t){return p(this,null,function*(){if(t.estado!=="realizado"){S.default.fire("Aviso","Solo puedes ver la rese\xF1a de un turno realizado","info");return}try{yield this.turnoService.obtenerRese\u00F1aTurno(t.id)}catch(e){console.error("Error al obtener rese\xF1a:",e),S.default.fire("Error","No se pudo obtener la rese\xF1a","error")}})}mostrarEncuesta(t){return p(this,null,function*(){S.default.fire({title:"Completar Encuesta",html:`
        <label for="pregunta1">\xBFC\xF3mo calificar\xEDas la atenci\xF3n del especialista?</label>
        <input type="text" id="pregunta1" class="swal2-input" placeholder="Tu respuesta aqu\xED">
        
        <label for="pregunta2">\xBFEst\xE1s satisfecho con la duraci\xF3n de tu consulta?</label>
        <input type="text" id="pregunta2" class="swal2-input" placeholder="Tu respuesta aqu\xED">
      `,focusConfirm:!1,preConfirm:()=>{let e=document.getElementById("pregunta1").value,i=document.getElementById("pregunta2").value;return(!e||!i)&&S.default.showValidationMessage("Por favor completa todas las preguntas"),{pregunta1:e,pregunta2:i}}}).then(e=>p(this,null,function*(){e.isConfirmed&&(this.encuesta={respuesta1:e.value.pregunta1,respuesta2:e.value.pregunta2},yield this.turnoService.guardarEncuesta(t.id,this.encuesta),S.default.fire("Gracias","Tus respuestas han sido guardadas","success"),yield this.onEspecialistaChange({target:{value:t.especialistaId}},{nombre:t.nombreEspecialista,apellido:t.apellidoEspecialista}))}))})}calificarAtencion(t){return p(this,null,function*(){if(t.estado!=="realizado"){S.default.fire("Aviso","Solo puedes calificar la atenci\xF3n de un turno realizado","info");return}let{value:e}=yield S.default.fire({title:"Calificar Atenci\xF3n",input:"textarea",inputPlaceholder:"Escribe aqu\xED tu comentario sobre la atenci\xF3n...",showCancelButton:!0,confirmButtonText:"Enviar Comentario",cancelButtonText:"Cancelar",inputValidator:i=>i?null:"El comentario es obligatorio"});e&&(yield this.turnoService.guardarCalificacion(t.id,e),S.default.fire("Gracias","Tu calificaci\xF3n ha sido guardada","success"),yield this.onEspecialistaChange({target:{value:t.especialistaId}},{nombre:t.nombreEspecialista,apellido:t.apellidoEspecialista}))})}static \u0275fac=function(e){return new(e||o)(E(F),E(W),E(D),E(T))};static \u0275cmp=k({type:o,selectors:[["app-turnos-pacientes"]],decls:31,vars:3,consts:[[4,"ngFor","ngForOf"],["type","radio","name","especialidad",3,"change","value"],["type","radio","name","especialista",3,"change","value"],["class","cancelar",3,"click",4,"ngIf"],["class","realizado",3,"click",4,"ngIf"],["class","encuesta",3,"disabled","click",4,"ngIf"],["class","calificacion",3,"disabled","click",4,"ngIf"],[1,"cancelar",3,"click"],[1,"realizado",3,"click"],[1,"encuesta",3,"click","disabled"],[1,"calificacion",3,"click","disabled"]],template:function(e,i){e&1&&(a(0,"h2"),s(1,"Listado de Turnos"),n(),a(2,"label"),s(3,"Especialidad:"),n(),C(4,nt,3,2,"div",0),a(5,"label"),s(6,"Especialista:"),n(),C(7,at,3,3,"div",0),a(8,"table")(9,"thead")(10,"tr")(11,"th"),s(12,"DNI"),n(),a(13,"th"),s(14,"Paciente"),n(),a(15,"th"),s(16,"Obra Social"),n(),a(17,"th"),s(18,"Especialista"),n(),a(19,"th"),s(20,"Especialidad"),n(),a(21,"th"),s(22,"Fecha"),n(),a(23,"th"),s(24,"Horario"),n(),a(25,"th"),s(26,"Estado"),n(),a(27,"th"),s(28,"Acciones"),n()()(),a(29,"tbody"),C(30,lt,22,13,"tr",0),n()()),e&2&&(l(4),u("ngForOf",i.especialidades),l(3),u("ngForOf",i.especialistas),l(23),u("ngForOf",i.horarios))},dependencies:[R,$],styles:['@charset "UTF-8";h2[_ngcontent-%COMP%]{color:#154360;text-align:center;margin-bottom:1rem;font-weight:700;font-size:1.5rem}label[_ngcontent-%COMP%]{font-weight:700;color:#154360;margin-right:.5rem}select[_ngcontent-%COMP%]{padding:.5rem;border-radius:4px;border:1px solid #D5D8DC;margin-bottom:1rem;margin-right:1rem;outline:none;transition:border-color .3s ease}select[_ngcontent-%COMP%]:focus{border-color:#154360}table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;background-color:#fff;box-shadow:0 4px 8px #0000001a;margin:0 auto;border-radius:8px;overflow:hidden}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{padding:1rem;text-align:left}thead[_ngcontent-%COMP%]{background-color:#154360;color:#fff}thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-weight:700;text-transform:uppercase;letter-spacing:.05em}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{transition:background-color .3s ease,transform .2s ease}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#f2f3f4}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#d5e8e8;transform:scale(1.01)}tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-bottom:1px solid #F2F3F4}button[_ngcontent-%COMP%]{padding:.5rem 1rem;font-size:.9rem;border:none;border-radius:4px;color:#fff;cursor:pointer;transition:background-color .3s ease,transform .2s ease;width:100%}button.realizado[_ngcontent-%COMP%], button.encuesta[_ngcontent-%COMP%], button.calificacion[_ngcontent-%COMP%]{margin-bottom:3px;background-color:#b0e915}button.realizado[_ngcontent-%COMP%]:hover, button.encuesta[_ngcontent-%COMP%]:hover, button.calificacion[_ngcontent-%COMP%]:hover{background-color:#82b825;transform:scale(1.05)}button.cancelar[_ngcontent-%COMP%]{background-color:#c0392b}button.cancelar[_ngcontent-%COMP%]:hover{background-color:#a93226;transform:scale(1.05)}td.estado[_ngcontent-%COMP%]{font-weight:700;color:#1e8449}td.estado.inhabilitado[_ngcontent-%COMP%]{color:#c0392b}']})};var pe=class o{constructor(t,e){this.authService=t;this.router=e}canActivate(t,e){return this.authService.getUser().pipe(q(i=>i&&i.role==="paciente"?!0:(this.router.navigate(["/bienvenida"]),console.log("no es paciente verifica las cosas bien"),!1)))}static \u0275fac=function(e){return new(e||o)(M(T),M(j))};static \u0275prov=z({token:o,factory:o.\u0275fac,providedIn:"root"})};var dt=[{path:"solicitar-turno",component:ie,canActivate:[re]},{path:"gestionar-horarios",component:oe,canActivate:[_e]},{path:"gestionar-turnos",component:se,canActivate:[_e]},{path:"turnos-especialista",component:ce,canActivate:[le]},{path:"turnos-pacientes",component:de,canActivate:[pe]}],ue=class o{static \u0275fac=function(e){return new(e||o)};static \u0275mod=ee({type:o});static \u0275inj=Z({imports:[ge.forChild(dt),ge]})};var $e=class o{static \u0275fac=function(e){return new(e||o)};static \u0275mod=ee({type:o});static \u0275inj=Z({imports:[he,ue,Ae,Ne,he,Ve]})};export{$e as SeccionTurnosModule};
