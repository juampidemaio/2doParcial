import{a as Me}from"./chunk-X5PKLF4K.js";import{a as Je,b as Ke,c as Xe}from"./chunk-RYH3RRIE.js";import{a as re,b as U,c as se,d as ce,e as je,f as He,g as le,h as Ge,i as Be,j as Le,k as Ue,l as qe,m as We,n as Ye,o as Qe,p as J}from"./chunk-J3CNKGZK.js";import{$ as Ne,Aa as Pe,Ba as P,D as S,Da as Re,Ea as G,F as u,Ga as $e,H as r,Ha as M,I as a,Ia as Q,J as oe,K as v,L as h,M as m,N as Ce,O as c,P as g,Q as B,R as H,S as ke,T as xe,U as ye,V as Te,Y as Ae,a as w,aa as Ve,b as De,c as W,d as p,g as Y,ja as R,k as V,ka as $,l as ie,la as ze,ma as we,n as I,o as z,p as ne,pa as L,ra as Ie,s as b,t as _,wa as ae,y as l,ya as x,z as E,za as A}from"./chunk-VHWJXCAA.js";var ee=W(Q());var j=class s{constructor(t){this.firestore=t}getEspecialistasPorEspecialidad(t){return p(this,null,function*(){let e=x(this.firestore,"users"),n=(yield P(e)).docs.map(o=>w({id:o.id},o.data())).filter(o=>this.especialistaValido(o,t));return console.log("Especialistas filtrados:",n),n})}especialistaValido(t,e){return t.role==="especialista"&&t.especialidades.includes(e)}getPacientesUnicosPorEspecialidad(t,e){return p(this,null,function*(){let i=x(this.firestore,"Turnos"),n=yield P(i),o=new Set,d=[],f=n.docs.map(k=>{let te=k.data();return w({id:k.id},te)}).filter(k=>{let te=k.especialista_id===t,Fe=k.especialidad===e;return te&&Fe&&o.add(k.pacienteId),te&&Fe});console.log("Turnos solicitados:",f);let T=Array.from(o);return yield this.getPacientesPorIds(T)})}getPacientesUnicosPorEspecialista(t){return p(this,null,function*(){let e=x(this.firestore,"Turnos"),i=yield P(e),n=new Set,o=[],d=i.docs.map(D=>{let k=D.data();return w({id:D.id},k)}).filter(D=>{let k=D.especialista_id===t;return k&&D.pacienteId&&n.add(D.pacienteId),k});console.log("Turnos solicitados:",d);let f=Array.from(n);return yield this.getPacientesPorIds(f)})}getPacientesPorIds(t){return p(this,null,function*(){let e=x(this.firestore,"users"),i=[];for(let n of t)if(n){let o=Re(e,$e("uid","==",n));(yield P(o)).forEach(f=>{let T=f.data();i.push(w({id:f.id},T))})}else console.warn("ID de paciente es undefined, omitiendo este ID.");return i})}getHorariosPorEspecialista(t){return p(this,null,function*(){let e=x(this.firestore,"horarios"),i=yield P(e),n=yield this.getTurnosPorEspecialista(t);return i.docs.map(o=>{let d=o.data();return w({id:o.id},d)}).filter(o=>o.especialistaId===t&&this.isWithinNext15Days(o.fecha)&&!this.isHorarioOcupado(o,n))})}getTurnosPorEspecialista(t){return p(this,null,function*(){let e=x(this.firestore,"turnos");return(yield P(e)).docs.map(n=>{let o=n.data();return w({id:n.id},o)}).filter(n=>n.especialistaId===t)})}isHorarioOcupado(t,e){let i=new Date(t.fecha),n=new Date(i);return n.setMinutes(n.getMinutes()+30),e.some(o=>{let d=new Date(o.fecha),f=new Date(d);return f.setMinutes(f.getMinutes()+30),d<n&&f>i})}isWithinNext15Days(t){let e=new Date(t),i=new Date,n=new Date;return n.setDate(i.getDate()+15),e>=i&&e<=n}static \u0275fac=function(e){return new(e||s)(I(ae))};static \u0275prov=V({token:s,factory:s.\u0275fac,providedIn:"root"})};var X=W(Q());var O=class s{constructor(t,e){this.firestore=t;this.authService=e}guardarDisponibilidad(t,e){return p(this,null,function*(){let i=A(x(this.firestore,"Disponibilidad"),t);yield G(i,{disponibilidad:e})})}guardarTurnos(t){return p(this,null,function*(){let e=x(this.firestore,"Turnos"),i=t.map(n=>{let o=A(e);return G(o,n)});yield Promise.all(i)})}obtenerTurnos(){return p(this,null,function*(){let t=x(this.firestore,"Turnos"),i=(yield P(t)).docs;return console.log("Turnos disponibles:",i),i})}obtenerTurnosDisponibles(t){return p(this,null,function*(){let e=x(this.firestore,"Turnos"),n=(yield P(e)).docs.map(o=>{let d=o.data();return w({id:o.id},d)}).filter(o=>{let d=o.especialista_id===t,f=o.estado==="disponible";return console.log(`Turno ID: ${o.id}, Especialista ID: ${o.especialista_id}, Estado: ${o.estado}, Coincide: ${d&&f}`),d&&f});return console.log("Turnos disponibles:",n),n})}obtenerTurnosDisponiblesEspecialista(t){return p(this,null,function*(){let e=x(this.firestore,"Turnos"),n=(yield P(e)).docs.map(o=>{let d=o.data();return w({id:o.id},d)}).filter(o=>{let d=o.especialista_id===t;return console.log(`Turno ID: ${o.id}, Especialista ID: ${o.especialista_id}`),d});return console.log("Turnos solicitados:",n),n})}obtenerTurnosDisponiblesPacienteEspecialista(t,e){return p(this,null,function*(){let i=x(this.firestore,"Turnos"),o=(yield P(i)).docs.map(d=>{let f=d.data();return w({id:d.id},f)}).filter(d=>{let f=d.especialista_id===e,T=d.pacienteId===t;return console.log(`Turno ID: ${d.id}, Paciente ID: ${d.pacienteId}`),T&&f});return console.log("Turnos solicitados:",o),o})}obtenerTurnosDisponiblesPaciente(t){return p(this,null,function*(){let e=x(this.firestore,"Turnos"),n=(yield P(e)).docs.map(o=>{let d=o.data();return w({id:o.id},d)}).filter(o=>{let d=o.pacienteId===t;return console.log(`Turno ID: ${o.id}, Paciente ID: ${o.pacienteId}`),d});return console.log("Turnos solicitados:",n),n})}obtenerTurnosEspecialidad(t){return p(this,null,function*(){let e=x(this.firestore,"Turnos"),n=(yield P(e)).docs.map(o=>{let d=o.data();return w({id:o.id},d)}).filter(o=>{let d=o.especialidad===t;return console.log(`Turno ID: ${o.id}, especialidad : ${o.especialidad}`),d});return console.log("Turnos solicitados:",n),n})}obtenerDisponibilidad(t){return p(this,null,function*(){let e=A(this.firestore,`Disponibilidad/${t}`),i=yield Pe(e);return i.exists()?i.data().disponibilidad:(console.log("No existe la disponibilidad para este especialista."),null)})}solicitarTurno(t,e){return p(this,null,function*(){let i=A(this.firestore,`Turnos/${t.horario}`);yield G(i,De(w({},t),{estado:"solicitado",pacienteId:e}),{merge:!0})})}cancelarTurno(t,e){return p(this,null,function*(){let i=A(this.firestore,`Turnos/${t}`);yield G(i,{estado:"cancelado",motivoCancelacion:e},{merge:!0})})}aceptarTurno(t){return p(this,null,function*(){let e=A(this.firestore,`Turnos/${t}`);yield G(e,{estado:"aceptado"},{merge:!0})})}finalizarTurno(n,o){return p(this,arguments,function*(t,{diagnostico:e,rese\u00F1a:i}){let d=A(this.firestore,`Turnos/${t}`);yield G(d,{estado:"realizado",rese\u00F1a:i,diagnostico:e},{merge:!0})})}obtenerRese\u00F1aTurno(t){return p(this,null,function*(){let e=A(this.firestore,`Turnos/${t}`);try{let i=yield Pe(e);if(i.exists()){let n=i.data()?.rese\u00F1a;n?X.default.fire("Rese\xF1a del Turno",n,"info"):X.default.fire("Aviso","No hay rese\xF1a disponible para este turno","info")}else X.default.fire("Error","El turno no existe","error")}catch(i){X.default.fire("Error","No se pudo obtener la rese\xF1a","error"),console.error("Error al obtener rese\xF1a:",i)}})}guardarEncuesta(t){return p(this,null,function*(){let e=x(this.firestore,"encuestas"),i=A(e);yield G(i,t),console.log("Encuesta guardada con \xE9xito")})}guardarCalificacion(t,e){return p(this,null,function*(){let i=A(this.firestore,`Turnos/${t}`);yield G(i,{calificacionTurno:e},{merge:!0})})}static \u0275fac=function(e){return new(e||s)(I(ae),I(M))};static \u0275prov=V({token:s,factory:s.\u0275fac,providedIn:"root"})};function nt(s,t){if(s&1&&(r(0,"option",12),c(1),a()),s&2){let e=t.$implicit;u("value",e.nombre),l(),g(e.nombre)}}function ot(s,t){if(s&1){let e=v();r(0,"option",13),h("nombreEspecialista",function(){let n=b(e).$implicit;return _(n)}),c(1),a()}if(s&2){let e=t.$implicit;u("value",e.uid),l(),g(e.nombre)}}function at(s,t){if(s&1&&(r(0,"option",12),c(1),a()),s&2){let e=t.$implicit;u("value",e.id),l(),ke("",e.fecha," - ",e.hora_inicio,"hs hasta ",e.hora_fin,"hs")}}function rt(s,t){if(s&1&&(r(0,"div")(1,"label",14),c(2,"Paciente:"),a(),oe(3,"input",15),r(4,"label",16),c(5,"DNI:"),a(),oe(6,"input",17),r(7,"label",18),c(8,"Obra Social:"),a(),oe(9,"input",19),a()),s&2){let e=m();l(3),u("readonly",e.isAdmin),l(3),u("readonly",e.isAdmin),l(3),u("readonly",e.isAdmin)}}function st(s,t){if(s&1){let e=v();r(0,"app-listado-paciente",20),h("usuarioSeleccionado",function(n){b(e);let o=m();return _(o.setPacienteData(n))}),a()}}var pe=class s{constructor(t,e,i,n,o,d){this.especialidadService=t;this.especialistaService=e;this.turnoService=i;this.authService=n;this.fb=o;this.router=d;this.turnoForm=this.fb.group({especialidad:["",U.required],especialista:["",U.required],horario:["",U.required],paciente:["",U.required],dni:["",[U.required,U.pattern(/^[0-9]{8,}$/)]],obraSocial:["",U.required]})}especialidades=[];especialistas=[];horarios=[];turnoForm;isAdmin=!1;isPaciente=!1;usuarioSeleccionado;obtenerIdPaciente;nombreEspecialista;ngOnInit(){this.cargarEspecialidades(),this.checkUserRole()}cargarEspecialidades(){return p(this,null,function*(){this.especialidades=yield this.especialidadService.getEspecialidades()})}checkUserRole(){return p(this,null,function*(){this.authService.getUser().subscribe(t=>{t&&(this.isAdmin=t.role==="administrador",this.isPaciente=t.role==="paciente")})})}setPacienteData(t){return p(this,null,function*(){this.usuarioSeleccionado=t,t&&this.turnoForm.patchValue({paciente:t.nombre,dni:t.dni,obraSocial:t.obraSocial,especialista:""})})}onEspecialidadChange(t){return p(this,null,function*(){let i=t.target.value;if(console.log("Nombre de especialidad seleccionada:",i),i)try{this.especialistas=yield this.especialistaService.getEspecialistasPorEspecialidad(i),console.log("Especialistas cargados:",this.especialistas)}catch(n){console.error("Error al cargar especialistas:",n),ee.default.fire("Error","No se pudieron cargar los especialistas","error")}else this.especialistas=[]})}onEspecialistaChange(t){return p(this,null,function*(){let i=t.target.value;if(console.log("ID del especialista seleccionado:",i),i)try{let n=this.especialistas.find(o=>o.uid===i);n&&(this.nombreEspecialista=`${n.nombre} ${n.apellido}`),this.horarios=yield this.turnoService.obtenerTurnosDisponibles(i),this.horarios.sort((o,d)=>{let f=new Date(o.fecha),T=new Date(d.fecha);return f.getTime()!==T.getTime()?f.getTime()-T.getTime():o.hora_inicio.localeCompare(d.hora_inicio)}),console.log("Turnos disponibles cargados:",this.horarios)}catch(n){console.error("Error al cargar turnos:",n),ee.default.fire("Error","No se pudieron cargar los turnos","error")}else this.horarios=[]})}solicitarTurno(){return p(this,null,function*(){try{this.authService.getUser().subscribe(e=>{e.role==="paciente"?(this.obtenerIdPaciente=e.uid,this.turnoForm.patchValue({especialista:this.nombreEspecialista,paciente:e.nombre,dni:e.dni,obraSocial:e.obraSocial})):(this.obtenerIdPaciente=this.usuarioSeleccionado.uid,this.turnoForm.patchValue({especialista:this.nombreEspecialista}))});let t=this.turnoForm.value;yield this.turnoService.solicitarTurno(t,this.obtenerIdPaciente),ee.default.fire("Registro exitoso","El turno ha sido solicitado correctamente","success"),this.router.navigate(["/bienvenida"])}catch(t){console.error("Error al solicitar el turno:",t),ee.default.fire("Error","No se pudo solicitar el turno. Int\xE9ntalo nuevamente.","error")}})}static \u0275fac=function(e){return new(e||s)(E(J),E(j),E(O),E(M),E(We),E(L))};static \u0275cmp=z({type:s,selectors:[["app-solicitar-turno"]],decls:17,vars:6,consts:[[3,"ngSubmit","formGroup"],["for","especialidad"],["id","especialidad","formControlName","especialidad",3,"change"],[3,"value",4,"ngFor","ngForOf"],["for","especialista"],["id","especialista","formControlName","especialista",3,"change"],[3,"value","nombreEspecialista",4,"ngFor","ngForOf"],["for","horario"],["id","horario","formControlName","horario"],[4,"ngIf"],[3,"usuarioSeleccionado",4,"ngIf"],["type","submit"],[3,"value"],[3,"nombreEspecialista","value"],["for","paciente"],["id","paciente","formControlName","paciente","type","text",3,"readonly"],["for","dni"],["id","dni","formControlName","dni","type","text",3,"readonly"],["for","obraSocial"],["id","obraSocial","formControlName","obraSocial","type","text",3,"readonly"],[3,"usuarioSeleccionado"]],template:function(e,i){e&1&&(r(0,"form",0),h("ngSubmit",function(){return i.solicitarTurno()}),r(1,"label",1),c(2,"Especialidad:"),a(),r(3,"select",2),h("change",function(o){return i.onEspecialidadChange(o)}),S(4,nt,2,2,"option",3),a(),r(5,"label",4),c(6,"Especialista:"),a(),r(7,"select",5),h("change",function(o){return i.onEspecialistaChange(o)}),S(8,ot,2,2,"option",6),a(),r(9,"label",7),c(10,"Horario:"),a(),r(11,"select",8),S(12,at,2,4,"option",3),a(),S(13,rt,10,3,"div",9)(14,st,1,0,"app-listado-paciente",10),r(15,"button",11),c(16,"Solicitar Turno"),a()()),e&2&&(u("formGroup",i.turnoForm),l(4),u("ngForOf",i.especialidades),l(4),u("ngForOf",i.especialistas),l(4),u("ngForOf",i.horarios),l(),u("ngIf",i.isAdmin),l(),u("ngIf",i.isAdmin))},dependencies:[R,$,le,Ue,qe,re,Le,se,ce,Ge,Be,Je],styles:['@charset "UTF-8";form[_ngcontent-%COMP%]{max-width:800px;margin:20px auto;padding:30px;border:2px solid #007bff;border-radius:15px;background-color:#e0f7fa;box-shadow:0 4px 20px #0003}label[_ngcontent-%COMP%]{font-weight:700;margin-bottom:5px;display:block;color:#007bff}input[type=text][_ngcontent-%COMP%], select[_ngcontent-%COMP%]{width:100%;padding:12px;border:1px solid #007bff;border-radius:6px;font-size:16px;margin-bottom:15px;box-sizing:border-box;transition:border-color .3s,background-color .3s;background-color:#f1f1f1}input[type=text][_ngcontent-%COMP%]:focus, select[_ngcontent-%COMP%]:focus{border-color:#0056b3;outline:none;background-color:#fff}div[ngIf][_ngcontent-%COMP%]{color:#dc3545;font-size:.9em;margin-top:-10px;margin-bottom:10px}button[type=submit][_ngcontent-%COMP%]{background-color:#007bff;color:#fff;padding:12px 15px;border:none;border-radius:6px;cursor:pointer;transition:background-color .3s,transform .2s;width:100%;font-size:1em}button[type=submit][_ngcontent-%COMP%]:hover{background-color:#0056b3;transform:translateY(-2px)}div[_ngcontent-%COMP%]{margin-bottom:20px}div[_ngcontent-%COMP%]   *[_ngcontent-%COMP%]   ngIf[_ngcontent-%COMP%]{margin-bottom:20px}']})};var fe=class s{constructor(t,e){this.authService=t;this.router=e}canActivate(t,e){return this.authService.getUser().pipe(Y(i=>i&&(i.role==="administrador"||i.role==="paciente")?!0:(this.router.navigate(["/bienvenida"]),console.log("Acceso denegado: no es administrador ni paciente"),!1)))}static \u0275fac=function(e){return new(e||s)(I(M),I(L))};static \u0275prov=V({token:s,factory:s.\u0275fac,providedIn:"root"})};var F=W(Q());var ct=()=>["lunes","martes","mi\xE9rcoles","jueves","viernes","s\xE1bado","domingo"];function lt(s,t){if(s&1){let e=v();r(0,"div")(1,"label"),c(2),Ne(3,"titlecase"),a(),r(4,"div",5)(5,"input",6),Te("ngModelChange",function(n){let o=b(e).$implicit,d=m(2);return ye(d.disponibilidadSemana[o].horaInicio,n)||(d.disponibilidadSemana[o].horaInicio=n),_(n)}),a(),r(6,"input",7),Te("ngModelChange",function(n){let o=b(e).$implicit,d=m(2);return ye(d.disponibilidadSemana[o].horaFin,n)||(d.disponibilidadSemana[o].horaFin=n),_(n)}),a()()()}if(s&2){let e=t.$implicit,i=m(2);l(2),g(Ve(3,7,e)),l(3),Ce("name","",e,"HoraInicio"),xe("ngModel",i.disponibilidadSemana[e].horaInicio),l(),Ce("name","",e,"HoraFin"),xe("ngModel",i.disponibilidadSemana[e].horaFin)}}function dt(s,t){if(s&1){let e=v();r(0,"div")(1,"form",2),h("ngSubmit",function(){b(e);let n=m();return _(n.guardarDisponibilidad())}),S(2,lt,7,9,"div",3),r(3,"button",4),c(4,"Guardar Disponibilidad"),a()()()}s&2&&(l(2),u("ngForOf",Ae(1,ct)))}function pt(s,t){s&1&&(r(0,"p"),c(1,"Selecciona un especialista para asignar disponibilidad."),a())}var ge=class s{constructor(t){this.turnoService=t}usuarioSeleccionado=null;disponibilidadSemana={lunes:{horaInicio:"",horaFin:""},martes:{horaInicio:"",horaFin:""},mi\u00E9rcoles:{horaInicio:"",horaFin:""},jueves:{horaInicio:"",horaFin:""},viernes:{horaInicio:"",horaFin:""},s\u00E1bado:{horaInicio:"",horaFin:""},domingo:{horaInicio:"",horaFin:""}};horariosClinica={lunes:{apertura:"08:00",cierre:"19:00"},martes:{apertura:"08:00",cierre:"19:00"},mi\u00E9rcoles:{apertura:"08:00",cierre:"19:00"},jueves:{apertura:"08:00",cierre:"19:00"},viernes:{apertura:"08:00",cierre:"19:00"},s\u00E1bado:{apertura:"08:00",cierre:"14:00"},domingo:{apertura:null,cierre:null}};mostrarUsuario(t){this.usuarioSeleccionado=t}esHorarioValido(t){let e=parseInt(t.split(":")[1],10);return e===0||e===30}guardarDisponibilidad(){return p(this,null,function*(){if(!this.usuarioSeleccionado){F.default.fire("Error","Por favor, selecciona un especialista.","error");return}for(let t in this.disponibilidadSemana){let e=this.disponibilidadSemana[t],i=this.horariosClinica[t];if(e.horaInicio&&!this.esHorarioValido(e.horaInicio)||e.horaFin&&!this.esHorarioValido(e.horaFin)){F.default.fire("Error",`Los horarios de ${t} deben ser en intervalos de media hora (ej. 08:00 o 08:30).`,"error");return}if(i.apertura&&i.cierre){if(e.horaInicio<i.apertura||e.horaInicio>i.cierre||e.horaFin<i.apertura||e.horaFin>i.cierre){F.default.fire("Error",`El horario de ${t} debe estar entre ${i.apertura} y ${i.cierre}.`,"error");return}if(e.horaInicio>=e.horaFin){F.default.fire("Error",`En ${t}, la hora de inicio debe ser anterior a la hora de fin.`,"error");return}}else if(e.horaInicio||e.horaFin){F.default.fire("Error",`El d\xEDa ${t} est\xE1 cerrado, no debe haber horarios de disponibilidad.`,"error");return}}try{yield this.turnoService.guardarDisponibilidad(this.usuarioSeleccionado.uid,this.disponibilidadSemana),this.generarTurnosProximos15Dias(),F.default.fire("\xC9xito","Disponibilidad guardada correctamente.","success")}catch(t){console.error("Error al guardar la disponibilidad:",t),F.default.fire("Error","No se pudo guardar la disponibilidad.","error")}})}generarTurnosProximos15Dias(){return p(this,null,function*(){if(console.log("entramos a la creacion de turnos"),!this.usuarioSeleccionado){F.default.fire("Error","Por favor, selecciona un especialista.","error");return}let t=yield this.turnoService.obtenerDisponibilidad(this.usuarioSeleccionado.uid);if(!t){F.default.fire("Error","No se encontr\xF3 disponibilidad para el especialista seleccionado.","error");return}let e=[],i=new Date;for(let n=0;n<15;n++){let o=new Date(i);o.setDate(i.getDate()+n);let d=this.obtenerNombreDia(o);if(t[d]){let f=t[d];if(f.horaInicio&&f.horaFin){let T=f.horaInicio;for(;T<f.horaFin;){let D=this.sumarMinutos(T,30);D<=f.horaFin&&e.push({especialista_id:this.usuarioSeleccionado.uid,fecha:o.toISOString().split("T")[0],hora_inicio:T,hora_fin:D,estado:"disponible"}),T=D}}}}try{yield this.turnoService.guardarTurnos(e),F.default.fire("\xC9xito","Turnos generados para los pr\xF3ximos 15 d\xEDas.","success")}catch(n){console.error("Error al generar los turnos:",n),F.default.fire("Error","No se pudieron generar los turnos.","error")}})}obtenerNombreDia(t){return["domingo","lunes","martes","mi\xE9rcoles","jueves","viernes","s\xE1bado"][t.getDay()]}sumarMinutos(t,e){let[i,n]=t.split(":").map(Number),o=new Date;o.setHours(i,n+e);let d=String(o.getHours()).padStart(2,"0"),f=String(o.getMinutes()).padStart(2,"0");return`${d}:${f}`}static \u0275fac=function(e){return new(e||s)(E(O))};static \u0275cmp=z({type:s,selectors:[["app-gestion-horarios"]],decls:5,vars:3,consts:[[3,"usuarioSeleccionado"],[4,"ngIf"],[3,"ngSubmit"],[4,"ngFor","ngForOf"],["type","submit"],[1,"horarios"],["type","time","placeholder","Hora de inicio",3,"ngModelChange","ngModel","name"],["type","time","placeholder","Hora de fin",3,"ngModelChange","ngModel","name"]],template:function(e,i){e&1&&(r(0,"app-listado-especialista",0),h("usuarioSeleccionado",function(o){return i.mostrarUsuario(o)}),a(),r(1,"h2"),c(2),a(),S(3,dt,5,2,"div",1)(4,pt,2,0,"p",1)),e&2&&(l(2),B("Asignar Disponibilidad para ",(i.usuarioSeleccionado==null?null:i.usuarioSeleccionado.nombre)||"Selecciona un especialista",""),l(),u("ngIf",i.usuarioSeleccionado),l(),u("ngIf",!i.usuarioSeleccionado))},dependencies:[R,$,le,re,se,ce,Ke,He,je,ze],styles:['@charset "UTF-8";form[_ngcontent-%COMP%]{max-width:800px;margin:20px auto;padding:30px;border:2px solid #007bff;border-radius:15px;background-color:#e0f7fa;box-shadow:0 4px 20px #0003}label[_ngcontent-%COMP%]{font-weight:700;margin-bottom:5px;display:block;color:#007bff}.horarios[_ngcontent-%COMP%]{display:flex;gap:15px}input[type=time][_ngcontent-%COMP%]{width:48%;padding:12px;border:1px solid #007bff;border-radius:6px;font-size:16px;box-sizing:border-box;background-color:#f1f1f1;transition:border-color .3s,background-color .3s}input[type=time][_ngcontent-%COMP%]:focus{border-color:#0056b3;outline:none;background-color:#fff}button[type=submit][_ngcontent-%COMP%]{background-color:#007bff;color:#fff;padding:12px 15px;border:none;border-radius:6px;cursor:pointer;transition:background-color .3s,transform .2s;width:100%;font-size:1em}button[type=submit][_ngcontent-%COMP%]:hover{background-color:#0056b3;transform:translateY(-2px)}div[_ngcontent-%COMP%]{margin-bottom:20px}']})};var q=W(Q());function ut(s,t){if(s&1){let e=v();r(0,"div")(1,"input",1),h("change",function(n){b(e);let o=m();return _(o.onEspecialidadChange(n))}),a(),c(2),a()}if(s&2){let e=t.$implicit;l(),u("value",e.nombre),l(),B(" ",e.nombre,`
`)}}function mt(s,t){if(s&1){let e=v();r(0,"div")(1,"input",2),h("change",function(n){let o=b(e).$implicit,d=m();return _(d.onEspecialistaChange(n,o))}),a(),c(2),a()}if(s&2){let e=t.$implicit;l(),u("value",e.uid),l(),H(" ",e.nombre," ",e.apellido,`
`)}}function ft(s,t){if(s&1){let e=v();r(0,"button",5),h("click",function(){b(e);let n=m().$implicit,o=m();return _(o.cancelarTurno(n))}),c(1," Cancelar Turno "),a()}}function gt(s,t){s&1&&(r(0,"button",6),c(1," no acciones "),a())}function ht(s,t){if(s&1&&(r(0,"tr")(1,"td"),c(2),a(),r(3,"td"),c(4),a(),r(5,"td"),c(6),a(),r(7,"td"),c(8),a(),r(9,"td"),c(10),a(),r(11,"td"),c(12),a(),r(13,"td"),c(14),a(),r(15,"td"),c(16),a(),r(17,"td"),S(18,ft,2,0,"button",3)(19,gt,2,0,"button",4),a()()),s&2){let e=t.$implicit,i=m();l(2),g(e.dni),l(2),g(e.paciente),l(2),g(e.obraSocial),l(2),g(i.nombreEspecialista),l(2),g(e.especialidad),l(2),g(e.fecha),l(2),H("",e.hora_inicio," - ",e.hora_fin,""),l(2),g(e.estado),l(2),u("ngIf",e.estado==="solicitado"),l(),u("ngIf",e.estado!=="solicitado")}}var he=class s{constructor(t,e,i){this.turnoService=t;this.especialidadService=e;this.especialistaService=i}especialidades=[];especialistas=[];horarios=[];nombreEspecialista;especialidadSeleccionada="";ngOnInit(){this.cargarEspecialidades()}cargarEspecialidades(){return p(this,null,function*(){this.especialidades=yield this.especialidadService.getEspecialidades()})}onEspecialidadChange(t){return p(this,null,function*(){let e=t.target;if(this.especialidadSeleccionada=e.value,this.especialidadSeleccionada)try{this.especialistas=yield this.especialistaService.getEspecialistasPorEspecialidad(this.especialidadSeleccionada),this.horarios=[]}catch{q.default.fire("Error","No se pudieron cargar los especialistas","error")}else this.especialistas=[],this.horarios=[]})}onEspecialistaChange(t,e){return p(this,null,function*(){let n=t.target.value;if(n){this.nombreEspecialista=`${e.nombre} ${e.apellido}`;try{let o=yield this.turnoService.obtenerTurnosDisponiblesEspecialista(n);this.horarios=o.filter(d=>d.especialidad===this.especialidadSeleccionada),this.horarios.sort((d,f)=>new Date(d.fecha).getTime()-new Date(f.fecha).getTime())}catch{q.default.fire("Error","No se pudieron cargar los turnos","error")}}else this.horarios=[]})}cancelarTurno(t){return p(this,null,function*(){if(["Aceptado","Realizado","Rechazado"].includes(t.estado)){q.default.fire("Aviso","No se puede cancelar un turno aceptado, realizado o rechazado","info");return}let{isConfirmed:e,value:i}=yield q.default.fire({title:"\xBFEst\xE1s seguro de cancelar el turno?",text:"Por favor, ingresa el motivo de la cancelaci\xF3n",input:"textarea",inputPlaceholder:"Escribe aqu\xED el motivo...",inputAttributes:{"aria-label":"Motivo de cancelaci\xF3n"},confirmButtonText:"Cancelar turno",showCancelButton:!0,cancelButtonText:"Volver",inputValidator:n=>n?null:"El motivo es requerido para cancelar el turno"});if(e&&i)try{yield this.turnoService.cancelarTurno(t.id,i),q.default.fire("Cancelado","El turno ha sido cancelado con \xE9xito","success"),yield this.onEspecialistaChange({target:{value:t.especialistaId}},{nombre:t.nombreEspecialista,apellido:t.apellidoEspecialista})}catch{q.default.fire("Error","No se pudo cancelar el turno","error")}})}static \u0275fac=function(e){return new(e||s)(E(O),E(J),E(j))};static \u0275cmp=z({type:s,selectors:[["app-gestionar-turnos"]],decls:31,vars:3,consts:[[4,"ngFor","ngForOf"],["type","radio","name","especialidad",3,"change","value"],["type","radio","name","especialista",3,"change","value"],["class","cancelar",3,"click",4,"ngIf"],["class","no-accion","disabled","",4,"ngIf"],[1,"cancelar",3,"click"],["disabled","",1,"no-accion"]],template:function(e,i){e&1&&(r(0,"h2"),c(1,"Listado de Turnos"),a(),r(2,"label"),c(3,"Especialidad:"),a(),S(4,ut,3,2,"div",0),r(5,"label"),c(6,"Especialista:"),a(),S(7,mt,3,3,"div",0),r(8,"table")(9,"thead")(10,"tr")(11,"th"),c(12,"DNI"),a(),r(13,"th"),c(14,"Paciente"),a(),r(15,"th"),c(16,"Obra Social"),a(),r(17,"th"),c(18,"Especialista"),a(),r(19,"th"),c(20,"Especialidad"),a(),r(21,"th"),c(22,"Fecha"),a(),r(23,"th"),c(24,"Horario"),a(),r(25,"th"),c(26,"Estado"),a(),r(27,"th"),c(28,"Acciones"),a()()(),r(29,"tbody"),S(30,ht,20,11,"tr",0),a()()),e&2&&(l(4),u("ngForOf",i.especialidades),l(3),u("ngForOf",i.especialistas),l(23),u("ngForOf",i.horarios))},dependencies:[R,$],styles:['@charset "UTF-8";h2[_ngcontent-%COMP%]{color:#154360;text-align:center;margin-bottom:1rem;font-weight:700;font-size:1.5rem}label[_ngcontent-%COMP%]{font-weight:700;color:#154360;margin-right:.5rem}select[_ngcontent-%COMP%]{padding:.5rem;border-radius:4px;border:1px solid #D5D8DC;margin-bottom:1rem;margin-right:1rem;outline:none;transition:border-color .3s ease}select[_ngcontent-%COMP%]:focus{border-color:#154360}table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;background-color:#fff;box-shadow:0 4px 8px #0000001a;margin:0 auto;border-radius:8px;overflow:hidden}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{padding:1rem;text-align:left}thead[_ngcontent-%COMP%]{background-color:#154360;color:#fff}thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-weight:700;text-transform:uppercase;letter-spacing:.05em}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{transition:background-color .3s ease,transform .2s ease}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#f2f3f4}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#d5e8e8;transform:scale(1.01)}tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-bottom:1px solid #F2F3F4}button[_ngcontent-%COMP%]{padding:.5rem 1rem;font-size:.9rem;border:none;border-radius:4px;color:#fff;cursor:pointer;transition:background-color .3s ease,transform .2s ease;width:100%}button.no-accion[_ngcontent-%COMP%]{background-color:#b0e915}button.cancelar[_ngcontent-%COMP%]{background-color:#c0392b}button.cancelar[_ngcontent-%COMP%]:hover{background-color:#a93226;transform:scale(1.05)}td.estado[_ngcontent-%COMP%]{font-weight:700;color:#1e8449}td.estado.inhabilitado[_ngcontent-%COMP%]{color:#c0392b}']})};var C=W(Q());function bt(s,t){if(s&1){let e=v();r(0,"div")(1,"input",1),h("change",function(n){b(e);let o=m();return _(o.onEspecialidadChange(n))}),a(),c(2),a()}if(s&2){let e=t.$implicit;l(),u("value",e),l(),B(" ",e,`
`)}}function _t(s,t){if(s&1){let e=v();r(0,"div")(1,"input",2),h("change",function(n){let o=b(e).$implicit,d=m();return _(d.onPacienteChange(n,o))}),a(),c(2),a()}if(s&2){let e=t.$implicit;l(),u("value",e.uid),l(),H(" ",e.nombre," ",e.apellido,`
`)}}function vt(s,t){if(s&1){let e=v();r(0,"button",7),h("click",function(){b(e);let n=m().$implicit,o=m();return _(o.cancelarTurno(n))}),c(1," Cancelar Turno "),a()}}function St(s,t){if(s&1){let e=v();r(0,"button",8),h("click",function(){b(e);let n=m().$implicit,o=m();return _(o.aceptarTurno(n))}),c(1," aceptar turno "),a()}}function Et(s,t){if(s&1){let e=v();r(0,"button",9),h("click",function(){b(e);let n=m().$implicit,o=m();return _(o.finalizarTurno(n))}),c(1," finalizar turno "),a()}}function Ct(s,t){if(s&1){let e=v();r(0,"button",10),h("click",function(){b(e);let n=m().$implicit,o=m();return _(o.verResenaTurno(n))}),c(1," ver rese\xF1a "),a()}}function xt(s,t){if(s&1&&(r(0,"tr")(1,"td"),c(2),a(),r(3,"td"),c(4),a(),r(5,"td"),c(6),a(),r(7,"td"),c(8),a(),r(9,"td"),c(10),a(),r(11,"td"),c(12),a(),r(13,"td"),c(14),a(),r(15,"td"),c(16),a(),r(17,"td"),S(18,vt,2,0,"button",3)(19,St,2,0,"button",4)(20,Et,2,0,"button",5)(21,Ct,2,0,"button",6),a()()),s&2){let e=t.$implicit,i=m();l(2),g(e.dni),l(2),g(i.nombrePaciente),l(2),g(e.obraSocial),l(2),g(e.especialista),l(2),g(i.especialidadSeleccionada),l(2),g(e.fecha),l(2),H("",e.hora_inicio," - ",e.hora_fin,""),l(2),g(e.estado),l(2),u("ngIf",e.estado==="solicitado"),l(),u("ngIf",e.estado==="solicitado"),l(),u("ngIf",e.estado==="aceptado"),l(),u("ngIf",e.estado==="realizado")}}var be=class s{constructor(t,e,i){this.turnoService=t;this.especialistaService=e;this.authenticationService=i}especialidades=[];pacientes=[];horarios=[];nombrePaciente="";especialidadSeleccionada="";especialistaIniciado;pacienteSeleccionadoId="";ngOnInit(){this.authenticationService.getUser().subscribe(t=>{t?(this.especialistaIniciado=t,this.cargarPacientes(t.uid),this.cargarEspecialidades()):C.default.fire("Error","No se encontr\xF3 el usuario","error")})}cargarPacientes(t){return p(this,null,function*(){try{this.pacientes=yield this.especialistaService.getPacientesUnicosPorEspecialista(t),console.log("Pacientes cargados:",this.pacientes)}catch(e){console.error("Error cargando pacientes:",e),C.default.fire("Error","No se pudieron cargar los pacientes","error")}})}cargarEspecialidades(){return p(this,null,function*(){this.especialistaIniciado&&this.especialistaIniciado.especialidades?(this.especialidades=this.especialistaIniciado.especialidades,console.log("Especialidades cargadas:",this.especialidades)):(this.especialidades=[],C.default.fire("Error","No se encontraron especialidades para este especialista","error"))})}onEspecialidadChange(t){return p(this,null,function*(){let e=t.target;if(this.especialidadSeleccionada=e.value,this.especialidadSeleccionada)try{this.pacientes=yield this.especialistaService.getPacientesUnicosPorEspecialidad(this.especialistaIniciado.uid,this.especialidadSeleccionada),this.horarios=[]}catch{C.default.fire("Error","No se pudieron cargar los pacientes","error")}else this.pacientes=[],this.horarios=[]})}onPacienteChange(t,e){return p(this,null,function*(){let i=t.target;if(this.pacienteSeleccionadoId=i.value,this.pacienteSeleccionadoId){this.nombrePaciente=`${e.nombre} ${e.apellido}`;try{let n=yield this.turnoService.obtenerTurnosDisponiblesPaciente(this.pacienteSeleccionadoId);this.horarios=n.filter(o=>o.especialidad===this.especialidadSeleccionada),this.horarios.sort((o,d)=>new Date(o.fecha).getTime()-new Date(d.fecha).getTime())}catch{C.default.fire("Error","No se pudieron cargar los turnos","error")}}else this.horarios=[]})}cancelarTurno(t){return p(this,null,function*(){if(["Aceptado","Realizado","Rechazado"].includes(t.estado)){C.default.fire("Aviso","No se puede cancelar un turno aceptado, realizado o rechazado","info");return}let{isConfirmed:e,value:i}=yield C.default.fire({title:"\xBFEst\xE1s seguro de cancelar el turno?",text:"Por favor, ingresa el motivo de la cancelaci\xF3n",input:"textarea",inputPlaceholder:"Escribe aqu\xED el motivo...",inputAttributes:{"aria-label":"Motivo de cancelaci\xF3n"},confirmButtonText:"Cancelar turno",showCancelButton:!0,cancelButtonText:"Volver",inputValidator:n=>n?null:"El motivo es requerido para cancelar el turno"});if(e&&i)try{yield this.turnoService.cancelarTurno(t.id,i),C.default.fire("Cancelado","El turno ha sido cancelado con \xE9xito","success"),this.onPacienteChange({target:{value:this.pacienteSeleccionadoId}},{nombre:this.nombrePaciente})}catch{C.default.fire("Error","No se pudo cancelar el turno","error")}})}aceptarTurno(t){return p(this,null,function*(){if(["Aceptado","Realizado","Rechazado"].includes(t.estado)){C.default.fire("Aviso","No se puede cancelar un turno aceptado, realizado o rechazado","info");return}let{isConfirmed:e}=yield C.default.fire({title:"\xBFEst\xE1s seguro de aceptar el turno?",confirmButtonText:"aceptar turno",showCancelButton:!0,cancelButtonText:"Volver"});if(e)try{yield this.turnoService.aceptarTurno(t.id),C.default.fire("aceptado","El turno ha sido aceptado con \xE9xito","success"),this.onPacienteChange({target:{value:this.pacienteSeleccionadoId}},{nombre:this.nombrePaciente})}catch{C.default.fire("Error","No se pudo aceptar el turno","error")}})}finalizarTurno(t){return p(this,null,function*(){if(t.estado!=="aceptado"){C.default.fire("Aviso","Solo puedes finalizar un turno aceptado","info");return}let{isConfirmed:e,value:{diagnostico:i,rese\u00F1a:n}}=yield C.default.fire({title:"Finalizar Turno",html:`
        <label for="diagnostico">Diagn\xF3stico:</label>
        <textarea id="diagnostico" rows="3" style="width: 100%;" placeholder="Escribe aqu\xED el diagn\xF3stico..."></textarea>
        <label for="rese\xF1a">Rese\xF1a/Comentario:</label>
        <textarea id="rese\xF1a" rows="3" style="width: 100%;" placeholder="Escribe aqu\xED la rese\xF1a..."></textarea>
      `,focusConfirm:!1,preConfirm:()=>({diagnostico:document.getElementById("diagnostico").value,rese\u00F1a:document.getElementById("rese\xF1a").value}),confirmButtonText:"Finalizar Turno",showCancelButton:!0,cancelButtonText:"Cancelar"});if(e){if(!i||!n){C.default.fire("Error","Ambos campos son obligatorios","error");return}try{yield this.turnoService.finalizarTurno(t.id,{diagnostico:i,rese\u00F1a:n}),C.default.fire("Finalizado","El turno ha sido finalizado con \xE9xito","success"),this.onPacienteChange({target:{value:this.pacienteSeleccionadoId}},{nombre:this.nombrePaciente})}catch{C.default.fire("Error","No se pudo finalizar el turno","error")}}})}verResenaTurno(t){return p(this,null,function*(){if(t.estado!=="realizado"){C.default.fire("Aviso","Solo puedes ver la rese\xF1a de un turno realizado","info");return}try{yield this.turnoService.obtenerRese\u00F1aTurno(t.id)}catch(e){console.error("Error al obtener rese\xF1a:",e),C.default.fire("Error","No se pudo obtener la rese\xF1a","error")}})}static \u0275fac=function(e){return new(e||s)(E(O),E(j),E(M))};static \u0275cmp=z({type:s,selectors:[["app-turnos-especialista"]],decls:31,vars:3,consts:[[4,"ngFor","ngForOf"],["type","radio","name","especialidad",3,"change","value"],["type","radio","name","paciente",3,"change","value"],["class","cancelar",3,"click",4,"ngIf"],["class","aceptar",3,"click",4,"ngIf"],["class","finalizar",3,"click",4,"ngIf"],["class","realizado",3,"click",4,"ngIf"],[1,"cancelar",3,"click"],[1,"aceptar",3,"click"],[1,"finalizar",3,"click"],[1,"realizado",3,"click"]],template:function(e,i){e&1&&(r(0,"h2"),c(1,"Listado de Turnos"),a(),r(2,"label"),c(3,"Especialidad:"),a(),S(4,bt,3,2,"div",0),r(5,"label"),c(6,"Pacientes:"),a(),S(7,_t,3,3,"div",0),r(8,"table")(9,"thead")(10,"tr")(11,"th"),c(12,"DNI"),a(),r(13,"th"),c(14,"Paciente"),a(),r(15,"th"),c(16,"Obra Social"),a(),r(17,"th"),c(18,"Especialista"),a(),r(19,"th"),c(20,"Especialidad"),a(),r(21,"th"),c(22,"Fecha"),a(),r(23,"th"),c(24,"Horario"),a(),r(25,"th"),c(26,"Estado"),a(),r(27,"th"),c(28,"Acciones"),a()()(),r(29,"tbody"),S(30,xt,22,13,"tr",0),a()()),e&2&&(l(4),u("ngForOf",i.especialidades),l(3),u("ngForOf",i.pacientes),l(23),u("ngForOf",i.horarios))},dependencies:[R,$],styles:['@charset "UTF-8";h2[_ngcontent-%COMP%]{color:#154360;text-align:center;margin-bottom:1rem;font-weight:700;font-size:1.5rem}label[_ngcontent-%COMP%]{font-weight:700;color:#154360;margin-right:.5rem}select[_ngcontent-%COMP%]{padding:.5rem;border-radius:4px;border:1px solid #D5D8DC;margin-bottom:1rem;margin-right:1rem;outline:none;transition:border-color .3s ease}select[_ngcontent-%COMP%]:focus{border-color:#154360}table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;background-color:#fff;box-shadow:0 4px 8px #0000001a;margin:0 auto;border-radius:8px;overflow:hidden}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{padding:1rem;text-align:left}thead[_ngcontent-%COMP%]{background-color:#154360;color:#fff}thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-weight:700;text-transform:uppercase;letter-spacing:.05em}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{transition:background-color .3s ease,transform .2s ease}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#f2f3f4}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#d5e8e8;transform:scale(1.01)}tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-bottom:1px solid #F2F3F4}button[_ngcontent-%COMP%]{padding:.5rem 1rem;font-size:.9rem;border:none;border-radius:4px;color:#fff;cursor:pointer;transition:background-color .3s ease,transform .2s ease;width:100%}button.aceptar[_ngcontent-%COMP%], button.finalizar[_ngcontent-%COMP%], button.realizado[_ngcontent-%COMP%]{background-color:#b0e915}button.aceptar[_ngcontent-%COMP%], button.finalizar[_ngcontent-%COMP%], button.realizado[_ngcontent-%COMP%]{background-color:#82b825;transform:scale(1.05)}button.cancelar[_ngcontent-%COMP%]{background-color:#c0392b}button.cancelar[_ngcontent-%COMP%]:hover{background-color:#a93226;transform:scale(1.05)}td.estado[_ngcontent-%COMP%]{font-weight:700;color:#1e8449}td.estado.inhabilitado[_ngcontent-%COMP%]{color:#c0392b}']})};var _e=class s{constructor(t,e){this.authService=t;this.router=e}canActivate(t,e){return this.authService.getUser().pipe(Y(i=>i&&i.role==="especialista"?!0:(this.router.navigate(["/bienvenida"]),console.log("no es especialista verifica las cosas bien"),!1)))}static \u0275fac=function(e){return new(e||s)(I(M),I(L))};static \u0275prov=V({token:s,factory:s.\u0275fac,providedIn:"root"})};var y=W(Q());function yt(s,t){if(s&1){let e=v();r(0,"div")(1,"input",1),h("change",function(n){b(e);let o=m();return _(o.onEspecialidadChange(n))}),a(),c(2),a()}if(s&2){let e=t.$implicit;l(),u("value",e.nombre),l(),B(" ",e.nombre,`
`)}}function Tt(s,t){if(s&1){let e=v();r(0,"div")(1,"input",2),h("change",function(n){let o=b(e).$implicit,d=m();return _(d.onEspecialistaChange(n,o))}),a(),c(2),a()}if(s&2){let e=t.$implicit;l(),u("value",e.uid),l(),H(" ",e.nombre," ",e.apellido,`
`)}}function wt(s,t){if(s&1){let e=v();r(0,"button",7),h("click",function(){b(e);let n=m().$implicit,o=m();return _(o.cancelarTurno(n))}),c(1," Cancelar Turno "),a()}}function It(s,t){if(s&1){let e=v();r(0,"button",8),h("click",function(){b(e);let n=m().$implicit,o=m();return _(o.verResenaTurno(n))}),c(1," ver rese\xF1a "),a()}}function Pt(s,t){if(s&1){let e=v();r(0,"button",9),h("click",function(){b(e);let n=m().$implicit,o=m();return _(o.mostrarEncuesta(n))}),c(1," realizar Encuesta "),a()}}function Mt(s,t){if(s&1){let e=v();r(0,"button",10),h("click",function(){b(e);let n=m().$implicit,o=m();return _(o.calificarAtencion(n))}),c(1," Calificar Atenci\xF3n "),a()}}function Ot(s,t){if(s&1&&(r(0,"tr")(1,"td"),c(2),a(),r(3,"td"),c(4),a(),r(5,"td"),c(6),a(),r(7,"td"),c(8),a(),r(9,"td"),c(10),a(),r(11,"td"),c(12),a(),r(13,"td"),c(14),a(),r(15,"td"),c(16),a(),r(17,"td"),S(18,wt,2,0,"button",3)(19,It,2,0,"button",4)(20,Pt,2,0,"button",5)(21,Mt,2,0,"button",6),a()()),s&2){let e=t.$implicit,i=m();l(2),g(e.dni),l(2),g(e.paciente),l(2),g(e.obraSocial),l(2),g(i.nombreEspecialista),l(2),g(e.especialidad),l(2),g(e.fecha),l(2),H("",e.hora_inicio," - ",e.hora_fin,""),l(2),g(e.estado),l(2),u("ngIf",e.estado==="solicitado"),l(),u("ngIf",e.estado==="realizado"),l(),u("ngIf",e.estado==="realizado"),l(),u("ngIf",e.estado==="realizado")}}var ve=class s{constructor(t,e,i,n){this.turnoService=t;this.especialidadService=e;this.especialistaService=i;this.authenticationService=n}especialidades=[];especialistas=[];horarios=[];nombreEspecialista;especialidadSeleccionada="";encuesta={};pacienteActual="";ngOnInit(){this.cargarEspecialidades(),this.authenticationService.getUser().subscribe(t=>{t?this.pacienteActual=t:y.default.fire("Error","No se encontr\xF3 el usuario","error")})}cargarEspecialidades(){return p(this,null,function*(){this.especialidades=yield this.especialidadService.getEspecialidades()})}onEspecialidadChange(t){return p(this,null,function*(){let e=t.target;if(this.especialidadSeleccionada=e.value,this.especialidadSeleccionada)try{this.especialistas=yield this.especialistaService.getEspecialistasPorEspecialidad(this.especialidadSeleccionada),this.horarios=[]}catch{y.default.fire("Error","No se pudieron cargar los especialistas","error")}else this.especialistas=[],this.horarios=[]})}onEspecialistaChange(t,e){return p(this,null,function*(){let n=t.target.value;if(n){this.nombreEspecialista=`${e.nombre} ${e.apellido}`;try{let o=yield this.turnoService.obtenerTurnosDisponiblesPacienteEspecialista(this.pacienteActual.uid,n);this.horarios=o.filter(d=>d.especialidad===this.especialidadSeleccionada),this.horarios.sort((d,f)=>new Date(d.fecha).getTime()-new Date(f.fecha).getTime())}catch{y.default.fire("Error","No se pudieron cargar los turnos","error")}}else this.horarios=[]})}cancelarTurno(t){return p(this,null,function*(){if(["Aceptado","Realizado","Rechazado"].includes(t.estado)){y.default.fire("Aviso","No se puede cancelar un turno aceptado, realizado o rechazado","info");return}let{isConfirmed:e,value:i}=yield y.default.fire({title:"\xBFEst\xE1s seguro de cancelar el turno?",text:"Por favor, ingresa el motivo de la cancelaci\xF3n",input:"textarea",inputPlaceholder:"Escribe aqu\xED el motivo...",inputAttributes:{"aria-label":"Motivo de cancelaci\xF3n"},confirmButtonText:"Cancelar turno",showCancelButton:!0,cancelButtonText:"Volver",inputValidator:n=>n?null:"El motivo es requerido para cancelar el turno"});if(e&&i)try{yield this.turnoService.cancelarTurno(t.id,i),y.default.fire("Cancelado","El turno ha sido cancelado con \xE9xito","success"),yield this.onEspecialistaChange({target:{value:t.especialistaId}},{nombre:t.nombreEspecialista,apellido:t.apellidoEspecialista})}catch{y.default.fire("Error","No se pudo cancelar el turno","error")}})}verResenaTurno(t){return p(this,null,function*(){if(t.estado!=="realizado"){y.default.fire("Aviso","Solo puedes ver la rese\xF1a de un turno realizado","info");return}try{yield this.turnoService.obtenerRese\u00F1aTurno(t.id)}catch(e){console.error("Error al obtener rese\xF1a:",e),y.default.fire("Error","No se pudo obtener la rese\xF1a","error")}})}mostrarEncuesta(t){y.default.fire({title:"Completar Encuesta",html:`
        <label for="pregunta1">\xBFC\xF3mo calificar\xEDas la atenci\xF3n del especialista?</label>
        <input type="text" id="pregunta1" class="swal2-input" placeholder="Tu respuesta aqu\xED">
        
        <label for="pregunta2">\xBFEst\xE1s satisfecho con la duraci\xF3n de tu consulta?</label>
        <input type="text" id="pregunta2" class="swal2-input" placeholder="Tu respuesta aqu\xED">
      `,focusConfirm:!1,preConfirm:()=>{let e=document.getElementById("pregunta1").value,i=document.getElementById("pregunta2").value;return(!e||!i)&&y.default.showValidationMessage("Por favor completa todas las preguntas"),{pregunta1:e,pregunta2:i}}}).then(e=>p(this,null,function*(){e.isConfirmed&&(this.encuesta={turnoId:t.id,respuesta1:e.value.pregunta1,respuesta2:e.value.pregunta2},yield this.turnoService.guardarEncuesta(this.encuesta),y.default.fire("Gracias","Tus respuestas han sido guardadas","success"))}))}calificarAtencion(t){return p(this,null,function*(){if(t.estado!=="realizado"){y.default.fire("Aviso","Solo puedes calificar la atenci\xF3n de un turno realizado","info");return}let{value:e}=yield y.default.fire({title:"Calificar Atenci\xF3n",input:"textarea",inputPlaceholder:"Escribe aqu\xED tu comentario sobre la atenci\xF3n...",showCancelButton:!0,confirmButtonText:"Enviar Comentario",cancelButtonText:"Cancelar",inputValidator:i=>i?null:"El comentario es obligatorio"});e&&(yield this.turnoService.guardarCalificacion(t.id,e),y.default.fire("Gracias","Tu calificaci\xF3n ha sido guardada","success"))})}static \u0275fac=function(e){return new(e||s)(E(O),E(J),E(j),E(M))};static \u0275cmp=z({type:s,selectors:[["app-turnos-pacientes"]],decls:31,vars:3,consts:[[4,"ngFor","ngForOf"],["type","radio","name","especialidad",3,"change","value"],["type","radio","name","especialista",3,"change","value"],["class","cancelar",3,"click",4,"ngIf"],["class","realizado",3,"click",4,"ngIf"],["class","encuesta",3,"click",4,"ngIf"],["class","ng bui",3,"click",4,"ngIf"],[1,"cancelar",3,"click"],[1,"realizado",3,"click"],[1,"encuesta",3,"click"],[1,"ng","bui",3,"click"]],template:function(e,i){e&1&&(r(0,"h2"),c(1,"Listado de Turnos"),a(),r(2,"label"),c(3,"Especialidad:"),a(),S(4,yt,3,2,"div",0),r(5,"label"),c(6,"Especialista:"),a(),S(7,Tt,3,3,"div",0),r(8,"table")(9,"thead")(10,"tr")(11,"th"),c(12,"DNI"),a(),r(13,"th"),c(14,"Paciente"),a(),r(15,"th"),c(16,"Obra Social"),a(),r(17,"th"),c(18,"Especialista"),a(),r(19,"th"),c(20,"Especialidad"),a(),r(21,"th"),c(22,"Fecha"),a(),r(23,"th"),c(24,"Horario"),a(),r(25,"th"),c(26,"Estado"),a(),r(27,"th"),c(28,"Acciones"),a()()(),r(29,"tbody"),S(30,Ot,22,13,"tr",0),a()()),e&2&&(l(4),u("ngForOf",i.especialidades),l(3),u("ngForOf",i.especialistas),l(23),u("ngForOf",i.horarios))},dependencies:[R,$],styles:['@charset "UTF-8";h2[_ngcontent-%COMP%]{color:#154360;text-align:center;margin-bottom:1rem;font-weight:700;font-size:1.5rem}label[_ngcontent-%COMP%]{font-weight:700;color:#154360;margin-right:.5rem}select[_ngcontent-%COMP%]{padding:.5rem;border-radius:4px;border:1px solid #D5D8DC;margin-bottom:1rem;margin-right:1rem;outline:none;transition:border-color .3s ease}select[_ngcontent-%COMP%]:focus{border-color:#154360}table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;background-color:#fff;box-shadow:0 4px 8px #0000001a;margin:0 auto;border-radius:8px;overflow:hidden}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{padding:1rem;text-align:left}thead[_ngcontent-%COMP%]{background-color:#154360;color:#fff}thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-weight:700;text-transform:uppercase;letter-spacing:.05em}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{transition:background-color .3s ease,transform .2s ease}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#f2f3f4}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#d5e8e8;transform:scale(1.01)}tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-bottom:1px solid #F2F3F4}button[_ngcontent-%COMP%]{padding:.5rem 1rem;font-size:.9rem;border:none;border-radius:4px;color:#fff;cursor:pointer;transition:background-color .3s ease,transform .2s ease;width:100%}button.realizado[_ngcontent-%COMP%], button.encuesta[_ngcontent-%COMP%], button.calificacion[_ngcontent-%COMP%]{margin-bottom:3px;background-color:#b0e915}button.realizado[_ngcontent-%COMP%], button.encuesta[_ngcontent-%COMP%], button.calificacion[_ngcontent-%COMP%]{background-color:#82b825;transform:scale(1.05)}button.cancelar[_ngcontent-%COMP%]{background-color:#c0392b}button.cancelar[_ngcontent-%COMP%]:hover{background-color:#a93226;transform:scale(1.05)}td.estado[_ngcontent-%COMP%]{font-weight:700;color:#1e8449}td.estado.inhabilitado[_ngcontent-%COMP%]{color:#c0392b}']})};var Se=class s{constructor(t,e){this.authService=t;this.router=e}canActivate(t,e){return this.authService.getUser().pipe(Y(i=>i&&i.role==="paciente"?!0:(this.router.navigate(["/bienvenida"]),console.log("no es paciente verifica las cosas bien"),!1)))}static \u0275fac=function(e){return new(e||s)(I(M),I(L))};static \u0275prov=V({token:s,factory:s.\u0275fac,providedIn:"root"})};var Ft=[{path:"solicitar-turno",component:pe,canActivate:[fe]},{path:"gestionar-horarios",component:ge,canActivate:[Me]},{path:"gestionar-turnos",component:he,canActivate:[Me]},{path:"turnos-especialista",component:be,canActivate:[_e]},{path:"turnos-pacientes",component:ve,canActivate:[Se]}],Ee=class s{static \u0275fac=function(e){return new(e||s)};static \u0275mod=ne({type:s});static \u0275inj=ie({imports:[Ie.forChild(Ft),Ie]})};var et=class s{static \u0275fac=function(e){return new(e||s)};static \u0275mod=ne({type:s});static \u0275inj=ie({imports:[we,Ee,Qe,Xe,we,Ye]})};export{et as SeccionTurnosModule};
