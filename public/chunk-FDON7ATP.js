import{a as Ve,b as k,c as he,d as Ne}from"./chunk-DDFN7GK3.js";import{$ as xe,A as s,Aa as w,B as h,Ba as Y,C as N,Ca as q,D as A,E as _e,Q as z,R,T as me,W as $,Y as fe,Z as Ee,_ as H,a as j,aa as Ce,d as W,da as Se,e as u,ea as ye,f as U,fa as Te,g as V,ga as Ie,h as X,ha as we,i as M,ia as Pe,j as O,ja as Me,k as Z,ka as Oe,l as _,la as ke,m as E,p as l,q as v,qa as Fe,r as C,s as p,sa as B,t as o,u as n,v as ee,va as G,w as x,x as g,xa as De,y as m,za as Ae}from"./chunk-TVM3FCCN.js";var Q=W(Y());var F=class r{constructor(t){this.firestore=t}getEspecialistasPorEspecialidad(t){return u(this,null,function*(){let e=B(this.firestore,"users"),a=(yield G(e)).docs.map(c=>j({id:c.id},c.data())).filter(c=>this.especialistaValido(c,t));return console.log("Especialistas filtrados:",a),a})}especialistaValido(t,e){return t.role==="especialista"&&t.especialidades.includes(e)}getPacientesUnicosPorEspecialidad(t,e){return u(this,null,function*(){let i=B(this.firestore,"Turnos"),a=yield G(i),c=new Set,d=[],f=a.docs.map(T=>{let K=T.data();return j({id:T.id},K)}).filter(T=>{let K=T.especialista_id===t,ve=T.especialidad===e;return K&&ve&&c.add(T.pacienteId),K&&ve});console.log("Turnos solicitados:",f);let I=Array.from(c);return yield this.getPacientesPorIds(I)})}getPacientesUnicosPorEspecialista(t){return u(this,null,function*(){let e=B(this.firestore,"Turnos"),i=yield G(e),a=new Set,c=[],d=i.docs.map(y=>{let T=y.data();return j({id:y.id},T)}).filter(y=>{let T=y.especialista_id===t;return T&&y.pacienteId&&a.add(y.pacienteId),T});console.log("Turnos solicitados:",d);let f=Array.from(a);return yield this.getPacientesPorIds(f)})}getPacientesPorIds(t){return u(this,null,function*(){let e=B(this.firestore,"users"),i=[];for(let a of t)if(a){let c=De(e,Ae("uid","==",a));(yield G(c)).forEach(f=>{let I=f.data();i.push(j({id:f.id},I))})}else console.warn("ID de paciente es undefined, omitiendo este ID.");return i})}getHorariosPorEspecialista(t){return u(this,null,function*(){let e=B(this.firestore,"horarios"),i=yield G(e),a=yield this.getTurnosPorEspecialista(t);return i.docs.map(c=>{let d=c.data();return j({id:c.id},d)}).filter(c=>c.especialistaId===t&&this.isWithinNext15Days(c.fecha)&&!this.isHorarioOcupado(c,a))})}getTurnosPorEspecialista(t){return u(this,null,function*(){let e=B(this.firestore,"turnos");return(yield G(e)).docs.map(a=>{let c=a.data();return j({id:a.id},c)}).filter(a=>a.especialistaId===t)})}isHorarioOcupado(t,e){let i=new Date(t.fecha),a=new Date(i);return a.setMinutes(a.getMinutes()+30),e.some(c=>{let d=new Date(c.fecha),f=new Date(d);return f.setMinutes(f.getMinutes()+30),d<a&&f>i})}isWithinNext15Days(t){let e=new Date(t),i=new Date,a=new Date;return a.setDate(i.getDate()+15),e>=i&&e<=a}static \u0275fac=function(e){return new(e||r)(M(Fe))};static \u0275prov=V({token:r,factory:r.\u0275fac,providedIn:"root"})};function $e(r,t){if(r&1&&(o(0,"option",12),s(1),n()),r&2){let e=t.$implicit;p("value",e.nombre),l(),h(e.nombre)}}function He(r,t){if(r&1){let e=x();o(0,"option",13),g("nombreEspecialista",function(){let a=_(e).$implicit;return E(a)}),s(1),n()}if(r&2){let e=t.$implicit;p("value",e.uid),l(),h(e.nombre)}}function je(r,t){if(r&1&&(o(0,"option",12),s(1),n()),r&2){let e=t.$implicit;p("value",e.id),l(),_e("",e.fecha," - ",e.hora_inicio,"hs hasta ",e.hora_fin,"hs")}}function Be(r,t){if(r&1&&(o(0,"div")(1,"label",14),s(2,"Paciente:"),n(),ee(3,"input",15),o(4,"label",16),s(5,"DNI:"),n(),ee(6,"input",17),o(7,"label",18),s(8,"Obra Social:"),n(),ee(9,"input",19),n()),r&2){let e=m();l(3),p("readonly",e.isAdmin),l(3),p("readonly",e.isAdmin),l(3),p("readonly",e.isAdmin)}}function Ge(r,t){if(r&1){let e=x();o(0,"app-listado-paciente",20),g("usuarioSeleccionado",function(a){_(e);let c=m();return E(c.setPacienteData(a))}),n()}}var ie=class r{constructor(t,e,i,a,c,d){this.especialidadService=t;this.especialistaService=e;this.turnoService=i;this.authService=a;this.fb=c;this.router=d;this.turnoForm=this.fb.group({especialidad:["",H.required],especialista:["",H.required],horario:["",H.required],paciente:["",H.required],dni:["",[H.required,H.pattern(/^[0-9]{8,}$/)]],obraSocial:["",H.required]})}especialidades=[];especialistas=[];horarios=[];turnoForm;isAdmin=!1;isPaciente=!1;usuarioSeleccionado;obtenerIdPaciente;nombreEspecialista;especialiadaSeleccionada;ngOnInit(){this.cargarEspecialidades(),this.checkUserRole()}cargarEspecialidades(){return u(this,null,function*(){this.especialidades=yield this.especialidadService.getEspecialidades()})}checkUserRole(){return u(this,null,function*(){this.authService.getUser().subscribe(t=>{t&&(this.isAdmin=t.role==="administrador",this.isPaciente=t.role==="paciente")})})}setPacienteData(t){return u(this,null,function*(){this.usuarioSeleccionado=t,t&&this.turnoForm.patchValue({paciente:t.nombre,dni:t.dni,obraSocial:t.obraSocial,especialista:""})})}onEspecialidadChange(t){return u(this,null,function*(){let i=t.target.value;if(this.especialiadaSeleccionada=i,console.log("Nombre de especialidad seleccionada:",i),this.turnoForm.patchValue({especialista:""}),this.horarios=[],i)try{this.especialistas=yield this.especialistaService.getEspecialistasPorEspecialidad(i),console.log("Especialistas cargados:",this.especialistas)}catch(a){console.error("Error al cargar especialistas:",a),Q.default.fire("Error","No se pudieron cargar los especialistas","error")}else this.especialistas=[]})}onEspecialistaChange(t){return u(this,null,function*(){let i=t.target.value;if(console.log("ID del especialista seleccionado:",i),i)try{let a=this.especialistas.find(f=>f.uid===i);a&&(this.nombreEspecialista=`${a.nombre} ${a.apellido}`);let c=yield this.turnoService.obtenerTurnosDisponibles(i,this.especialiadaSeleccionada),d=new Date;this.horarios=c.filter(f=>new Date(f.fecha)>=d),this.horarios.sort((f,I)=>{let y=new Date(f.fecha),T=new Date(I.fecha);return y.getTime()!==T.getTime()?y.getTime()-T.getTime():f.hora_inicio.localeCompare(I.hora_inicio)}),console.log("Turnos disponibles cargados:",this.horarios)}catch(a){console.error("Error al cargar turnos:",a),Q.default.fire("Error","No se pudieron cargar los turnos","error")}else this.horarios=[]})}solicitarTurno(){return u(this,null,function*(){try{this.authService.getUser().subscribe(e=>{e.role==="paciente"?(this.obtenerIdPaciente=e.uid,this.turnoForm.patchValue({especialista:this.nombreEspecialista,paciente:e.nombre,dni:e.dni,obraSocial:e.obraSocial})):(this.obtenerIdPaciente=this.usuarioSeleccionado.uid,this.turnoForm.patchValue({especialista:this.nombreEspecialista}))});let t=this.turnoForm.value;yield this.turnoService.solicitarTurno(t,this.obtenerIdPaciente),Q.default.fire("Registro exitoso","El turno ha sido solicitado correctamente","success"),this.router.navigate(["/bienvenida"])}catch(t){console.error("Error al solicitar el turno:",t),Q.default.fire("Error","No se pudo solicitar el turno. Int\xE9ntalo nuevamente.","error")}})}static \u0275fac=function(e){return new(e||r)(v(q),v(F),v(k),v(w),v(Me),v($))};static \u0275cmp=O({type:r,selectors:[["app-solicitar-turno"]],decls:17,vars:6,consts:[[3,"ngSubmit","formGroup"],["for","especialidad"],["id","especialidad","formControlName","especialidad",3,"change"],[3,"value",4,"ngFor","ngForOf"],["for","especialista"],["id","especialista","formControlName","especialista",3,"change"],[3,"value","nombreEspecialista",4,"ngFor","ngForOf"],["for","horario"],["id","horario","formControlName","horario"],[4,"ngIf"],[3,"usuarioSeleccionado",4,"ngIf"],["type","submit"],[3,"value"],[3,"nombreEspecialista","value"],["for","paciente"],["id","paciente","formControlName","paciente","type","text",3,"readonly"],["for","dni"],["id","dni","formControlName","dni","type","text",3,"readonly"],["for","obraSocial"],["id","obraSocial","formControlName","obraSocial","type","text",3,"readonly"],[3,"usuarioSeleccionado"]],template:function(e,i){e&1&&(o(0,"form",0),g("ngSubmit",function(){return i.solicitarTurno()}),o(1,"label",1),s(2,"Especialidad:"),n(),o(3,"select",2),g("change",function(c){return i.onEspecialidadChange(c)}),C(4,$e,2,2,"option",3),n(),o(5,"label",4),s(6,"Especialista:"),n(),o(7,"select",5),g("change",function(c){return i.onEspecialistaChange(c)}),C(8,He,2,2,"option",6),n(),o(9,"label",7),s(10,"Horario:"),n(),o(11,"select",8),C(12,je,2,4,"option",3),n(),C(13,Be,10,3,"div",9)(14,Ge,1,0,"app-listado-paciente",10),o(15,"button",11),s(16,"Solicitar Turno"),n()()),e&2&&(p("formGroup",i.turnoForm),l(4),p("ngForOf",i.especialidades),l(4),p("ngForOf",i.especialistas),l(4),p("ngForOf",i.horarios),l(),p("ngIf",i.isAdmin),l(),p("ngIf",i.isAdmin))},dependencies:[z,R,Se,we,Pe,Ee,Ie,xe,Ce,ye,Te,Ve],styles:['@charset "UTF-8";form[_ngcontent-%COMP%]{max-width:800px;margin:20px auto;padding:30px;border:2px solid #007bff;border-radius:15px;background-color:#e0f7fa;box-shadow:0 4px 20px #0003}label[_ngcontent-%COMP%]{font-weight:700;margin-bottom:5px;display:block;color:#007bff}input[type=text][_ngcontent-%COMP%], select[_ngcontent-%COMP%]{width:100%;padding:12px;border:1px solid #007bff;border-radius:6px;font-size:16px;margin-bottom:15px;box-sizing:border-box;transition:border-color .3s,background-color .3s;background-color:#f1f1f1}input[type=text][_ngcontent-%COMP%]:focus, select[_ngcontent-%COMP%]:focus{border-color:#0056b3;outline:none;background-color:#fff}div[ngIf][_ngcontent-%COMP%]{color:#dc3545;font-size:.9em;margin-top:-10px;margin-bottom:10px}button[type=submit][_ngcontent-%COMP%]{background-color:#007bff;color:#fff;padding:12px 15px;border:none;border-radius:6px;cursor:pointer;transition:background-color .3s,transform .2s;width:100%;font-size:1em}button[type=submit][_ngcontent-%COMP%]:hover{background-color:#0056b3;transform:translateY(-2px)}div[_ngcontent-%COMP%]{margin-bottom:20px}div[_ngcontent-%COMP%]   *[_ngcontent-%COMP%]   ngIf[_ngcontent-%COMP%]{margin-bottom:20px}']})};var oe=class r{constructor(t,e){this.authService=t;this.router=e}canActivate(t,e){return this.authService.getUser().pipe(U(i=>i&&(i.role==="administrador"||i.role==="paciente")?!0:(this.router.navigate(["/bienvenida"]),console.log("Acceso denegado: no es administrador ni paciente"),!1)))}static \u0275fac=function(e){return new(e||r)(M(w),M($))};static \u0275prov=V({token:r,factory:r.\u0275fac,providedIn:"root"})};var P=W(Y());var re=class r{constructor(t){this.turnoService=t}usuarioSeleccionado=null;disponibilidadSemana={lunes:{horaInicio:"",horaFin:""},martes:{horaInicio:"",horaFin:""},mi\u00E9rcoles:{horaInicio:"",horaFin:""},jueves:{horaInicio:"",horaFin:""},viernes:{horaInicio:"",horaFin:""},s\u00E1bado:{horaInicio:"",horaFin:""},domingo:{horaInicio:"",horaFin:""}};horariosClinica={lunes:{apertura:"08:00",cierre:"19:00"},martes:{apertura:"08:00",cierre:"19:00"},mi\u00E9rcoles:{apertura:"08:00",cierre:"19:00"},jueves:{apertura:"08:00",cierre:"19:00"},viernes:{apertura:"08:00",cierre:"19:00"},s\u00E1bado:{apertura:"08:00",cierre:"14:00"},domingo:{apertura:null,cierre:null}};mostrarUsuario(t){this.usuarioSeleccionado=t}esHorarioValido(t){let e=parseInt(t.split(":")[1],10);return e===0||e===30}guardarDisponibilidad(){return u(this,null,function*(){if(!this.usuarioSeleccionado){P.default.fire("Error","Por favor, selecciona un especialista.","error");return}for(let t in this.disponibilidadSemana){let e=this.disponibilidadSemana[t],i=this.horariosClinica[t];if(e.horaInicio&&!this.esHorarioValido(e.horaInicio)||e.horaFin&&!this.esHorarioValido(e.horaFin)){P.default.fire("Error",`Los horarios de ${t} deben ser en intervalos de media hora (ej. 08:00 o 08:30).`,"error");return}if(i.apertura&&i.cierre){if(e.horaInicio<i.apertura||e.horaInicio>i.cierre||e.horaFin<i.apertura||e.horaFin>i.cierre){P.default.fire("Error",`El horario de ${t} debe estar entre ${i.apertura} y ${i.cierre}.`,"error");return}if(e.horaInicio>=e.horaFin){P.default.fire("Error",`En ${t}, la hora de inicio debe ser anterior a la hora de fin.`,"error");return}}else if(e.horaInicio||e.horaFin){P.default.fire("Error",`El d\xEDa ${t} est\xE1 cerrado, no debe haber horarios de disponibilidad.`,"error");return}}try{yield this.turnoService.guardarDisponibilidad(this.usuarioSeleccionado.uid,this.disponibilidadSemana),this.generarTurnosProximos15Dias(),P.default.fire("\xC9xito","Disponibilidad guardada correctamente.","success")}catch(t){console.error("Error al guardar la disponibilidad:",t),P.default.fire("Error","No se pudo guardar la disponibilidad.","error")}})}generarTurnosProximos15Dias(){return u(this,null,function*(){if(console.log("entramos a la creacion de turnos"),!this.usuarioSeleccionado){P.default.fire("Error","Por favor, selecciona un especialista.","error");return}let t=yield this.turnoService.obtenerDisponibilidad(this.usuarioSeleccionado.uid);if(!t){P.default.fire("Error","No se encontr\xF3 disponibilidad para el especialista seleccionado.","error");return}let e=[],i=new Date;for(let a=0;a<15;a++){let c=new Date(i);c.setDate(i.getDate()+a);let d=this.obtenerNombreDia(c);if(t[d]){let f=t[d];if(f.horaInicio&&f.horaFin){let I=f.horaInicio;for(;I<f.horaFin;){let y=this.sumarMinutos(I,30);y<=f.horaFin&&e.push({especialista_id:this.usuarioSeleccionado.uid,fecha:c.toISOString().split("T")[0],hora_inicio:I,hora_fin:y,estado:"disponible"}),I=y}}}}try{yield this.turnoService.guardarTurnos(e),P.default.fire("\xC9xito","Turnos generados para los pr\xF3ximos 15 d\xEDas.","success")}catch(a){console.error("Error al generar los turnos:",a),P.default.fire("Error","No se pudieron generar los turnos.","error")}})}obtenerNombreDia(t){return["domingo","lunes","martes","mi\xE9rcoles","jueves","viernes","s\xE1bado"][t.getDay()]}sumarMinutos(t,e){let[i,a]=t.split(":").map(Number),c=new Date;c.setHours(i,a+e);let d=String(c.getHours()).padStart(2,"0"),f=String(c.getMinutes()).padStart(2,"0");return`${d}:${f}`}static \u0275fac=function(e){return new(e||r)(v(k))};static \u0275cmp=O({type:r,selectors:[["app-gestion-horarios"]],decls:0,vars:0,template:function(e,i){},styles:['@charset "UTF-8";form[_ngcontent-%COMP%]{max-width:800px;margin:20px auto;padding:30px;border:2px solid #007bff;border-radius:15px;background-color:#e0f7fa;box-shadow:0 4px 20px #0003}label[_ngcontent-%COMP%]{font-weight:700;margin-bottom:5px;display:block;color:#007bff}.horarios[_ngcontent-%COMP%]{display:flex;gap:15px}input[type=time][_ngcontent-%COMP%]{width:48%;padding:12px;border:1px solid #007bff;border-radius:6px;font-size:16px;box-sizing:border-box;background-color:#f1f1f1;transition:border-color .3s,background-color .3s}input[type=time][_ngcontent-%COMP%]:focus{border-color:#0056b3;outline:none;background-color:#fff}button[type=submit][_ngcontent-%COMP%]{background-color:#007bff;color:#fff;padding:12px 15px;border:none;border-radius:6px;cursor:pointer;transition:background-color .3s,transform .2s;width:100%;font-size:1em}button[type=submit][_ngcontent-%COMP%]:hover{background-color:#0056b3;transform:translateY(-2px)}div[_ngcontent-%COMP%]{margin-bottom:20px}']})};var L=W(Y());function Le(r,t){if(r&1){let e=x();o(0,"div")(1,"input",1),g("change",function(a){_(e);let c=m();return E(c.onEspecialidadChange(a))}),n(),s(2),n()}if(r&2){let e=t.$implicit;l(),p("value",e.nombre),l(),N(" ",e.nombre,`
`)}}function Ue(r,t){if(r&1){let e=x();o(0,"div")(1,"input",2),g("change",function(a){let c=_(e).$implicit,d=m();return E(d.onEspecialistaChange(a,c))}),n(),s(2),n()}if(r&2){let e=t.$implicit;l(),p("value",e.uid),l(),A(" ",e.nombre," ",e.apellido,`
`)}}function qe(r,t){if(r&1){let e=x();o(0,"button",5),g("click",function(){_(e);let a=m().$implicit,c=m();return E(c.cancelarTurno(a))}),s(1," Cancelar Turno "),n()}}function We(r,t){r&1&&(o(0,"button",6),s(1," no acciones "),n())}function Ye(r,t){if(r&1&&(o(0,"tr")(1,"td"),s(2),n(),o(3,"td"),s(4),n(),o(5,"td"),s(6),n(),o(7,"td"),s(8),n(),o(9,"td"),s(10),n(),o(11,"td"),s(12),n(),o(13,"td"),s(14),n(),o(15,"td"),s(16),n(),o(17,"td"),C(18,qe,2,0,"button",3)(19,We,2,0,"button",4),n()()),r&2){let e=t.$implicit,i=m();l(2),h(e.dni),l(2),h(e.paciente),l(2),h(e.obraSocial),l(2),h(i.nombreEspecialista),l(2),h(e.especialidad),l(2),h(e.fecha),l(2),A("",e.hora_inicio," - ",e.hora_fin,""),l(2),h(e.estado),l(2),p("ngIf",e.estado==="solicitado"),l(),p("ngIf",e.estado!=="solicitado")}}var se=class r{constructor(t,e,i){this.turnoService=t;this.especialidadService=e;this.especialistaService=i}especialidades=[];especialistas=[];horarios=[];nombreEspecialista;especialidadSeleccionada="";ngOnInit(){this.cargarEspecialidades()}cargarEspecialidades(){return u(this,null,function*(){this.especialidades=yield this.especialidadService.getEspecialidades()})}onEspecialidadChange(t){return u(this,null,function*(){let e=t.target;if(this.especialidadSeleccionada=e.value,this.especialidadSeleccionada)try{this.especialistas=yield this.especialistaService.getEspecialistasPorEspecialidad(this.especialidadSeleccionada),this.horarios=[]}catch{L.default.fire("Error","No se pudieron cargar los especialistas","error")}else this.especialistas=[],this.horarios=[]})}onEspecialistaChange(t,e){return u(this,null,function*(){let a=t.target.value;if(a){this.nombreEspecialista=`${e.nombre} ${e.apellido}`;try{let c=yield this.turnoService.obtenerTurnosDisponiblesEspecialista(a);this.horarios=c.filter(d=>d.especialidad===this.especialidadSeleccionada),this.horarios.sort((d,f)=>new Date(d.fecha).getTime()-new Date(f.fecha).getTime())}catch{L.default.fire("Error","No se pudieron cargar los turnos","error")}}else this.horarios=[]})}cancelarTurno(t){return u(this,null,function*(){if(["Aceptado","Realizado","Rechazado"].includes(t.estado)){L.default.fire("Aviso","No se puede cancelar un turno aceptado, realizado o rechazado","info");return}let{isConfirmed:e,value:i}=yield L.default.fire({title:"\xBFEst\xE1s seguro de cancelar el turno?",text:"Por favor, ingresa el motivo de la cancelaci\xF3n",input:"textarea",inputPlaceholder:"Escribe aqu\xED el motivo...",inputAttributes:{"aria-label":"Motivo de cancelaci\xF3n"},confirmButtonText:"Cancelar turno",showCancelButton:!0,cancelButtonText:"Volver",inputValidator:a=>a?null:"El motivo es requerido para cancelar el turno"});if(e&&i)try{yield this.turnoService.cancelarTurno(t.id,i),L.default.fire("Cancelado","El turno ha sido cancelado con \xE9xito","success"),yield this.onEspecialistaChange({target:{value:t.especialistaId}},{nombre:t.nombreEspecialista,apellido:t.apellidoEspecialista})}catch{L.default.fire("Error","No se pudo cancelar el turno","error")}})}static \u0275fac=function(e){return new(e||r)(v(k),v(q),v(F))};static \u0275cmp=O({type:r,selectors:[["app-gestionar-turnos"]],decls:31,vars:3,consts:[[4,"ngFor","ngForOf"],["type","radio","name","especialidad",3,"change","value"],["type","radio","name","especialista",3,"change","value"],["class","cancelar",3,"click",4,"ngIf"],["class","no-accion","disabled","",4,"ngIf"],[1,"cancelar",3,"click"],["disabled","",1,"no-accion"]],template:function(e,i){e&1&&(o(0,"h2"),s(1,"Listado de Turnos"),n(),o(2,"label"),s(3,"Especialidad:"),n(),C(4,Le,3,2,"div",0),o(5,"label"),s(6,"Especialista:"),n(),C(7,Ue,3,3,"div",0),o(8,"table")(9,"thead")(10,"tr")(11,"th"),s(12,"DNI"),n(),o(13,"th"),s(14,"Paciente"),n(),o(15,"th"),s(16,"Obra Social"),n(),o(17,"th"),s(18,"Especialista"),n(),o(19,"th"),s(20,"Especialidad"),n(),o(21,"th"),s(22,"Fecha"),n(),o(23,"th"),s(24,"Horario"),n(),o(25,"th"),s(26,"Estado"),n(),o(27,"th"),s(28,"Acciones"),n()()(),o(29,"tbody"),C(30,Ye,20,11,"tr",0),n()()),e&2&&(l(4),p("ngForOf",i.especialidades),l(3),p("ngForOf",i.especialistas),l(23),p("ngForOf",i.horarios))},dependencies:[z,R],styles:['@charset "UTF-8";h2[_ngcontent-%COMP%]{color:#154360;text-align:center;margin-bottom:1rem;font-weight:700;font-size:1.5rem}label[_ngcontent-%COMP%]{font-weight:700;color:#154360;margin-right:.5rem}select[_ngcontent-%COMP%]{padding:.5rem;border-radius:4px;border:1px solid #D5D8DC;margin-bottom:1rem;margin-right:1rem;outline:none;transition:border-color .3s ease}select[_ngcontent-%COMP%]:focus{border-color:#154360}table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;background-color:#fff;box-shadow:0 4px 8px #0000001a;margin:0 auto;border-radius:8px;overflow:hidden}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{padding:1rem;text-align:left}thead[_ngcontent-%COMP%]{background-color:#154360;color:#fff}thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-weight:700;text-transform:uppercase;letter-spacing:.05em}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{transition:background-color .3s ease,transform .2s ease}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#f2f3f4}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#d5e8e8;transform:scale(1.01)}tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-bottom:1px solid #F2F3F4}button[_ngcontent-%COMP%]{padding:.5rem 1rem;font-size:.9rem;border:none;border-radius:4px;color:#fff;cursor:pointer;transition:background-color .3s ease,transform .2s ease;width:100%}button.no-accion[_ngcontent-%COMP%]{background-color:#b0e915}button.cancelar[_ngcontent-%COMP%]{background-color:#c0392b}button.cancelar[_ngcontent-%COMP%]:hover{background-color:#a93226;transform:scale(1.05)}td.estado[_ngcontent-%COMP%]{font-weight:700;color:#1e8449}td.estado.inhabilitado[_ngcontent-%COMP%]{color:#c0392b}']})};var b=W(Y());function Qe(r,t){if(r&1){let e=x();o(0,"div")(1,"input",1),g("change",function(a){_(e);let c=m();return E(c.onEspecialidadChange(a))}),n(),s(2),n()}if(r&2){let e=t.$implicit;l(),p("value",e),l(),N(" ",e,`
`)}}function Je(r,t){if(r&1){let e=x();o(0,"div")(1,"input",2),g("change",function(a){let c=_(e).$implicit,d=m();return E(d.onPacienteChange(a,c))}),n(),s(2),n()}if(r&2){let e=t.$implicit;l(),p("value",e.uid),l(),A(" ",e.nombre," ",e.apellido,`
`)}}function Ke(r,t){if(r&1){let e=x();o(0,"button",7),g("click",function(){_(e);let a=m().$implicit,c=m();return E(c.cancelarTurno(a))}),s(1," Cancelar Turno "),n()}}function Xe(r,t){if(r&1){let e=x();o(0,"button",8),g("click",function(){_(e);let a=m().$implicit,c=m();return E(c.aceptarTurno(a))}),s(1," aceptar turno "),n()}}function Ze(r,t){if(r&1){let e=x();o(0,"button",9),g("click",function(){_(e);let a=m().$implicit,c=m();return E(c.finalizarTurno(a))}),s(1," finalizar turno "),n()}}function et(r,t){if(r&1){let e=x();o(0,"button",10),g("click",function(){_(e);let a=m().$implicit,c=m();return E(c.verResenaTurno(a))}),s(1," ver rese\xF1a "),n()}}function tt(r,t){if(r&1&&(o(0,"tr")(1,"td"),s(2),n(),o(3,"td"),s(4),n(),o(5,"td"),s(6),n(),o(7,"td"),s(8),n(),o(9,"td"),s(10),n(),o(11,"td"),s(12),n(),o(13,"td"),s(14),n(),o(15,"td"),s(16),n(),o(17,"td"),C(18,Ke,2,0,"button",3)(19,Xe,2,0,"button",4)(20,Ze,2,0,"button",5)(21,et,2,0,"button",6),n()()),r&2){let e=t.$implicit,i=m();l(2),h(e.dni),l(2),h(i.nombrePaciente),l(2),h(e.obraSocial),l(2),h(e.especialista),l(2),h(i.especialidadSeleccionada),l(2),h(e.fecha),l(2),A("",e.hora_inicio," - ",e.hora_fin,""),l(2),h(e.estado),l(2),p("ngIf",e.estado==="solicitado"),l(),p("ngIf",e.estado==="solicitado"),l(),p("ngIf",e.estado==="aceptado"),l(),p("ngIf",e.estado==="realizado")}}var ce=class r{constructor(t,e,i){this.turnoService=t;this.especialistaService=e;this.authenticationService=i}especialidades=[];pacientes=[];horarios=[];nombrePaciente="";especialidadSeleccionada="";especialistaIniciado;pacienteSeleccionadoId="";ngOnInit(){this.authenticationService.getUser().subscribe(t=>{t?(this.especialistaIniciado=t,this.cargarPacientes(t.uid),this.cargarEspecialidades()):b.default.fire("Error","No se encontr\xF3 el usuario","error")})}cargarPacientes(t){return u(this,null,function*(){try{this.pacientes=yield this.especialistaService.getPacientesUnicosPorEspecialista(t),console.log("Pacientes cargados:",this.pacientes)}catch(e){console.error("Error cargando pacientes:",e),b.default.fire("Error","No se pudieron cargar los pacientes","error")}})}cargarEspecialidades(){return u(this,null,function*(){this.especialistaIniciado&&this.especialistaIniciado.especialidades?(this.especialidades=this.especialistaIniciado.especialidades,console.log("Especialidades cargadas:",this.especialidades)):(this.especialidades=[],b.default.fire("Error","No se encontraron especialidades para este especialista","error"))})}onEspecialidadChange(t){return u(this,null,function*(){let e=t.target;if(this.especialidadSeleccionada=e.value,this.especialidadSeleccionada)try{this.pacientes=yield this.especialistaService.getPacientesUnicosPorEspecialidad(this.especialistaIniciado.uid,this.especialidadSeleccionada),this.horarios=[]}catch{b.default.fire("Error","No se pudieron cargar los pacientes","error")}else this.pacientes=[],this.horarios=[]})}onPacienteChange(t,e){return u(this,null,function*(){let i=t.target;if(this.pacienteSeleccionadoId=i.value,this.pacienteSeleccionadoId){this.nombrePaciente=`${e.nombre} ${e.apellido}`;try{let a=yield this.turnoService.obtenerTurnosDisponiblesPaciente(this.pacienteSeleccionadoId);this.horarios=a.filter(c=>c.especialidad===this.especialidadSeleccionada),this.horarios.sort((c,d)=>new Date(c.fecha).getTime()-new Date(d.fecha).getTime())}catch{b.default.fire("Error","No se pudieron cargar los turnos","error")}}else this.horarios=[]})}cancelarTurno(t){return u(this,null,function*(){if(["Aceptado","Realizado","Rechazado"].includes(t.estado)){b.default.fire("Aviso","No se puede cancelar un turno aceptado, realizado o rechazado","info");return}let{isConfirmed:e,value:i}=yield b.default.fire({title:"\xBFEst\xE1s seguro de cancelar el turno?",text:"Por favor, ingresa el motivo de la cancelaci\xF3n",input:"textarea",inputPlaceholder:"Escribe aqu\xED el motivo...",inputAttributes:{"aria-label":"Motivo de cancelaci\xF3n"},confirmButtonText:"Cancelar turno",showCancelButton:!0,cancelButtonText:"Volver",inputValidator:a=>a?null:"El motivo es requerido para cancelar el turno"});if(e&&i)try{yield this.turnoService.cancelarTurno(t.id,i),b.default.fire("Cancelado","El turno ha sido cancelado con \xE9xito","success"),this.onPacienteChange({target:{value:this.pacienteSeleccionadoId}},{nombre:this.nombrePaciente})}catch{b.default.fire("Error","No se pudo cancelar el turno","error")}})}aceptarTurno(t){return u(this,null,function*(){if(["Aceptado","Realizado","Rechazado"].includes(t.estado)){b.default.fire("Aviso","No se puede cancelar un turno aceptado, realizado o rechazado","info");return}let{isConfirmed:e}=yield b.default.fire({title:"\xBFEst\xE1s seguro de aceptar el turno?",confirmButtonText:"aceptar turno",showCancelButton:!0,cancelButtonText:"Volver"});if(e)try{yield this.turnoService.aceptarTurno(t.id),b.default.fire("aceptado","El turno ha sido aceptado con \xE9xito","success")}catch{b.default.fire("Error","No se pudo aceptar el turno","error")}})}finalizarTurno(t){return u(this,null,function*(){if(t.estado!=="aceptado"){b.default.fire("Aviso","Solo puedes finalizar un turno aceptado","info");return}let{isConfirmed:e,value:i}=yield b.default.fire({title:"Finalizar Turno y Registrar Historia Cl\xEDnica",html:`
        <label for="diagnostico">Diagn\xF3stico:</label>
        <textarea id="diagnostico" rows="2" style="width: 100%;" placeholder="Escribe aqu\xED el diagn\xF3stico..."></textarea>
        
        <label for="rese\xF1a">Rese\xF1a:</label>
        <textarea id="rese\xF1a" rows="2" style="width: 100%;" placeholder="Escribe aqu\xED la rese\xF1a..."></textarea>
        
        <label for="altura">Altura (cm):</label>
        <input type="number" id="altura" style="width: 100%;" placeholder="Altura en cm" />
        
        <label for="peso">Peso (kg):</label>
        <input type="number" id="peso" style="width: 100%;" placeholder="Peso en kg" />
        
        <label for="temperatura">Temperatura (\xB0C):</label>
        <input type="number" id="temperatura" style="width: 100%;" placeholder="Temperatura en \xB0C" />
        
        <label for="presion">Presi\xF3n:</label>
        <input type="text" id="presion" style="width: 100%;" placeholder="Ej. 120/80" />
        
        <label>Datos Din\xE1micos:</label>
        <div id="datosDinamicos">
          <input type="text" placeholder="Clave" style="width: 48%; display: inline-block;" id="clave1" />
          <input type="text" placeholder="Valor" style="width: 48%; display: inline-block;" id="valor1" />
          <br />
          <input type="text" placeholder="Clave" style="width: 48%; display: inline-block;" id="clave2" />
          <input type="text" placeholder="Valor" style="width: 48%; display: inline-block;" id="valor2" />
          <br />
          <input type="text" placeholder="Clave" style="width: 48%; display: inline-block;" id="clave3" />
          <input type="text" placeholder="Valor" style="width: 48%; display: inline-block;" id="valor3" />
        </div>
      `,focusConfirm:!1,preConfirm:()=>({diagnostico:document.getElementById("diagnostico").value,rese\u00F1a:document.getElementById("rese\xF1a").value,historiaClinica:{altura:+document.getElementById("altura").value,peso:+document.getElementById("peso").value,temperatura:+document.getElementById("temperatura").value,presion:document.getElementById("presion").value,datosDinamicos:[{clave:document.getElementById("clave1").value,valor:document.getElementById("valor1").value},{clave:document.getElementById("clave2").value,valor:document.getElementById("valor2").value},{clave:document.getElementById("clave3").value,valor:document.getElementById("valor3").value}].filter(a=>a.clave&&a.valor)}}),confirmButtonText:"Finalizar Turno",showCancelButton:!0,cancelButtonText:"Cancelar"});if(e){let{diagnostico:a,rese\u00F1a:c,historiaClinica:d}=i;if(!a||!c||!d.altura||!d.peso||!d.temperatura||!d.presion){b.default.fire("Error","Todos los campos son obligatorios","error");return}if(d.temperatura<30||d.temperatura>45){b.default.fire("Error","La temperatura debe estar entre 30\xB0C y 45\xB0C","error");return}if(d.altura<30||d.altura>250){b.default.fire("Error","La altura debe estar entre 30 cm y 250 cm","error");return}if(d.peso<3||d.peso>500){b.default.fire("Error","El peso debe estar entre 3 kg y 500 kg","error");return}try{yield this.turnoService.finalizarTurno(t.id,{diagnostico:a,rese\u00F1a:c}),yield this.turnoService.finalizarTurnoHistoriaClinica(t,{historiaClinica:d}),b.default.fire("Finalizado","El turno ha sido finalizado con \xE9xito","success"),this.onPacienteChange({target:{value:this.pacienteSeleccionadoId}},{nombre:this.nombrePaciente})}catch{b.default.fire("Error","No se pudo finalizar el turno","error")}}})}verResenaTurno(t){return u(this,null,function*(){if(t.estado!=="realizado"){b.default.fire("Aviso","Solo puedes ver la rese\xF1a de un turno realizado","info");return}try{yield this.turnoService.obtenerRese\u00F1aTurno(t.id)}catch(e){console.error("Error al obtener rese\xF1a:",e),b.default.fire("Error","No se pudo obtener la rese\xF1a","error")}})}static \u0275fac=function(e){return new(e||r)(v(k),v(F),v(w))};static \u0275cmp=O({type:r,selectors:[["app-turnos-especialista"]],decls:31,vars:3,consts:[[4,"ngFor","ngForOf"],["type","radio","name","especialidad",3,"change","value"],["type","radio","name","paciente",3,"change","value"],["class","cancelar",3,"click",4,"ngIf"],["class","aceptar",3,"click",4,"ngIf"],["class","finalizar",3,"click",4,"ngIf"],["class","realizado",3,"click",4,"ngIf"],[1,"cancelar",3,"click"],[1,"aceptar",3,"click"],[1,"finalizar",3,"click"],[1,"realizado",3,"click"]],template:function(e,i){e&1&&(o(0,"h2"),s(1,"Listado de Turnos"),n(),o(2,"label"),s(3,"Especialidad:"),n(),C(4,Qe,3,2,"div",0),o(5,"label"),s(6,"Pacientes:"),n(),C(7,Je,3,3,"div",0),o(8,"table")(9,"thead")(10,"tr")(11,"th"),s(12,"DNI"),n(),o(13,"th"),s(14,"Paciente"),n(),o(15,"th"),s(16,"Obra Social"),n(),o(17,"th"),s(18,"Especialista"),n(),o(19,"th"),s(20,"Especialidad"),n(),o(21,"th"),s(22,"Fecha"),n(),o(23,"th"),s(24,"Horario"),n(),o(25,"th"),s(26,"Estado"),n(),o(27,"th"),s(28,"Acciones"),n()()(),o(29,"tbody"),C(30,tt,22,13,"tr",0),n()()),e&2&&(l(4),p("ngForOf",i.especialidades),l(3),p("ngForOf",i.pacientes),l(23),p("ngForOf",i.horarios))},dependencies:[z,R],styles:['@charset "UTF-8";h2[_ngcontent-%COMP%]{color:#154360;text-align:center;margin-bottom:1rem;font-weight:700;font-size:1.5rem}label[_ngcontent-%COMP%]{font-weight:700;color:#154360;margin-right:.5rem}select[_ngcontent-%COMP%]{padding:.5rem;border-radius:4px;border:1px solid #D5D8DC;margin-bottom:1rem;margin-right:1rem;outline:none;transition:border-color .3s ease}select[_ngcontent-%COMP%]:focus{border-color:#154360}table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;background-color:#fff;box-shadow:0 4px 8px #0000001a;margin:0 auto;border-radius:8px;overflow:hidden}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{padding:1rem;text-align:left}thead[_ngcontent-%COMP%]{background-color:#154360;color:#fff}thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-weight:700;text-transform:uppercase;letter-spacing:.05em}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{transition:background-color .3s ease,transform .2s ease}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#f2f3f4}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#d5e8e8;transform:scale(1.01)}tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-bottom:1px solid #F2F3F4}button[_ngcontent-%COMP%]{padding:.5rem 1rem;font-size:.9rem;border:none;border-radius:4px;color:#fff;cursor:pointer;transition:background-color .3s ease,transform .2s ease;width:100%}button.aceptar[_ngcontent-%COMP%], button.finalizar[_ngcontent-%COMP%], button.realizado[_ngcontent-%COMP%]{background-color:#b0e915}button.aceptar[_ngcontent-%COMP%]:hover, button.finalizar[_ngcontent-%COMP%]:hover, button.realizado[_ngcontent-%COMP%]:hover{background-color:#82b825;transform:scale(1.05)}button.cancelar[_ngcontent-%COMP%]{background-color:#c0392b}button.cancelar[_ngcontent-%COMP%]:hover{background-color:#a93226;transform:scale(1.05)}td.estado[_ngcontent-%COMP%]{font-weight:700;color:#1e8449}td.estado.inhabilitado[_ngcontent-%COMP%]{color:#c0392b}']})};var le=class r{constructor(t,e){this.authService=t;this.router=e}canActivate(t,e){return this.authService.getUser().pipe(U(i=>i&&i.role==="especialista"?!0:(this.router.navigate(["/bienvenida"]),console.log("no es especialista verifica las cosas bien"),!1)))}static \u0275fac=function(e){return new(e||r)(M(w),M($))};static \u0275prov=V({token:r,factory:r.\u0275fac,providedIn:"root"})};var S=W(Y());function it(r,t){if(r&1){let e=x();o(0,"div")(1,"input",1),g("change",function(a){_(e);let c=m();return E(c.onEspecialidadChange(a))}),n(),s(2),n()}if(r&2){let e=t.$implicit;l(),p("value",e.nombre),l(),N(" ",e.nombre,`
`)}}function nt(r,t){if(r&1){let e=x();o(0,"div")(1,"input",2),g("change",function(a){let c=_(e).$implicit,d=m();return E(d.onEspecialistaChange(a,c))}),n(),s(2),n()}if(r&2){let e=t.$implicit;l(),p("value",e.uid),l(),A(" ",e.nombre," ",e.apellido,`
`)}}function at(r,t){if(r&1){let e=x();o(0,"button",7),g("click",function(){_(e);let a=m().$implicit,c=m();return E(c.cancelarTurno(a))}),s(1," Cancelar Turno "),n()}}function ot(r,t){if(r&1){let e=x();o(0,"button",8),g("click",function(){_(e);let a=m().$implicit,c=m();return E(c.verResenaTurno(a))}),s(1," ver rese\xF1a "),n()}}function rt(r,t){if(r&1){let e=x();o(0,"button",9),g("click",function(){_(e);let a=m().$implicit,c=m();return E(c.mostrarEncuesta(a))}),s(1),n()}if(r&2){let e=m().$implicit;p("disabled",e.encuesta),l(),N(" ",e.encuesta?"Encuesta Realizada":"Realizar Encuesta"," ")}}function st(r,t){if(r&1){let e=x();o(0,"button",10),g("click",function(){_(e);let a=m().$implicit,c=m();return E(c.calificarAtencion(a))}),s(1),n()}if(r&2){let e=m().$implicit;p("disabled",e.calificacionTurno),l(),N(" ",e.calificacionTurno?"Calificaci\xF3n Realizada":"Calificar Atenci\xF3n"," ")}}function ct(r,t){if(r&1&&(o(0,"tr")(1,"td"),s(2),n(),o(3,"td"),s(4),n(),o(5,"td"),s(6),n(),o(7,"td"),s(8),n(),o(9,"td"),s(10),n(),o(11,"td"),s(12),n(),o(13,"td"),s(14),n(),o(15,"td"),s(16),n(),o(17,"td"),C(18,at,2,0,"button",3)(19,ot,2,0,"button",4)(20,rt,2,2,"button",5)(21,st,2,2,"button",6),n()()),r&2){let e=t.$implicit,i=m();l(2),h(e.dni),l(2),h(e.paciente),l(2),h(e.obraSocial),l(2),h(i.nombreEspecialista),l(2),h(e.especialidad),l(2),h(e.fecha),l(2),A("",e.hora_inicio," - ",e.hora_fin,""),l(2),h(e.estado),l(2),p("ngIf",e.estado==="solicitado"),l(),p("ngIf",e.estado==="realizado"),l(),p("ngIf",e.estado==="realizado"),l(),p("ngIf",e.estado==="realizado")}}var de=class r{constructor(t,e,i,a){this.turnoService=t;this.especialidadService=e;this.especialistaService=i;this.authenticationService=a}especialidades=[];especialistas=[];horarios=[];nombreEspecialista;especialidadSeleccionada="";encuesta={};pacienteActual="";ngOnInit(){this.cargarEspecialidades(),this.authenticationService.getUser().subscribe(t=>{t?this.pacienteActual=t:S.default.fire("Error","No se encontr\xF3 el usuario","error")})}cargarEspecialidades(){return u(this,null,function*(){this.especialidades=yield this.especialidadService.getEspecialidades()})}onEspecialidadChange(t){return u(this,null,function*(){let e=t.target;if(this.especialidadSeleccionada=e.value,this.especialidadSeleccionada)try{this.especialistas=yield this.especialistaService.getEspecialistasPorEspecialidad(this.especialidadSeleccionada),this.horarios=[]}catch{S.default.fire("Error","No se pudieron cargar los especialistas","error")}else this.especialistas=[],this.horarios=[]})}onEspecialistaChange(t,e){return u(this,null,function*(){let a=t.target.value;if(a){this.nombreEspecialista=`${e.nombre} ${e.apellido}`;try{let c=yield this.turnoService.obtenerTurnosDisponiblesPacienteEspecialista(this.pacienteActual.uid,a);this.horarios=c.filter(d=>d.especialidad===this.especialidadSeleccionada),this.horarios.sort((d,f)=>new Date(d.fecha).getTime()-new Date(f.fecha).getTime())}catch{S.default.fire("Error","No se pudieron cargar los turnos","error")}}else this.horarios=[]})}cancelarTurno(t){return u(this,null,function*(){if(["Aceptado","Realizado","Rechazado"].includes(t.estado)){S.default.fire("Aviso","No se puede cancelar un turno aceptado, realizado o rechazado","info");return}let{isConfirmed:e,value:i}=yield S.default.fire({title:"\xBFEst\xE1s seguro de cancelar el turno?",text:"Por favor, ingresa el motivo de la cancelaci\xF3n",input:"textarea",inputPlaceholder:"Escribe aqu\xED el motivo...",inputAttributes:{"aria-label":"Motivo de cancelaci\xF3n"},confirmButtonText:"Cancelar turno",showCancelButton:!0,cancelButtonText:"Volver",inputValidator:a=>a?null:"El motivo es requerido para cancelar el turno"});if(e&&i)try{yield this.turnoService.cancelarTurno(t.id,i),S.default.fire("Cancelado","El turno ha sido cancelado con \xE9xito","success"),yield this.onEspecialistaChange({target:{value:t.especialistaId}},{nombre:t.nombreEspecialista,apellido:t.apellidoEspecialista})}catch{S.default.fire("Error","No se pudo cancelar el turno","error")}})}verResenaTurno(t){return u(this,null,function*(){if(t.estado!=="realizado"){S.default.fire("Aviso","Solo puedes ver la rese\xF1a de un turno realizado","info");return}try{yield this.turnoService.obtenerRese\u00F1aTurno(t.id)}catch(e){console.error("Error al obtener rese\xF1a:",e),S.default.fire("Error","No se pudo obtener la rese\xF1a","error")}})}mostrarEncuesta(t){return u(this,null,function*(){S.default.fire({title:"Completar Encuesta",html:`
        <label for="pregunta1">\xBFC\xF3mo calificar\xEDas la atenci\xF3n del especialista?</label>
        <input type="text" id="pregunta1" class="swal2-input" placeholder="Tu respuesta aqu\xED">
        
        <label for="pregunta2">\xBFEst\xE1s satisfecho con la duraci\xF3n de tu consulta?</label>
        <input type="text" id="pregunta2" class="swal2-input" placeholder="Tu respuesta aqu\xED">
      `,focusConfirm:!1,preConfirm:()=>{let e=document.getElementById("pregunta1").value,i=document.getElementById("pregunta2").value;return(!e||!i)&&S.default.showValidationMessage("Por favor completa todas las preguntas"),{pregunta1:e,pregunta2:i}}}).then(e=>u(this,null,function*(){e.isConfirmed&&(this.encuesta={respuesta1:e.value.pregunta1,respuesta2:e.value.pregunta2},yield this.turnoService.guardarEncuesta(t.id,this.encuesta),S.default.fire("Gracias","Tus respuestas han sido guardadas","success"),yield this.onEspecialistaChange({target:{value:t.especialistaId}},{nombre:t.nombreEspecialista,apellido:t.apellidoEspecialista}))}))})}calificarAtencion(t){return u(this,null,function*(){if(t.estado!=="realizado"){S.default.fire("Aviso","Solo puedes calificar la atenci\xF3n de un turno realizado","info");return}let{value:e}=yield S.default.fire({title:"Calificar Atenci\xF3n",input:"textarea",inputPlaceholder:"Escribe aqu\xED tu comentario sobre la atenci\xF3n...",showCancelButton:!0,confirmButtonText:"Enviar Comentario",cancelButtonText:"Cancelar",inputValidator:i=>i?null:"El comentario es obligatorio"});e&&(yield this.turnoService.guardarCalificacion(t.id,e),S.default.fire("Gracias","Tu calificaci\xF3n ha sido guardada","success"),yield this.onEspecialistaChange({target:{value:t.especialistaId}},{nombre:t.nombreEspecialista,apellido:t.apellidoEspecialista}))})}static \u0275fac=function(e){return new(e||r)(v(k),v(q),v(F),v(w))};static \u0275cmp=O({type:r,selectors:[["app-turnos-pacientes"]],decls:31,vars:3,consts:[[4,"ngFor","ngForOf"],["type","radio","name","especialidad",3,"change","value"],["type","radio","name","especialista",3,"change","value"],["class","cancelar",3,"click",4,"ngIf"],["class","realizado",3,"click",4,"ngIf"],["class","encuesta",3,"disabled","click",4,"ngIf"],["class","calificacion",3,"disabled","click",4,"ngIf"],[1,"cancelar",3,"click"],[1,"realizado",3,"click"],[1,"encuesta",3,"click","disabled"],[1,"calificacion",3,"click","disabled"]],template:function(e,i){e&1&&(o(0,"h2"),s(1,"Listado de Turnos"),n(),o(2,"label"),s(3,"Especialidad:"),n(),C(4,it,3,2,"div",0),o(5,"label"),s(6,"Especialista:"),n(),C(7,nt,3,3,"div",0),o(8,"table")(9,"thead")(10,"tr")(11,"th"),s(12,"DNI"),n(),o(13,"th"),s(14,"Paciente"),n(),o(15,"th"),s(16,"Obra Social"),n(),o(17,"th"),s(18,"Especialista"),n(),o(19,"th"),s(20,"Especialidad"),n(),o(21,"th"),s(22,"Fecha"),n(),o(23,"th"),s(24,"Horario"),n(),o(25,"th"),s(26,"Estado"),n(),o(27,"th"),s(28,"Acciones"),n()()(),o(29,"tbody"),C(30,ct,22,13,"tr",0),n()()),e&2&&(l(4),p("ngForOf",i.especialidades),l(3),p("ngForOf",i.especialistas),l(23),p("ngForOf",i.horarios))},dependencies:[z,R],styles:['@charset "UTF-8";h2[_ngcontent-%COMP%]{color:#154360;text-align:center;margin-bottom:1rem;font-weight:700;font-size:1.5rem}label[_ngcontent-%COMP%]{font-weight:700;color:#154360;margin-right:.5rem}select[_ngcontent-%COMP%]{padding:.5rem;border-radius:4px;border:1px solid #D5D8DC;margin-bottom:1rem;margin-right:1rem;outline:none;transition:border-color .3s ease}select[_ngcontent-%COMP%]:focus{border-color:#154360}table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;background-color:#fff;box-shadow:0 4px 8px #0000001a;margin:0 auto;border-radius:8px;overflow:hidden}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{padding:1rem;text-align:left}thead[_ngcontent-%COMP%]{background-color:#154360;color:#fff}thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-weight:700;text-transform:uppercase;letter-spacing:.05em}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{transition:background-color .3s ease,transform .2s ease}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#f2f3f4}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#d5e8e8;transform:scale(1.01)}tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-bottom:1px solid #F2F3F4}button[_ngcontent-%COMP%]{padding:.5rem 1rem;font-size:.9rem;border:none;border-radius:4px;color:#fff;cursor:pointer;transition:background-color .3s ease,transform .2s ease;width:100%}button.realizado[_ngcontent-%COMP%], button.encuesta[_ngcontent-%COMP%], button.calificacion[_ngcontent-%COMP%]{margin-bottom:3px;background-color:#b0e915}button.realizado[_ngcontent-%COMP%]:hover, button.encuesta[_ngcontent-%COMP%]:hover, button.calificacion[_ngcontent-%COMP%]:hover{background-color:#82b825;transform:scale(1.05)}button.cancelar[_ngcontent-%COMP%]{background-color:#c0392b}button.cancelar[_ngcontent-%COMP%]:hover{background-color:#a93226;transform:scale(1.05)}td.estado[_ngcontent-%COMP%]{font-weight:700;color:#1e8449}td.estado.inhabilitado[_ngcontent-%COMP%]{color:#c0392b}']})};var pe=class r{constructor(t,e){this.authService=t;this.router=e}canActivate(t,e){return this.authService.getUser().pipe(U(i=>i&&i.role==="paciente"?!0:(this.router.navigate(["/bienvenida"]),console.log("no es paciente verifica las cosas bien"),!1)))}static \u0275fac=function(e){return new(e||r)(M(w),M($))};static \u0275prov=V({token:r,factory:r.\u0275fac,providedIn:"root"})};var lt=[{path:"solicitar-turno",component:ie,canActivate:[oe]},{path:"gestionar-horarios",component:re,canActivate:[he]},{path:"gestionar-turnos",component:se,canActivate:[he]},{path:"turnos-especialista",component:ce,canActivate:[le]},{path:"turnos-pacientes",component:de,canActivate:[pe]}],ue=class r{static \u0275fac=function(e){return new(e||r)};static \u0275mod=Z({type:r});static \u0275inj=X({imports:[fe.forChild(lt),fe]})};var Re=class r{static \u0275fac=function(e){return new(e||r)};static \u0275mod=Z({type:r});static \u0275inj=X({imports:[me,ue,ke,Ne,me,Oe]})};export{Re as SeccionTurnosModule};
