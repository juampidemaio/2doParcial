import{a as Ie}from"./chunk-JAYMRRFR.js";import{a as Qe,b as Je,c as Ke}from"./chunk-P66W2FTI.js";import{a as oe,b as j,c as ne,d as re,e as ze,f as je,g as ae,h as Ge,i as He,j as Be,k as Ue,l as Le,m as qe,n as We,o as Ye,p as Y,q as se}from"./chunk-KKPEPWNG.js";import{A as E,Aa as V,Ba as Te,Ca as I,E as S,Ea as Re,Fa as B,G as u,Ha as $e,I as s,Ia as P,J as a,K as te,L as C,M as g,N as f,O as _e,P as c,Q as b,R as q,S as H,T as Fe,U as Se,V as Ee,W as Ce,Z as Ae,a as T,aa as Ne,b as De,ba as ke,d as W,e as p,h as L,ka as R,l as A,la as $,m as Z,ma as Ve,na as xe,o as y,p as N,q as ee,qa as z,sa as ye,t as v,u as _,xa as ie,z as l,za as x}from"./chunk-2NKTPWVQ.js";var K=W(Y());var G=class r{constructor(t){this.firestore=t}getEspecialistasPorEspecialidad(t){return p(this,null,function*(){let e=x(this.firestore,"users"),o=(yield I(e)).docs.map(n=>T({id:n.id},n.data())).filter(n=>this.especialistaValido(n,t));return console.log("Especialistas filtrados:",o),o})}especialistaValido(t,e){return t.role==="especialista"&&t.especialidades.includes(e)}getPacientesUnicosPorEspecialidad(t,e){return p(this,null,function*(){let i=x(this.firestore,"Turnos"),o=yield I(i),n=new Set,d=[],m=o.docs.map(D=>{let X=D.data();return T({id:D.id},X)}).filter(D=>{let X=D.especialista_id===t,Oe=D.especialidad===e;return X&&Oe&&n.add(D.pacienteId),X&&Oe});console.log("Turnos solicitados:",m);let w=Array.from(n);return yield this.getPacientesPorIds(w)})}getPacientesUnicosPorEspecialista(t){return p(this,null,function*(){let e=x(this.firestore,"Turnos"),i=yield I(e),o=new Set,n=[],d=i.docs.map(O=>{let D=O.data();return T({id:O.id},D)}).filter(O=>{let D=O.especialista_id===t;return D&&O.pacienteId&&o.add(O.pacienteId),D});console.log("Turnos solicitados:",d);let m=Array.from(o);return yield this.getPacientesPorIds(m)})}getPacientesPorIds(t){return p(this,null,function*(){let e=x(this.firestore,"users"),i=[];for(let o of t)if(o){let n=Re(e,$e("uid","==",o));(yield I(n)).forEach(m=>{let w=m.data();i.push(T({id:m.id},w))})}else console.warn("ID de paciente es undefined, omitiendo este ID.");return i})}getHorariosPorEspecialista(t){return p(this,null,function*(){let e=x(this.firestore,"horarios"),i=yield I(e),o=yield this.getTurnosPorEspecialista(t);return i.docs.map(n=>{let d=n.data();return T({id:n.id},d)}).filter(n=>n.especialistaId===t&&this.isWithinNext15Days(n.fecha)&&!this.isHorarioOcupado(n,o))})}getTurnosPorEspecialista(t){return p(this,null,function*(){let e=x(this.firestore,"turnos");return(yield I(e)).docs.map(o=>{let n=o.data();return T({id:o.id},n)}).filter(o=>o.especialistaId===t)})}isHorarioOcupado(t,e){let i=new Date(t.fecha),o=new Date(i);return o.setMinutes(o.getMinutes()+30),e.some(n=>{let d=new Date(n.fecha),m=new Date(d);return m.setMinutes(m.getMinutes()+30),d<o&&m>i})}isWithinNext15Days(t){let e=new Date(t),i=new Date,o=new Date;return o.setDate(i.getDate()+15),e>=i&&e<=o}static \u0275fac=function(e){return new(e||r)(y(ie))};static \u0275prov=A({token:r,factory:r.\u0275fac,providedIn:"root"})};var Q=W(Y());var k=class r{constructor(t,e){this.firestore=t;this.authService=e}guardarDisponibilidad(t,e){return p(this,null,function*(){let i=V(x(this.firestore,"Disponibilidad"),t);yield B(i,{disponibilidad:e})})}guardarTurnos(t){return p(this,null,function*(){let e=x(this.firestore,"Turnos"),i=t.map(o=>{let n=V(e);return B(n,o)});yield Promise.all(i)})}obtenerTurnos(){return p(this,null,function*(){let t=x(this.firestore,"Turnos"),i=(yield I(t)).docs;return console.log("Turnos disponibles:",i),i})}obtenerTurnosDisponibles(t){return p(this,null,function*(){let e=x(this.firestore,"Turnos"),o=(yield I(e)).docs.map(n=>{let d=n.data();return T({id:n.id},d)}).filter(n=>{let d=n.especialista_id===t,m=n.estado==="disponible";return console.log(`Turno ID: ${n.id}, Especialista ID: ${n.especialista_id}, Estado: ${n.estado}, Coincide: ${d&&m}`),d&&m});return console.log("Turnos disponibles:",o),o})}obtenerTurnosDisponiblesEspecialista(t){return p(this,null,function*(){let e=x(this.firestore,"Turnos"),o=(yield I(e)).docs.map(n=>{let d=n.data();return T({id:n.id},d)}).filter(n=>{let d=n.especialista_id===t;return console.log(`Turno ID: ${n.id}, Especialista ID: ${n.especialista_id}`),d});return console.log("Turnos solicitados:",o),o})}obtenerTurnosDisponiblesPaciente(t){return p(this,null,function*(){let e=x(this.firestore,"Turnos"),o=(yield I(e)).docs.map(n=>{let d=n.data();return T({id:n.id},d)}).filter(n=>{let d=n.pacienteId===t;return console.log(`Turno ID: ${n.id}, Paciente ID: ${n.pacienteId}`),d});return console.log("Turnos solicitados:",o),o})}obtenerTurnosEspecialidad(t){return p(this,null,function*(){let e=x(this.firestore,"Turnos"),o=(yield I(e)).docs.map(n=>{let d=n.data();return T({id:n.id},d)}).filter(n=>{let d=n.especialidad===t;return console.log(`Turno ID: ${n.id}, especialidad : ${n.especialidad}`),d});return console.log("Turnos solicitados:",o),o})}obtenerDisponibilidad(t){return p(this,null,function*(){let e=V(this.firestore,`Disponibilidad/${t}`),i=yield Te(e);return i.exists()?i.data().disponibilidad:(console.log("No existe la disponibilidad para este especialista."),null)})}solicitarTurno(t,e){return p(this,null,function*(){let i=V(this.firestore,`Turnos/${t.horario}`);yield B(i,De(T({},t),{estado:"solicitado",pacienteId:e}),{merge:!0})})}cancelarTurno(t,e){return p(this,null,function*(){let i=V(this.firestore,`Turnos/${t}`);yield B(i,{estado:"cancelado",motivoCancelacion:e},{merge:!0})})}aceptarTurno(t){return p(this,null,function*(){let e=V(this.firestore,`Turnos/${t}`);yield B(e,{estado:"aceptado"},{merge:!0})})}finalizarTurno(o,n){return p(this,arguments,function*(t,{diagnostico:e,rese\u00F1a:i}){let d=V(this.firestore,`Turnos/${t}`);yield B(d,{estado:"realizado",rese\u00F1a:i,diagnostico:e},{merge:!0})})}obtenerRese\u00F1aTurno(t){return p(this,null,function*(){let e=V(this.firestore,`Turnos/${t}`);try{let i=yield Te(e);if(i.exists()){let o=i.data()?.rese\u00F1a;o?Q.default.fire("Rese\xF1a del Turno",o,"info"):Q.default.fire("Aviso","No hay rese\xF1a disponible para este turno","info")}else Q.default.fire("Error","El turno no existe","error")}catch(i){Q.default.fire("Error","No se pudo obtener la rese\xF1a","error"),console.error("Error al obtener rese\xF1a:",i)}})}static \u0275fac=function(e){return new(e||r)(y(ie),y(P))};static \u0275prov=A({token:r,factory:r.\u0275fac,providedIn:"root"})};function it(r,t){if(r&1&&(s(0,"option",12),c(1),a()),r&2){let e=t.$implicit;u("value",e.nombre),l(),b(e.nombre)}}function ot(r,t){if(r&1){let e=C();s(0,"option",13),g("nombreEspecialista",function(){let o=v(e).$implicit;return _(o)}),c(1),a()}if(r&2){let e=t.$implicit;u("value",e.uid),l(),b(e.nombre)}}function nt(r,t){if(r&1&&(s(0,"option",12),c(1),a()),r&2){let e=t.$implicit;u("value",e.id),l(),Fe("",e.fecha," - ",e.hora_inicio,"hs hasta ",e.hora_fin,"hs")}}function rt(r,t){if(r&1&&(s(0,"div")(1,"label",14),c(2,"Paciente:"),a(),te(3,"input",15),s(4,"label",16),c(5,"DNI:"),a(),te(6,"input",17),s(7,"label",18),c(8,"Obra Social:"),a(),te(9,"input",19),a()),r&2){let e=f();l(3),u("readonly",e.isAdmin),l(3),u("readonly",e.isAdmin),l(3),u("readonly",e.isAdmin)}}function at(r,t){if(r&1){let e=C();s(0,"app-listado-paciente",20),g("usuarioSeleccionado",function(o){v(e);let n=f();return _(n.setPacienteData(o))}),a()}}var le=class r{constructor(t,e,i,o,n,d){this.especialidadService=t;this.especialistaService=e;this.turnoService=i;this.authService=o;this.fb=n;this.router=d;this.turnoForm=this.fb.group({especialidad:["",j.required],especialista:["",j.required],horario:["",j.required],paciente:["",j.required],dni:["",[j.required,j.pattern(/^[0-9]{8,}$/)]],obraSocial:["",j.required]})}especialidades=[];especialistas=[];horarios=[];turnoForm;isAdmin=!1;isPaciente=!1;usuarioSeleccionado;obtenerIdPaciente;nombreEspecialista;ngOnInit(){this.cargarEspecialidades(),this.checkUserRole()}cargarEspecialidades(){return p(this,null,function*(){this.especialidades=yield this.especialidadService.getEspecialidades()})}checkUserRole(){return p(this,null,function*(){this.authService.getUser().subscribe(t=>{t&&(this.isAdmin=t.role==="administrador",this.isPaciente=t.role==="paciente")})})}setPacienteData(t){return p(this,null,function*(){this.usuarioSeleccionado=t,t&&this.turnoForm.patchValue({paciente:t.nombre,dni:t.dni,obraSocial:t.obraSocial,especialista:""})})}onEspecialidadChange(t){return p(this,null,function*(){let i=t.target.value;if(console.log("Nombre de especialidad seleccionada:",i),i)try{this.especialistas=yield this.especialistaService.getEspecialistasPorEspecialidad(i),console.log("Especialistas cargados:",this.especialistas)}catch(o){console.error("Error al cargar especialistas:",o),K.default.fire("Error","No se pudieron cargar los especialistas","error")}else this.especialistas=[]})}onEspecialistaChange(t){return p(this,null,function*(){let i=t.target.value;if(console.log("ID del especialista seleccionado:",i),i)try{let o=this.especialistas.find(n=>n.uid===i);o&&(this.nombreEspecialista=`${o.nombre} ${o.apellido}`),this.horarios=yield this.turnoService.obtenerTurnosDisponibles(i),this.horarios.sort((n,d)=>{let m=new Date(n.fecha),w=new Date(d.fecha);return m.getTime()!==w.getTime()?m.getTime()-w.getTime():n.hora_inicio.localeCompare(d.hora_inicio)}),console.log("Turnos disponibles cargados:",this.horarios)}catch(o){console.error("Error al cargar turnos:",o),K.default.fire("Error","No se pudieron cargar los turnos","error")}else this.horarios=[]})}solicitarTurno(){return p(this,null,function*(){try{this.authService.getUser().subscribe(e=>{e.role==="paciente"?(this.obtenerIdPaciente=e.uid,this.turnoForm.patchValue({especialista:this.nombreEspecialista,paciente:e.nombre,dni:e.dni,obraSocial:e.obraSocial})):(this.obtenerIdPaciente=this.usuarioSeleccionado.uid,this.turnoForm.patchValue({especialista:this.nombreEspecialista}))});let t=this.turnoForm.value;yield this.turnoService.solicitarTurno(t,this.obtenerIdPaciente),K.default.fire("Registro exitoso","El turno ha sido solicitado correctamente","success"),this.router.navigate(["/bienvenida"])}catch(t){console.error("Error al solicitar el turno:",t),K.default.fire("Error","No se pudo solicitar el turno. Int\xE9ntalo nuevamente.","error")}})}static \u0275fac=function(e){return new(e||r)(E(se),E(G),E(k),E(P),E(qe),E(z))};static \u0275cmp=N({type:r,selectors:[["app-solicitar-turno"]],decls:17,vars:6,consts:[[3,"ngSubmit","formGroup"],["for","especialidad"],["id","especialidad","formControlName","especialidad",3,"change"],[3,"value",4,"ngFor","ngForOf"],["for","especialista"],["id","especialista","formControlName","especialista",3,"change"],[3,"value","nombreEspecialista",4,"ngFor","ngForOf"],["for","horario"],["id","horario","formControlName","horario"],[4,"ngIf"],[3,"usuarioSeleccionado",4,"ngIf"],["type","submit"],[3,"value"],[3,"nombreEspecialista","value"],["for","paciente"],["id","paciente","formControlName","paciente","type","text",3,"readonly"],["for","dni"],["id","dni","formControlName","dni","type","text",3,"readonly"],["for","obraSocial"],["id","obraSocial","formControlName","obraSocial","type","text",3,"readonly"],[3,"usuarioSeleccionado"]],template:function(e,i){e&1&&(s(0,"form",0),g("ngSubmit",function(){return i.solicitarTurno()}),s(1,"label",1),c(2,"Especialidad:"),a(),s(3,"select",2),g("change",function(n){return i.onEspecialidadChange(n)}),S(4,it,2,2,"option",3),a(),s(5,"label",4),c(6,"Especialista:"),a(),s(7,"select",5),g("change",function(n){return i.onEspecialistaChange(n)}),S(8,ot,2,2,"option",6),a(),s(9,"label",7),c(10,"Horario:"),a(),s(11,"select",8),S(12,nt,2,4,"option",3),a(),S(13,rt,10,3,"div",9)(14,at,1,0,"app-listado-paciente",10),s(15,"button",11),c(16,"Solicitar Turno"),a()()),e&2&&(u("formGroup",i.turnoForm),l(4),u("ngForOf",i.especialidades),l(4),u("ngForOf",i.especialistas),l(4),u("ngForOf",i.horarios),l(),u("ngIf",i.isAdmin),l(),u("ngIf",i.isAdmin))},dependencies:[R,$,ae,Ue,Le,oe,Be,ne,re,Ge,He,Qe],styles:['@charset "UTF-8";form[_ngcontent-%COMP%]{max-width:800px;margin:20px auto;padding:30px;border:2px solid #007bff;border-radius:15px;background-color:#e0f7fa;box-shadow:0 4px 20px #0003}label[_ngcontent-%COMP%]{font-weight:700;margin-bottom:5px;display:block;color:#007bff}input[type=text][_ngcontent-%COMP%], select[_ngcontent-%COMP%]{width:100%;padding:12px;border:1px solid #007bff;border-radius:6px;font-size:16px;margin-bottom:15px;box-sizing:border-box;transition:border-color .3s,background-color .3s;background-color:#f1f1f1}input[type=text][_ngcontent-%COMP%]:focus, select[_ngcontent-%COMP%]:focus{border-color:#0056b3;outline:none;background-color:#fff}div[ngIf][_ngcontent-%COMP%]{color:#dc3545;font-size:.9em;margin-top:-10px;margin-bottom:10px}button[type=submit][_ngcontent-%COMP%]{background-color:#007bff;color:#fff;padding:12px 15px;border:none;border-radius:6px;cursor:pointer;transition:background-color .3s,transform .2s;width:100%;font-size:1em}button[type=submit][_ngcontent-%COMP%]:hover{background-color:#0056b3;transform:translateY(-2px)}div[_ngcontent-%COMP%]{margin-bottom:20px}div[_ngcontent-%COMP%]   *[_ngcontent-%COMP%]   ngIf[_ngcontent-%COMP%]{margin-bottom:20px}']})};var pe=class r{constructor(t,e){this.authService=t;this.router=e}canActivate(t,e){return this.authService.getUser().pipe(L(i=>i&&(i.role==="administrador"||i.role==="paciente")?!0:(this.router.navigate(["/bienvenida"]),console.log("Acceso denegado: no es administrador ni paciente"),!1)))}static \u0275fac=function(e){return new(e||r)(y(P),y(z))};static \u0275prov=A({token:r,factory:r.\u0275fac,providedIn:"root"})};var M=W(Y());var st=()=>["lunes","martes","mi\xE9rcoles","jueves","viernes","s\xE1bado","domingo"];function ct(r,t){if(r&1){let e=C();s(0,"div")(1,"label"),c(2),Ne(3,"titlecase"),a(),s(4,"div",5)(5,"input",6),Ce("ngModelChange",function(o){let n=v(e).$implicit,d=f(2);return Ee(d.disponibilidadSemana[n].horaInicio,o)||(d.disponibilidadSemana[n].horaInicio=o),_(o)}),a(),s(6,"input",7),Ce("ngModelChange",function(o){let n=v(e).$implicit,d=f(2);return Ee(d.disponibilidadSemana[n].horaFin,o)||(d.disponibilidadSemana[n].horaFin=o),_(o)}),a()()()}if(r&2){let e=t.$implicit,i=f(2);l(2),b(ke(3,7,e)),l(3),_e("name","",e,"HoraInicio"),Se("ngModel",i.disponibilidadSemana[e].horaInicio),l(),_e("name","",e,"HoraFin"),Se("ngModel",i.disponibilidadSemana[e].horaFin)}}function lt(r,t){if(r&1){let e=C();s(0,"div")(1,"form",2),g("ngSubmit",function(){v(e);let o=f();return _(o.guardarDisponibilidad())}),S(2,ct,7,9,"div",3),s(3,"button",4),c(4,"Guardar Disponibilidad"),a()()()}r&2&&(l(2),u("ngForOf",Ae(1,st)))}function dt(r,t){r&1&&(s(0,"p"),c(1,"Selecciona un especialista para asignar disponibilidad."),a())}var ue=class r{constructor(t){this.turnoService=t}usuarioSeleccionado=null;disponibilidadSemana={lunes:{horaInicio:"",horaFin:""},martes:{horaInicio:"",horaFin:""},mi\u00E9rcoles:{horaInicio:"",horaFin:""},jueves:{horaInicio:"",horaFin:""},viernes:{horaInicio:"",horaFin:""},s\u00E1bado:{horaInicio:"",horaFin:""},domingo:{horaInicio:"",horaFin:""}};horariosClinica={lunes:{apertura:"08:00",cierre:"19:00"},martes:{apertura:"08:00",cierre:"19:00"},mi\u00E9rcoles:{apertura:"08:00",cierre:"19:00"},jueves:{apertura:"08:00",cierre:"19:00"},viernes:{apertura:"08:00",cierre:"19:00"},s\u00E1bado:{apertura:"08:00",cierre:"14:00"},domingo:{apertura:null,cierre:null}};mostrarUsuario(t){this.usuarioSeleccionado=t}esHorarioValido(t){let e=parseInt(t.split(":")[1],10);return e===0||e===30}guardarDisponibilidad(){return p(this,null,function*(){if(!this.usuarioSeleccionado){M.default.fire("Error","Por favor, selecciona un especialista.","error");return}for(let t in this.disponibilidadSemana){let e=this.disponibilidadSemana[t],i=this.horariosClinica[t];if(e.horaInicio&&!this.esHorarioValido(e.horaInicio)||e.horaFin&&!this.esHorarioValido(e.horaFin)){M.default.fire("Error",`Los horarios de ${t} deben ser en intervalos de media hora (ej. 08:00 o 08:30).`,"error");return}if(i.apertura&&i.cierre){if(e.horaInicio<i.apertura||e.horaInicio>i.cierre||e.horaFin<i.apertura||e.horaFin>i.cierre){M.default.fire("Error",`El horario de ${t} debe estar entre ${i.apertura} y ${i.cierre}.`,"error");return}if(e.horaInicio>=e.horaFin){M.default.fire("Error",`En ${t}, la hora de inicio debe ser anterior a la hora de fin.`,"error");return}}else if(e.horaInicio||e.horaFin){M.default.fire("Error",`El d\xEDa ${t} est\xE1 cerrado, no debe haber horarios de disponibilidad.`,"error");return}}try{yield this.turnoService.guardarDisponibilidad(this.usuarioSeleccionado.uid,this.disponibilidadSemana),this.generarTurnosProximos15Dias(),M.default.fire("\xC9xito","Disponibilidad guardada correctamente.","success")}catch(t){console.error("Error al guardar la disponibilidad:",t),M.default.fire("Error","No se pudo guardar la disponibilidad.","error")}})}generarTurnosProximos15Dias(){return p(this,null,function*(){if(console.log("entramos a la creacion de turnos"),!this.usuarioSeleccionado){M.default.fire("Error","Por favor, selecciona un especialista.","error");return}let t=yield this.turnoService.obtenerDisponibilidad(this.usuarioSeleccionado.uid);if(!t){M.default.fire("Error","No se encontr\xF3 disponibilidad para el especialista seleccionado.","error");return}let e=[],i=new Date;for(let o=0;o<15;o++){let n=new Date(i);n.setDate(i.getDate()+o);let d=this.obtenerNombreDia(n);if(t[d]){let m=t[d];if(m.horaInicio&&m.horaFin){let w=m.horaInicio;for(;w<m.horaFin;){let O=this.sumarMinutos(w,30);O<=m.horaFin&&e.push({especialista_id:this.usuarioSeleccionado.uid,fecha:n.toISOString().split("T")[0],hora_inicio:w,hora_fin:O,estado:"disponible"}),w=O}}}}try{yield this.turnoService.guardarTurnos(e),M.default.fire("\xC9xito","Turnos generados para los pr\xF3ximos 15 d\xEDas.","success")}catch(o){console.error("Error al generar los turnos:",o),M.default.fire("Error","No se pudieron generar los turnos.","error")}})}obtenerNombreDia(t){return["domingo","lunes","martes","mi\xE9rcoles","jueves","viernes","s\xE1bado"][t.getDay()]}sumarMinutos(t,e){let[i,o]=t.split(":").map(Number),n=new Date;n.setHours(i,o+e);let d=String(n.getHours()).padStart(2,"0"),m=String(n.getMinutes()).padStart(2,"0");return`${d}:${m}`}static \u0275fac=function(e){return new(e||r)(E(k))};static \u0275cmp=N({type:r,selectors:[["app-gestion-horarios"]],decls:5,vars:3,consts:[[3,"usuarioSeleccionado"],[4,"ngIf"],[3,"ngSubmit"],[4,"ngFor","ngForOf"],["type","submit"],[1,"horarios"],["type","time","placeholder","Hora de inicio",3,"ngModelChange","ngModel","name"],["type","time","placeholder","Hora de fin",3,"ngModelChange","ngModel","name"]],template:function(e,i){e&1&&(s(0,"app-listado-especialista",0),g("usuarioSeleccionado",function(n){return i.mostrarUsuario(n)}),a(),s(1,"h2"),c(2),a(),S(3,lt,5,2,"div",1)(4,dt,2,0,"p",1)),e&2&&(l(2),q("Asignar Disponibilidad para ",(i.usuarioSeleccionado==null?null:i.usuarioSeleccionado.nombre)||"Selecciona un especialista",""),l(),u("ngIf",i.usuarioSeleccionado),l(),u("ngIf",!i.usuarioSeleccionado))},dependencies:[R,$,ae,oe,ne,re,Je,je,ze,Ve],styles:['@charset "UTF-8";form[_ngcontent-%COMP%]{max-width:800px;margin:20px auto;padding:30px;border:2px solid #007bff;border-radius:15px;background-color:#e0f7fa;box-shadow:0 4px 20px #0003}label[_ngcontent-%COMP%]{font-weight:700;margin-bottom:5px;display:block;color:#007bff}.horarios[_ngcontent-%COMP%]{display:flex;gap:15px}input[type=time][_ngcontent-%COMP%]{width:48%;padding:12px;border:1px solid #007bff;border-radius:6px;font-size:16px;box-sizing:border-box;background-color:#f1f1f1;transition:border-color .3s,background-color .3s}input[type=time][_ngcontent-%COMP%]:focus{border-color:#0056b3;outline:none;background-color:#fff}button[type=submit][_ngcontent-%COMP%]{background-color:#007bff;color:#fff;padding:12px 15px;border:none;border-radius:6px;cursor:pointer;transition:background-color .3s,transform .2s;width:100%;font-size:1em}button[type=submit][_ngcontent-%COMP%]:hover{background-color:#0056b3;transform:translateY(-2px)}div[_ngcontent-%COMP%]{margin-bottom:20px}']})};var U=W(Y());function pt(r,t){if(r&1){let e=C();s(0,"div")(1,"input",1),g("change",function(o){v(e);let n=f();return _(n.onEspecialidadChange(o))}),a(),c(2),a()}if(r&2){let e=t.$implicit;l(),u("value",e.nombre),l(),q(" ",e.nombre,`
`)}}function ut(r,t){if(r&1){let e=C();s(0,"div")(1,"input",2),g("change",function(o){let n=v(e).$implicit,d=f();return _(d.onEspecialistaChange(o,n))}),a(),c(2),a()}if(r&2){let e=t.$implicit;l(),u("value",e.uid),l(),H(" ",e.nombre," ",e.apellido,`
`)}}function mt(r,t){if(r&1){let e=C();s(0,"button",5),g("click",function(){v(e);let o=f().$implicit,n=f();return _(n.cancelarTurno(o))}),c(1," Cancelar Turno "),a()}}function ft(r,t){r&1&&(s(0,"button",6),c(1," no acciones "),a())}function ht(r,t){if(r&1&&(s(0,"tr")(1,"td"),c(2),a(),s(3,"td"),c(4),a(),s(5,"td"),c(6),a(),s(7,"td"),c(8),a(),s(9,"td"),c(10),a(),s(11,"td"),c(12),a(),s(13,"td"),c(14),a(),s(15,"td"),c(16),a(),s(17,"td"),S(18,mt,2,0,"button",3)(19,ft,2,0,"button",4),a()()),r&2){let e=t.$implicit,i=f();l(2),b(e.dni),l(2),b(e.paciente),l(2),b(e.obraSocial),l(2),b(i.nombreEspecialista),l(2),b(e.especialidad),l(2),b(e.fecha),l(2),H("",e.hora_inicio," - ",e.hora_fin,""),l(2),b(e.estado),l(2),u("ngIf",e.estado==="solicitado"),l(),u("ngIf",e.estado!=="solicitado")}}var me=class r{constructor(t,e,i){this.turnoService=t;this.especialidadService=e;this.especialistaService=i}especialidades=[];especialistas=[];horarios=[];nombreEspecialista;especialidadSeleccionada="";ngOnInit(){this.cargarEspecialidades()}cargarEspecialidades(){return p(this,null,function*(){this.especialidades=yield this.especialidadService.getEspecialidades()})}onEspecialidadChange(t){return p(this,null,function*(){let e=t.target;if(this.especialidadSeleccionada=e.value,this.especialidadSeleccionada)try{this.especialistas=yield this.especialistaService.getEspecialistasPorEspecialidad(this.especialidadSeleccionada),this.horarios=[]}catch{U.default.fire("Error","No se pudieron cargar los especialistas","error")}else this.especialistas=[],this.horarios=[]})}onEspecialistaChange(t,e){return p(this,null,function*(){let o=t.target.value;if(o){this.nombreEspecialista=`${e.nombre} ${e.apellido}`;try{let n=yield this.turnoService.obtenerTurnosDisponiblesEspecialista(o);this.horarios=n.filter(d=>d.especialidad===this.especialidadSeleccionada),this.horarios.sort((d,m)=>new Date(d.fecha).getTime()-new Date(m.fecha).getTime())}catch{U.default.fire("Error","No se pudieron cargar los turnos","error")}}else this.horarios=[]})}cancelarTurno(t){return p(this,null,function*(){if(["Aceptado","Realizado","Rechazado"].includes(t.estado)){U.default.fire("Aviso","No se puede cancelar un turno aceptado, realizado o rechazado","info");return}let{isConfirmed:e,value:i}=yield U.default.fire({title:"\xBFEst\xE1s seguro de cancelar el turno?",text:"Por favor, ingresa el motivo de la cancelaci\xF3n",input:"textarea",inputPlaceholder:"Escribe aqu\xED el motivo...",inputAttributes:{"aria-label":"Motivo de cancelaci\xF3n"},confirmButtonText:"Cancelar turno",showCancelButton:!0,cancelButtonText:"Volver",inputValidator:o=>o?null:"El motivo es requerido para cancelar el turno"});if(e&&i)try{yield this.turnoService.cancelarTurno(t.id,i),U.default.fire("Cancelado","El turno ha sido cancelado con \xE9xito","success"),yield this.onEspecialistaChange({target:{value:t.especialistaId}},{nombre:t.nombreEspecialista,apellido:t.apellidoEspecialista})}catch{U.default.fire("Error","No se pudo cancelar el turno","error")}})}static \u0275fac=function(e){return new(e||r)(E(k),E(se),E(G))};static \u0275cmp=N({type:r,selectors:[["app-gestionar-turnos"]],decls:31,vars:3,consts:[[4,"ngFor","ngForOf"],["type","radio","name","especialidad",3,"change","value"],["type","radio","name","especialista",3,"change","value"],["class","cancelar",3,"click",4,"ngIf"],["class","no-accion","disabled","",4,"ngIf"],[1,"cancelar",3,"click"],["disabled","",1,"no-accion"]],template:function(e,i){e&1&&(s(0,"h2"),c(1,"Listado de Turnos"),a(),s(2,"label"),c(3,"Especialidad:"),a(),S(4,pt,3,2,"div",0),s(5,"label"),c(6,"Especialista:"),a(),S(7,ut,3,3,"div",0),s(8,"table")(9,"thead")(10,"tr")(11,"th"),c(12,"DNI"),a(),s(13,"th"),c(14,"Paciente"),a(),s(15,"th"),c(16,"Obra Social"),a(),s(17,"th"),c(18,"Especialista"),a(),s(19,"th"),c(20,"Especialidad"),a(),s(21,"th"),c(22,"Fecha"),a(),s(23,"th"),c(24,"Horario"),a(),s(25,"th"),c(26,"Estado"),a(),s(27,"th"),c(28,"Acciones"),a()()(),s(29,"tbody"),S(30,ht,20,11,"tr",0),a()()),e&2&&(l(4),u("ngForOf",i.especialidades),l(3),u("ngForOf",i.especialistas),l(23),u("ngForOf",i.horarios))},dependencies:[R,$],styles:['@charset "UTF-8";h2[_ngcontent-%COMP%]{color:#154360;text-align:center;margin-bottom:1rem;font-weight:700;font-size:1.5rem}label[_ngcontent-%COMP%]{font-weight:700;color:#154360;margin-right:.5rem}select[_ngcontent-%COMP%]{padding:.5rem;border-radius:4px;border:1px solid #D5D8DC;margin-bottom:1rem;margin-right:1rem;outline:none;transition:border-color .3s ease}select[_ngcontent-%COMP%]:focus{border-color:#154360}table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;background-color:#fff;box-shadow:0 4px 8px #0000001a;margin:0 auto;border-radius:8px;overflow:hidden}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{padding:1rem;text-align:left}thead[_ngcontent-%COMP%]{background-color:#154360;color:#fff}thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-weight:700;text-transform:uppercase;letter-spacing:.05em}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{transition:background-color .3s ease,transform .2s ease}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#f2f3f4}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#d5e8e8;transform:scale(1.01)}tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-bottom:1px solid #F2F3F4}button[_ngcontent-%COMP%]{padding:.5rem 1rem;font-size:.9rem;border:none;border-radius:4px;color:#fff;cursor:pointer;transition:background-color .3s ease,transform .2s ease;width:100%}button.no-accion[_ngcontent-%COMP%]{background-color:#b0e915}button.cancelar[_ngcontent-%COMP%]{background-color:#c0392b}button.cancelar[_ngcontent-%COMP%]:hover{background-color:#a93226;transform:scale(1.05)}td.estado[_ngcontent-%COMP%]{font-weight:700;color:#1e8449}td.estado.inhabilitado[_ngcontent-%COMP%]{color:#c0392b}']})};var h=W(Y());function gt(r,t){if(r&1){let e=C();s(0,"div")(1,"input",1),g("change",function(o){v(e);let n=f();return _(n.onEspecialidadChange(o))}),a(),c(2),a()}if(r&2){let e=t.$implicit;l(),u("value",e),l(),q(" ",e,`
`)}}function bt(r,t){if(r&1){let e=C();s(0,"div")(1,"input",2),g("change",function(o){let n=v(e).$implicit,d=f();return _(d.onPacienteChange(o,n))}),a(),c(2),a()}if(r&2){let e=t.$implicit;l(),u("value",e.uid),l(),H(" ",e.nombre," ",e.apellido,`
`)}}function vt(r,t){if(r&1){let e=C();s(0,"button",7),g("click",function(){v(e);let o=f().$implicit,n=f();return _(n.cancelarTurno(o))}),c(1," Cancelar Turno "),a()}}function _t(r,t){if(r&1){let e=C();s(0,"button",8),g("click",function(){v(e);let o=f().$implicit,n=f();return _(n.aceptarTurno(o))}),c(1," aceptar turno "),a()}}function St(r,t){if(r&1){let e=C();s(0,"button",9),g("click",function(){v(e);let o=f().$implicit,n=f();return _(n.finalizarTurno(o))}),c(1," finalizar turno "),a()}}function Et(r,t){if(r&1){let e=C();s(0,"button",10),g("click",function(){v(e);let o=f().$implicit,n=f();return _(n.verResenaTurno(o))}),c(1," finalizar turno "),a()}}function Ct(r,t){if(r&1&&(s(0,"tr")(1,"td"),c(2),a(),s(3,"td"),c(4),a(),s(5,"td"),c(6),a(),s(7,"td"),c(8),a(),s(9,"td"),c(10),a(),s(11,"td"),c(12),a(),s(13,"td"),c(14),a(),s(15,"td"),c(16),a(),s(17,"td"),S(18,vt,2,0,"button",3)(19,_t,2,0,"button",4)(20,St,2,0,"button",5)(21,Et,2,0,"button",6),a()()),r&2){let e=t.$implicit,i=f();l(2),b(e.dni),l(2),b(i.nombrePaciente),l(2),b(e.obraSocial),l(2),b(e.especialista),l(2),H("",i.especialistaIniciado.nombre," ",i.especialistaIniciado.apellido,""),l(2),b(e.fecha),l(2),H("",e.hora_inicio," - ",e.hora_fin,""),l(2),b(e.estado),l(2),u("ngIf",e.estado==="solicitado"),l(),u("ngIf",e.estado==="solicitado"),l(),u("ngIf",e.estado==="aceptado"),l(),u("ngIf",e.estado==="realizado")}}var fe=class r{constructor(t,e,i){this.turnoService=t;this.especialistaService=e;this.authenticationService=i}especialidades=[];pacientes=[];horarios=[];nombrePaciente="";especialidadSeleccionada="";especialistaIniciado;pacienteSeleccionadoId="";ngOnInit(){this.authenticationService.getUser().subscribe(t=>{t?(this.especialistaIniciado=t,this.cargarPacientes(t.uid),this.cargarEspecialidades()):h.default.fire("Error","No se encontr\xF3 el usuario","error")})}cargarPacientes(t){return p(this,null,function*(){try{this.pacientes=yield this.especialistaService.getPacientesUnicosPorEspecialista(t),console.log("Pacientes cargados:",this.pacientes)}catch(e){console.error("Error cargando pacientes:",e),h.default.fire("Error","No se pudieron cargar los pacientes","error")}})}cargarEspecialidades(){return p(this,null,function*(){this.especialistaIniciado&&this.especialistaIniciado.especialidades?(this.especialidades=this.especialistaIniciado.especialidades,console.log("Especialidades cargadas:",this.especialidades)):(this.especialidades=[],h.default.fire("Error","No se encontraron especialidades para este especialista","error"))})}onEspecialidadChange(t){return p(this,null,function*(){let e=t.target;if(this.especialidadSeleccionada=e.value,this.especialidadSeleccionada)try{this.pacientes=yield this.especialistaService.getPacientesUnicosPorEspecialidad(this.especialistaIniciado.uid,this.especialidadSeleccionada),this.horarios=[]}catch{h.default.fire("Error","No se pudieron cargar los pacientes","error")}else this.pacientes=[],this.horarios=[]})}onPacienteChange(t,e){return p(this,null,function*(){let i=t.target;if(this.pacienteSeleccionadoId=i.value,this.pacienteSeleccionadoId){this.nombrePaciente=`${e.nombre} ${e.apellido}`;try{let o=yield this.turnoService.obtenerTurnosDisponiblesPaciente(this.pacienteSeleccionadoId);this.horarios=o.filter(n=>n.especialidad===this.especialidadSeleccionada),this.horarios.sort((n,d)=>new Date(n.fecha).getTime()-new Date(d.fecha).getTime())}catch{h.default.fire("Error","No se pudieron cargar los turnos","error")}}else this.horarios=[]})}cancelarTurno(t){return p(this,null,function*(){if(["Aceptado","Realizado","Rechazado"].includes(t.estado)){h.default.fire("Aviso","No se puede cancelar un turno aceptado, realizado o rechazado","info");return}let{isConfirmed:e,value:i}=yield h.default.fire({title:"\xBFEst\xE1s seguro de cancelar el turno?",text:"Por favor, ingresa el motivo de la cancelaci\xF3n",input:"textarea",inputPlaceholder:"Escribe aqu\xED el motivo...",inputAttributes:{"aria-label":"Motivo de cancelaci\xF3n"},confirmButtonText:"Cancelar turno",showCancelButton:!0,cancelButtonText:"Volver",inputValidator:o=>o?null:"El motivo es requerido para cancelar el turno"});if(e&&i)try{yield this.turnoService.cancelarTurno(t.id,i),h.default.fire("Cancelado","El turno ha sido cancelado con \xE9xito","success"),this.onPacienteChange({target:{value:this.pacienteSeleccionadoId}},{nombre:this.nombrePaciente})}catch{h.default.fire("Error","No se pudo cancelar el turno","error")}})}aceptarTurno(t){return p(this,null,function*(){if(["Aceptado","Realizado","Rechazado"].includes(t.estado)){h.default.fire("Aviso","No se puede cancelar un turno aceptado, realizado o rechazado","info");return}let{isConfirmed:e}=yield h.default.fire({title:"\xBFEst\xE1s seguro de aceptar el turno?",confirmButtonText:"aceptar turno",showCancelButton:!0,cancelButtonText:"Volver"});if(e)try{yield this.turnoService.aceptarTurno(t.id),h.default.fire("aceptado","El turno ha sido aceptado con \xE9xito","success"),this.onPacienteChange({target:{value:this.pacienteSeleccionadoId}},{nombre:this.nombrePaciente})}catch{h.default.fire("Error","No se pudo aceptar el turno","error")}})}finalizarTurno(t){return p(this,null,function*(){if(t.estado!=="aceptado"){h.default.fire("Aviso","Solo puedes finalizar un turno aceptado","info");return}let{isConfirmed:e,value:{diagnostico:i,rese\u00F1a:o}}=yield h.default.fire({title:"Finalizar Turno",html:`
        <label for="diagnostico">Diagn\xF3stico:</label>
        <textarea id="diagnostico" rows="3" style="width: 100%;" placeholder="Escribe aqu\xED el diagn\xF3stico..."></textarea>
        <label for="rese\xF1a">Rese\xF1a/Comentario:</label>
        <textarea id="rese\xF1a" rows="3" style="width: 100%;" placeholder="Escribe aqu\xED la rese\xF1a..."></textarea>
      `,focusConfirm:!1,preConfirm:()=>({diagnostico:document.getElementById("diagnostico").value,rese\u00F1a:document.getElementById("rese\xF1a").value}),confirmButtonText:"Finalizar Turno",showCancelButton:!0,cancelButtonText:"Cancelar"});if(e){if(!i||!o){h.default.fire("Error","Ambos campos son obligatorios","error");return}try{yield this.turnoService.finalizarTurno(t.id,{diagnostico:i,rese\u00F1a:o}),h.default.fire("Finalizado","El turno ha sido finalizado con \xE9xito","success"),this.onPacienteChange({target:{value:this.pacienteSeleccionadoId}},{nombre:this.nombrePaciente})}catch{h.default.fire("Error","No se pudo finalizar el turno","error")}}})}verResenaTurno(t){return p(this,null,function*(){if(t.estado!=="realizado"){h.default.fire("Aviso","Solo puedes ver la rese\xF1a de un turno realizado","info");return}try{yield this.turnoService.obtenerRese\u00F1aTurno(t.id)}catch(e){console.error("Error al obtener rese\xF1a:",e),h.default.fire("Error","No se pudo obtener la rese\xF1a","error")}})}static \u0275fac=function(e){return new(e||r)(E(k),E(G),E(P))};static \u0275cmp=N({type:r,selectors:[["app-turnos-especialista"]],decls:31,vars:3,consts:[[4,"ngFor","ngForOf"],["type","radio","name","especialidad",3,"change","value"],["type","radio","name","paciente",3,"change","value"],["class","cancelar",3,"click",4,"ngIf"],["class","aceptar",3,"click",4,"ngIf"],["class","finalizar",3,"click",4,"ngIf"],["class","realizado",3,"click",4,"ngIf"],[1,"cancelar",3,"click"],[1,"aceptar",3,"click"],[1,"finalizar",3,"click"],[1,"realizado",3,"click"]],template:function(e,i){e&1&&(s(0,"h2"),c(1,"Listado de Turnos"),a(),s(2,"label"),c(3,"Especialidad:"),a(),S(4,gt,3,2,"div",0),s(5,"label"),c(6,"Pacientes:"),a(),S(7,bt,3,3,"div",0),s(8,"table")(9,"thead")(10,"tr")(11,"th"),c(12,"DNI"),a(),s(13,"th"),c(14,"Paciente"),a(),s(15,"th"),c(16,"Obra Social"),a(),s(17,"th"),c(18,"Especialista"),a(),s(19,"th"),c(20,"Especialidad"),a(),s(21,"th"),c(22,"Fecha"),a(),s(23,"th"),c(24,"Horario"),a(),s(25,"th"),c(26,"Estado"),a(),s(27,"th"),c(28,"Acciones"),a()()(),s(29,"tbody"),S(30,Ct,22,14,"tr",0),a()()),e&2&&(l(4),u("ngForOf",i.especialidades),l(3),u("ngForOf",i.pacientes),l(23),u("ngForOf",i.horarios))},dependencies:[R,$],styles:['@charset "UTF-8";h2[_ngcontent-%COMP%]{color:#154360;text-align:center;margin-bottom:1rem;font-weight:700;font-size:1.5rem}label[_ngcontent-%COMP%]{font-weight:700;color:#154360;margin-right:.5rem}select[_ngcontent-%COMP%]{padding:.5rem;border-radius:4px;border:1px solid #D5D8DC;margin-bottom:1rem;margin-right:1rem;outline:none;transition:border-color .3s ease}select[_ngcontent-%COMP%]:focus{border-color:#154360}table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;background-color:#fff;box-shadow:0 4px 8px #0000001a;margin:0 auto;border-radius:8px;overflow:hidden}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{padding:1rem;text-align:left}thead[_ngcontent-%COMP%]{background-color:#154360;color:#fff}thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{font-weight:700;text-transform:uppercase;letter-spacing:.05em}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{transition:background-color .3s ease,transform .2s ease}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(2n){background-color:#f2f3f4}tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#d5e8e8;transform:scale(1.01)}tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border-bottom:1px solid #F2F3F4}button[_ngcontent-%COMP%]{padding:.5rem 1rem;font-size:.9rem;border:none;border-radius:4px;color:#fff;cursor:pointer;transition:background-color .3s ease,transform .2s ease;width:100%}button.aceptar[_ngcontent-%COMP%]{background-color:#b0e915}button.aceptar[_ngcontent-%COMP%]:hover{background-color:#82b825;transform:scale(1.05)}button.cancelar[_ngcontent-%COMP%]{background-color:#c0392b}button.cancelar[_ngcontent-%COMP%]:hover{background-color:#a93226;transform:scale(1.05)}td.estado[_ngcontent-%COMP%]{font-weight:700;color:#1e8449}td.estado.inhabilitado[_ngcontent-%COMP%]{color:#c0392b}']})};var he=class r{constructor(t,e){this.authService=t;this.router=e}canActivate(t,e){return this.authService.getUser().pipe(L(i=>i&&i.role==="especialista"?!0:(this.router.navigate(["/bienvenida"]),console.log("no es especialista verifica las cosas bien"),!1)))}static \u0275fac=function(e){return new(e||r)(y(P),y(z))};static \u0275prov=A({token:r,factory:r.\u0275fac,providedIn:"root"})};var ge=class r{static \u0275fac=function(e){return new(e||r)};static \u0275cmp=N({type:r,selectors:[["app-turnos-pacientes"]],decls:2,vars:0,template:function(e,i){e&1&&(s(0,"p"),c(1,"turnos-pacientes works!"),a())}})};var be=class r{constructor(t,e){this.authService=t;this.router=e}canActivate(t,e){return this.authService.getUser().pipe(L(i=>i&&i.role==="paciente"?!0:(this.router.navigate(["/bienvenida"]),console.log("no es paciente verifica las cosas bien"),!1)))}static \u0275fac=function(e){return new(e||r)(y(P),y(z))};static \u0275prov=A({token:r,factory:r.\u0275fac,providedIn:"root"})};var xt=[{path:"solicitar-turno",component:le,canActivate:[pe]},{path:"gestionar-horarios",component:ue,canActivate:[Ie]},{path:"gestionar-turnos",component:me,canActivate:[Ie]},{path:"turnos-especialista",component:fe,canActivate:[he]},{path:"turnos-pacientes",component:ge,canActivate:[be]}],ve=class r{static \u0275fac=function(e){return new(e||r)};static \u0275mod=ee({type:r});static \u0275inj=Z({imports:[ye.forChild(xt),ye]})};var Xe=class r{static \u0275fac=function(e){return new(e||r)};static \u0275mod=ee({type:r});static \u0275inj=Z({imports:[xe,ve,Ye,Ke,xe,We]})};export{Xe as SeccionTurnosModule};
